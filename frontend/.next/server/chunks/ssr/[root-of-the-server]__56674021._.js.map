{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/med/Desktop/Git/sutor/frontend/src/lib/LatexContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState } from \"react\";\n\nconst LatexContext = createContext<{\n  latexContent: string | null;\n  setLatexContent: (content: string | null) => void;\n}>({\n  latexContent: null,\n  setLatexContent: () => {},\n});\n\nexport const LatexProvider = ({ children }: { children: React.ReactNode }) => {\n  const [latexContent, setLatexContent] = useState<string | null>(null);\n\n  return (\n    <LatexContext.Provider value={{ latexContent, setLatexContent }}>\n      {children}\n    </LatexContext.Provider>\n  );\n};\n\nexport const useLatex = () => useContext(LatexContext);\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAG9B;IACD,cAAc;IACd,iBAAiB,KAAO;AAC1B;AAEO,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBAC3D;;;;;;AAGP;AAEO,MAAM,WAAW,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/med/Desktop/Git/sutor/frontend/src/app/chat/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef } from 'react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowUp, Copy, Globe, LucideAArrowDown, Paperclip, Recycle, RefreshCcw } from 'lucide-react';\nimport { remark } from 'remark';\nimport html from 'remark-html';\nimport { useLatex } from \"@/lib/LatexContext\";\n\nasync function renderMarkdown(markdown: string) {\n  const processedContent = await remark().use(html).process(markdown);\n  return processedContent.toString();\n}\n\nexport default function Chat() {\n  interface Message {\n    text: string;\n    sender: \"user\" | \"bot\";\n    htmlContent?: string; // Add htmlContent to store rendered HTML\n  }\n\n  const [messages, setMessages] = useState<Message[]>([]);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  // const handleSendMessage = () => {\n  //   const messageText = textareaRef.current?.value;\n  //   if (messageText && messageText.trim() !== \"\") {\n  //     setMessages((prevMessages) => [...prevMessages, { text: messageText, sender: \"user\" }]);\n      \n  //     // send to ai chat provider\n      \n      \n  //     // =============\n      \n  //     if (textareaRef.current) {\n  //       textareaRef.current.value = \"\";\n  //     }\n\n  //     // Simulate a bot response after a short delay\n  //     setTimeout(() => {\n  //       setMessages((prevMessages) => [...prevMessages, { text: \"This is a simple bot response.\", sender: \"bot\" }]);\n  //     }, 1000);\n  //   }\n  // };\n\n  // const handleSendMessage = async () => {\n  //   const messageText = textareaRef.current?.value;\n  //   if (!messageText || messageText.trim() === \"\") return;\n\n  //   // Add user's message\n  //   setMessages((prevMessages) => [...prevMessages, { text: messageText, sender: \"user\" }]);\n    \n  //   if (textareaRef.current) {\n  //     textareaRef.current.value = \"\";\n  //   }\n\n  //   try {\n  //     const response = await fetch('https://api.groq.com/openai/v1/chat/completions', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Authorization': 'Bearer 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', // Replace with your actual Groq API key\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         model: 'llama-3.3-70b-versatile',\n  //         messages: [\n  //           {\n  //             role: 'user',\n  //             content: messageText, // Send actual user message\n  //           },\n  //         ],\n  //       }),\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error(`HTTP error! status: ${response.status}`);\n  //     }\n\n  //     const data = await response.json();\n  //     const botReply = data.choices?.[0]?.message?.content ?? \"No response from bot.\";\n\n  //     // Add bot's response\n  //     setMessages((prevMessages) => [...prevMessages, { text: botReply, sender: \"bot\" }]);\n  //   } catch (error) {\n  //     console.error('Error fetching Groq API:', error);\n  //     setMessages((prevMessages) => [...prevMessages, { text: \"Error contacting bot.\", sender: \"bot\" }]);\n  //   }\n  // };\n  \n  const { setLatexContent } = useLatex();\n  const handleSendMessage = async () => {\n    const messageText = textareaRef.current?.value;\n    if (!messageText || messageText.trim() === \"\") return;\n\n    // Add user's message\n    setMessages((prevMessages) => [...prevMessages, { text: messageText, sender: \"user\" }]);\n\n    if (textareaRef.current) {\n      textareaRef.current.value = \"\";\n    }\n\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: messageText,\n          attachment: null, // Or provide the attachment filename here if you have one\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const botReply = data.response ?? \"No response from bot.\";\n\n      // if latex\n      if (botReply.includes(\"```latex\")) {\n        const latex = botReply.split(\"```latex\")[1].split(\"```\")[0]; // extract LaTeX content\n        setLatexContent(latex);\n      }\n\n      const botHtmlContent = await renderMarkdown(botReply); // Process markdown\n\n      // Add bot's response\n      setMessages((prevMessages) => [...prevMessages, { text: botReply, sender: \"bot\", htmlContent: botHtmlContent }]);\n    } catch (error) {\n      console.error('Error fetching /chat API:', error);\n      setMessages((prevMessages) => [...prevMessages, { text: \"Error contacting bot.\", sender: \"bot\" }]);\n    }\n  };\n    \n  return (\n    <>\n    <div className='relative h-full flex flex-col'>\n\n      <div className=\"overflow-y-auto  h-full mb-40  \">\n        <div className=\"flex flex-col p-4  gap-6 w-full\">\n          {messages.map((message: Message, index: number) => (\n            <div key={index} className={`flex ${message.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`}>\n              <div className={` flex flex-col gap-3 ${message.sender === \"user\" ? \"   rounded-full max-w-2/3 px-5 py-3 bg-slate-200\" : \"w-full\"} `}>\n                {message.sender === \"user\" ? (\n                  <p>{message.text}</p>\n                ) : (\n                  <div className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: message.htmlContent || \"\" }} />\n                )}\n                <div className={`${message.sender === \"user\" ? \"   hidden\" : \"flex\"}`}>\n                  <div className='hover:bg-slate-200 rounded-lg cursor-pointer p-2 text-xs '>\n                    <Copy className='h-4'/>\n                  </div>\n                  <div className='hover:bg-slate-200 rounded-lg cursor-pointer p-2 text-xs '>\n                    <RefreshCcw className='h-4'/>\n                  </div>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"absolute bottom-0 left-0 w-full bg-white\">\n        <div className=\"flex justify-center items-center m-4 gap-4 \">\n          <div className='flex flex-col gap-2 min-h-16 w-full p-4 bg-slate-200 rounded-2xl'>\n            \n            <textarea\n              ref={textareaRef}\n              className=\"resize-none   outline-0  w-full pb-4\"\n              placeholder=\"Type your message here...\"\n              rows={1}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }}\n            />\n            {/* tools */}\n            <div className='flex justify-between'>\n\n              <div className='flex gap-4'>\n                <Button className='rounded-full' ><Paperclip /></Button>\n                <Button className='rounded-full'><Globe /></Button>\n              </div>\n              <div className=''>\n                <Button\n                  className=\"shadow rounded-full min-w-10 max-w-10 h-10 cursor-pointer \"\n                  onClick={handleSendMessage}\n                  >\n                  <ArrowUp />\n                </Button>\n\n              </div>\n            </div>\n          </div>\n\n            \n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/med/Desktop/Git/sutor/frontend/src/app/pdf/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { FileText } from \"lucide-react\";\nimport { useLatex } from \"@/lib/LatexContext\";\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Pdf() {\n  const { latexContent } = useLatex();\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const encodedSnipRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (!latexContent) {\n      setPdfUrl(null);\n      setLoading(false);\n      return;\n    }\n\n    const encoded = encodeURIComponent(latexContent);\n    const url = `https://latexonline.cc/compile?text=${encoded}`;\n    setPdfUrl(url);\n    setLoading(true);\n  }, [latexContent]);\n\n  const openInOverleaf = () => {\n    if (encodedSnipRef.current) {\n      encodedSnipRef.current.value = latexContent || \"\";\n      document.getElementById(\"overleaf_form\")?.submit();\n    }\n  };\n\n  return (\n    <>\n      {\n        latexContent && (\n          <div className=\"flex justify-between\">\n        <div className=\"w-full flex items-center p-4 text-sm text-slate-400\">\n          <p className=\"\">Preview</p>\n        </div>\n        <div className=\" transform  m-2 z-50\">\n          <Button\n            onClick={openInOverleaf}\n            type=\"button\"\n            className=\"bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-6 rounded-lg shadow-lg transition\"\n            >\n            Edit with Overleaf\n          </Button>\n        </div>\n      </div>\n\n        )\n      }\n      {latexContent ? (\n        <div className=\" relative min-h-screen  \">\n          {loading && (\n            // <div className=\"mb-2 text-center text-gray-500\">\n            //   Loading PDF preview...\n            // </div>\n            <div className=\"flex flex-col gap-4 p-8 items-center\">\n\n            <Skeleton className=\"h-5 w-16\" />\n            <Skeleton className=\"h-5 w-20\" />\n            <Skeleton className=\"h-5 w-60\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            <Skeleton className=\"h-5 w-full\" />\n            </div>\n\n          )}\n          {pdfUrl && (\n            <iframe\n              src={pdfUrl}\n              width=\"100%\"\n              height=\"600px\"\n              title=\"LaTeX PDF Preview\"\n              className=\"border border-gray-300 rounded-lg\"\n              onLoad={() => setLoading(false)}\n            />\n          )}\n\n          <form\n            id=\"overleaf_form\"\n            action=\"https://www.overleaf.com/docs\"\n            method=\"post\"\n            target=\"_blank\"\n            className=\"hidden\"\n          >\n            <textarea\n              name=\"snip\"\n              ref={encodedSnipRef}\n              defaultValue={latexContent}\n            />\n          </form>\n\n          {/* Absolute button centered at bottom using Tailwind */}\n          \n        </div>\n      ) : (\n        <div className=\" h-full\">\n          <div className=\"   h-full rounded-xl overflow-hidden \">\n            <div className=\"flex flex-col justify-center items-center h-full opacity-30\">\n              <FileText className=\"h-10 w-10\" />\n            </div>\n          </div>\n        </div>\n      )}\n      \n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,WAAQ,AAAD;IAChC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAuB;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc;YACjB,UAAU;YACV,WAAW;YACX;QACF;QAEA,MAAM,UAAU,mBAAmB;QACnC,MAAM,MAAM,CAAC,oCAAoC,EAAE,SAAS;QAC5D,UAAU;QACV,WAAW;IACb,GAAG;QAAC;KAAa;IAEjB,MAAM,iBAAiB;QACrB,IAAI,eAAe,OAAO,EAAE;YAC1B,eAAe,OAAO,CAAC,KAAK,GAAG,gBAAgB;YAC/C,SAAS,cAAc,CAAC,kBAAkB;QAC5C;IACF;IAEA,qBACE;;YAEI,8BACE,8OAAC;gBAAI,WAAU;;kCACjB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAG;;;;;;;;;;;kCAElB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,MAAK;4BACL,WAAU;sCACT;;;;;;;;;;;;;;;;;YAQN,6BACC,8OAAC;gBAAI,WAAU;;oBACZ,WACC,mDAAmD;oBACnD,2BAA2B;oBAC3B,SAAS;kCACT,8OAAC;wBAAI,WAAU;;0CAEf,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;oBAIrB,wBACC,8OAAC;wBACC,KAAK;wBACL,OAAM;wBACN,QAAO;wBACP,OAAM;wBACN,WAAU;wBACV,QAAQ,IAAM,WAAW;;;;;;kCAI7B,8OAAC;wBACC,IAAG;wBACH,QAAO;wBACP,QAAO;wBACP,QAAO;wBACP,WAAU;kCAEV,cAAA,8OAAC;4BACC,MAAK;4BACL,KAAK;4BACL,cAAc;;;;;;;;;;;;;;;;qCAQpB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAQlC","debugId":null}}]
}