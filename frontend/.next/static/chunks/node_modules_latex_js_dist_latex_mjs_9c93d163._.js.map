{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"latex.mjs","sources":["file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/he/he.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/types.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/symbols.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/documentclasses/base.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/documentclasses/article.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/documentclasses/report.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/documentclasses/book.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/latex-parser.pegjs.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/documentclasses/index.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/xcolor.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/color.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/echo.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/gensymb.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/graphicx.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/index.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/graphics.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/hyperref.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/latexsym.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/multicol.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/stix.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/textcomp.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/packages/textgreek.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_freeGlobal.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_root.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_Symbol.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_getRawTag.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_objectToString.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseGetTag.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isObject.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isFunction.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_isMasked.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_coreJsData.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_toSource.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseIsNative.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_getValue.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_getNative.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_defineProperty.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseAssignValue.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/eq.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_assignValue.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_copyObject.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/identity.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_apply.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_overRest.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/constant.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseSetToString.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_shortOut.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_setToString.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseRest.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isLength.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isArrayLike.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_isIndex.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_isIterateeCall.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_createAssigner.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_isPrototype.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseTimes.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isObjectLike.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseIsArguments.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isArguments.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/stubFalse.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isBuffer.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseIsTypedArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseUnary.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_nodeUtil.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/isTypedArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_arrayLikeKeys.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_overArg.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_nativeKeys.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseKeys.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/keys.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/assign.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_nativeKeysIn.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseKeysIn.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/keysIn.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/latex.ltx.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/generator.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/assignIn.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/utils/methods.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/utils/utils.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/namespaces.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/utils/window.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/Base.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/utils/adopter.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/arrange.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/regex.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/Color.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/class.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/css.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/data.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/memory.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/Point.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/Matrix.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/parser.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/Box.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/List.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/selector.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/event.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/EventTarget.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/defaults.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/SVGArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/SVGNumber.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/attr.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Dom.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Element.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/sugar.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/optional/transform.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Container.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Defs.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Shape.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/circled.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Ellipse.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Fragment.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/gradiented.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Gradient.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Pattern.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Image.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/PointArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/pointed.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Line.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Marker.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Controller.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/utils/pathParser.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/types/PathArray.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Morphable.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Path.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/poly.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Polygon.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Polyline.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Rect.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Queue.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Animator.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Timeline.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/animation/Runner.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Svg.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Symbol.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/textable.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Text.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Tspan.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Circle.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/ClipPath.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/ForeignObject.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/modules/core/containerGeometry.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/G.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/A.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Mask.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Stop.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Style.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/TextPath.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/elements/Use.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/%40svgdotjs/svg.js/src/main.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/katex/dist/katex.mjs","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/hypher/lib/hypher.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/hyphenation.en-us/lib/en-us.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_arrayPush.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_isFlattenable.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/_baseFlatten.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/flattenDeep.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/node_modules/lodash/compact.js","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/html-generator.ls","file:///home/med/Desktop/Git/sutor/frontend/node_modules/latex.js/src/latex.component.mjs"],"sourcesContent":["/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n","# This class manages lengths. A length is immutable.\n# Internally, maximum precision is used by storing absolute lengths in sp.\n#\n# We need the Length class per generator, so scope it\nexport makeLengthClass = (generator) -> class\n    # TODO: test: Length = generator.Length\n    g = generator\n\n    # conceptually private\n    _value: 0\n    _unit: \"\"\n\n    # all units in TeX sp\n    unitsSp = new Map([\n        * \"sp\"  1\n        * \"pt\"  65536\n        * \"bp\"  65536 * 72.27/72        # 1 bp is the non-traditional pt\n        * \"pc\"  65536 * 12\n        * \"dd\"  65536 * 1238/1157\n        * \"cc\"  65536 * 1238/1157 * 12\n        * \"in\"  65536 * 72.27\n        * \"px\"  65536 * 72.27/96        # 1 px is 1/96 in\n        * \"mm\"  65536 * 7227/2540\n        * \"cm\"  65536 * 7227/254\n    ])\n\n    # zero class constant\n    @zero = new @@(0, \"sp\")\n\n    # CTOR\n    (value, unit) ->\n        g.error \"Length CTOR: value needs to be a number!\" if not typeof value == \"number\"\n\n        @_value = value\n        @_unit = unit\n\n        # if not relative/unknown unit, convert to sp\n        if unitsSp.has unit\n            @_value = value * unitsSp.get unit\n            @_unit = \"sp\"\n\n\n    # length as string (converted to px if not relative), rounded to global precision\n    value:~ ->\n        if @_unit == \"sp\"\n            (g.round @_value / unitsSp.get \"px\") + \"px\"\n        else\n            g.round(@_value) + @_unit\n\n    # value in px (throw error if relative), rounded to global precision\n    px:~ ->\n        if @_unit == \"sp\"\n            g.round @_value / unitsSp.get \"px\"\n        else\n            g.error \"Length.px() called on relative length!\"\n\n    # unitless value, unless relative/unknown unit\n    pxpct:~ ->\n        if @_unit == \"sp\"\n            g.round @_value / unitsSp.get \"px\"\n        else\n            g.round(@_value) + @_unit\n\n\n    unit:~ -> @_unit\n\n\n    # compare this length to another length, return -1, 0, 1 if this is smaller, equal, greater\n    cmp: (l) ->\n        g.error \"Length.cmp(): incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        return -1 if @_value < l._value\n        return  0 if @_value == l._value\n        return  1\n\n\n    # add another length to this length and return the new length\n    add: (l) ->\n        g.error \"Length.add(): incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length @_value + l._value, @_unit\n\n    # subtract another length from this length\n    sub: (l) ->\n        g.error \"Length.sub: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length @_value - l._value, @_unit\n\n    # multiply this length with a scalar\n    mul: (s) ->\n        new g.Length @_value * s, @_unit\n\n    # divide this length by a scalar\n    div: (s) ->\n        new g.Length @_value / s, @_unit\n\n    # return the arithmetic absolute length\n    abs: ->\n        new g.Length Math.abs(@_value), @_unit\n\n    # get the ratio of this length to another length\n    ratio: (l) ->\n        g.error \"Length.ratio: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        @_value / l._value\n\n    # calculate the L2 norm of this and another length\n    norm: (l) ->\n        g.error \"Length.norm: incompatible lengths! (#{@_unit} and #{l._unit})\" if @_unit != l._unit\n        new g.Length Math.sqrt(@_value**2 + l._value**2), @_unit\n\n\n    @min = ->\n        Array.from(&).reduce (a, b) ->\n            if a.cmp(b) < 0 then a else b\n\n    @max = ->\n        Array.from(&).reduce (a, b) ->\n            if a.cmp(b) > 0 then a else b\n\n\n# a position vector (from origin to point)\nexport class Vector\n\n    _x: null # Length\n    _y: null # Length\n\n\n    # CTOR: x and y can be Lengths TODO: or unitless coordinates?\n    (x, y) ->\n        @_x = x\n        @_y = y\n\n\n    x:~ -> @_x\n    y:~ -> @_y\n\n\n    add: (v) ->\n        new Vector @_x.add(v.x), @_y.add(v.y)\n\n    sub: (v) ->\n        new Vector @_x.sub(v.x), @_y.sub(v.y)\n\n    mul: (s) ->\n        new Vector @_x.mul(s), @_y.mul(s)\n\n    # shift the start point of the vector along its direction to shorten (l < 0) or lengthen (l > 0) the vector\n    # and return another position vector that will point to the new start of the vector\n    shift_start: (l) ->\n        if @_x.unit != @_y.unit\n            throw new Error \"Vector.shift_start: incompatible lengths! (#{@_x.unit} and #{@_y.unit})\"\n\n        # l^2 = x^2 + y^2\n        #\n        # y = m*x\n        # x = y/m\n        # m = y/x\n        #\n        #  => l^2 = x^2 + x^2 * m^2   =   x^2 * (1 + m^2)\n        #  => l^2 = y^2/m^2 + y^2     =   y^2 * (1 + 1/m^2)\n        #\n        #  => x = l/sqrt(1 + m^2)\n        #  => y = l/sqrt(1 + 1/m^2)\n\n        x = @_x._value\n        y = @_y._value\n\n        msq  = Math.sqrt 1 + y*y / (x*x)\n        imsq = Math.sqrt 1 + x*x / (y*y)\n\n        dir_x = if x < 0 then -1 else 1\n        dir_y = if y < 0 then -1 else 1\n\n        # new start point of arrow is at l distance in direction m from origin\n        if x != 0 and y != 0\n            sx = l.div(msq).mul -dir_x\n            sy = l.div(imsq).mul -dir_y\n        else if y == 0\n            sx = l.mul -dir_x\n            sy = @_y.mul 0\n        else\n            sx = @_x.mul 0\n            sy = l.mul -dir_y\n\n        new Vector sx, sy\n\n\n    shift_end: (l) ->\n        if @_x.unit != @_y.unit\n            throw new Error \"Vector.shift_end: incompatible lengths! (#{@_x.unit} and #{@_y.unit})\"\n\n        x = @_x._value\n        y = @_y._value\n\n        # shorten vector by half the arrow head length\n        msq  = Math.sqrt 1 + y*y / (x*x)\n        imsq = Math.sqrt 1 + x*x / (y*y)\n\n        dir_x = if x < 0 then -1 else 1\n        dir_y = if y < 0 then -1 else 1\n\n        if x != 0 and y != 0\n            ex = @_x.add(l.div(msq).mul dir_x)\n            ey = @_y.add(l.div(imsq).mul dir_y)\n        else if y == 0\n            ex = @_x.add(l.mul dir_x)\n            ey = @_y\n        else\n            ex = @_x\n            ey = @_y.add(l.mul dir_y)\n\n        new Vector ex, ey\n\n\n    # calculate length of vector; returns an instance of Length\n    norm: ->\n        @_x.norm @_y\n","import 'he'\n\nexport ligatures = new Map([\n    * 'ff'                  he.decode '&fflig;'     #     U+FB00\n    * 'ffi'                 he.decode '&ffilig;'    #     U+FB03\n    * 'ffl'                 he.decode '&ffllig;'    #     U+FB04\n    * 'fi'                  he.decode '&filig;'     #     U+FB01\n    * 'fl'                  he.decode '&fllig;'     #     U+FB02\n    * '``'                  he.decode '&ldquo;'     # “   U+201C\n    * \"''\"                  he.decode '&rdquo;'     # ”   U+201D\n    * '!´'                  he.decode '&iexcl;'     #     U+00A1\n    * '?´'                  he.decode '&iquest;'    #     U+00BF\n    * '--'                  he.decode '&ndash;'     #     U+2013\n    * '---'                 he.decode '&mdash;'     #     U+2014\n\n    * '<<'                  he.decode '&laquo;'     #     U+00AB\n    * '>>'                  he.decode '&raquo;'     #     U+00BB\n\n    # defined by german\n    * '\"`'                  he.decode '&bdquo;'     # „   U+201E  \\quotedblbase\n    * '\"\\''                 he.decode '&ldquo;'     # “   U+201C  \\textquotedblleft\n])\n\nexport diacritics = new Map([\n    * \\b                    ['\\u0332', '\\u005F']        # _  first: combining char, second: standalone char\n    * \\c                    ['\\u0327', '\\u00B8']        # ¸\n    * \\d                    ['\\u0323', '\\u200B \\u0323'] #\n    * \\H                    ['\\u030B', '\\u02DD']        # ˝\n    * \\k                    ['\\u0328', '\\u02DB']        # ˛\n    * \\r                    ['\\u030A', '\\u02DA']        # ˚\n    * \\t                    ['\\u0361', '\\u200B \\u0361'] #\n    * \\u                    ['\\u0306', '\\u02D8']        # ˘\n    * \\v                    ['\\u030C', '\\u02C7']        # ˇ\n    * \\\"                    ['\\u0308', '\\u00A8']        # ¨\n    * \\~                    ['\\u0303', '\\u007E']        # ~\n    * \\^                    ['\\u0302', '\\u005E']        # ^\n    * \\`                    ['\\u0300', '\\u0060']        # `\n    * \\'                    ['\\u0301', '\\u00B4']        # ´\n    * \\=                    ['\\u0304', '\\u00AF']        # ¯\n    * \\.                    ['\\u0307', '\\u02D9']        # ˙\n])\n\n# tuenc.def (LuaLaTeX, XeLaTeX; (PDF)LaTeX would use t1enc.def, ot1enc.def, etc. and need textcomp.sty)\nexport symbols = new Map([\n    # spaces\n    * \\space                ' '\n    * \\nobreakspace         he.decode '&nbsp;'      #     U+00A0   ~\n    * \\thinspace            he.decode '&thinsp;'    #     U+2009\n    * \\enspace              he.decode '&ensp;'      #     U+2002   (en quad: U+2000)\n    * \\enskip               he.decode '&ensp;'\n    * \\quad                 he.decode '&emsp;'      #     U+2003   (em quad: U+2001)\n    * \\qquad                he.decode '&emsp;'*2\n\n    * \\textvisiblespace     he.decode '&blank;'     # ␣   U+2423\n    * \\textcompwordmark     he.decode '&zwnj;'      #     U+200C\n\n    # basic latin\n    * \\textdollar           '$'                     #     U+0024    \\$\n    * \\$                    '$'\n    * \\slash                he.decode '&sol;'       #     U+002F\n    * \\textless             '<'                     #     U+003C\n    * \\textgreater          '>'                     #     U+003E\n    * \\textbackslash        '\\u005C'                #     U+005C\n    * \\textasciicircum      '^'                     #     U+005E    \\^{}\n    * \\textunderscore       '_'                     #     U+005F    \\_\n    * \\_                    '_'\n    * \\lbrack               '['                     #     U+005B\n    * \\rbrack               ']'                     #     U+005D\n    * \\textbraceleft        '{'                     #     U+007B    \\{\n    * \\{                    '{'\n    * \\textbraceright       '}'                     #     U+007D    \\}\n    * \\}                    '}'\n    * \\textasciitilde       '˜'                     #     U+007E    \\~{}\n\n    # non-ASCII letters\n    * \\AA                   '\\u00C5'                # Å\n    * \\aa                   '\\u00E5'                # å\n    * \\AE                   he.decode '&AElig;'     # Æ   U+00C6\n    * \\ae                   he.decode '&aelig;'     # æ   U+00E6\n    * \\OE                   he.decode '&OElig;'     # Œ   U+0152\n    * \\oe                   he.decode '&oelig;'     # œ   U+0153\n    * \\DH                   he.decode '&ETH;'       # Ð   U+00D0\n    * \\dh                   he.decode '&eth;'       # ð   U+00F0\n    * \\DJ                   he.decode '&Dstrok;'    # Đ   U+0110\n    * \\dj                   he.decode '&dstrok;'    # đ   U+0111\n    * \\NG                   he.decode '&ENG;'       # Ŋ   U+014A\n    * \\ng                   he.decode '&eng;'       # ŋ   U+014B\n    * \\TH                   he.decode '&THORN;'     # Þ   U+00DE\n    * \\th                   he.decode '&thorn;'     # þ   U+00FE\n    * \\O                    he.decode '&Oslash;'    # Ø   U+00D8\n    * \\o                    he.decode '&oslash;'    # ø   U+00F8\n    * \\i                    he.decode '&imath;'     # ı   U+0131\n    * \\j                    he.decode '&jmath;'     # ȷ   U+0237\n    * \\L                    he.decode '&Lstrok;'    # Ł   U+0141\n    * \\l                    he.decode '&lstrok;'    # ł   U+0142\n    * \\IJ                   he.decode '&IJlig;'     # Ĳ   U+0132\n    * \\ij                   he.decode '&ijlig;'     # ĳ   U+0133\n    * \\SS                   '\\u1E9E'                # ẞ\n    * \\ss                   he.decode '&szlig;'     # ß   U+00DF\n\n    # quotes\n    * \\textquotesingle      \"'\"                     # '   U+0027\n    * \\textquoteleft        he.decode '&lsquo;'     # ‘   U+2018    \\lq\n    * \\lq                   he.decode '&lsquo;'\n    * \\textquoteright       he.decode '&rsquo;'     # ’   U+2019    \\rq\n    * \\rq                   he.decode '&rsquo;'\n    * \\textquotedbl         he.decode '&quot;'      # \"   U+0022\n    * \\textquotedblleft     he.decode '&ldquo;'     # “   U+201C\n    * \\textquotedblright    he.decode '&rdquo;'     # ”   U+201D\n    * \\quotesinglbase       he.decode '&sbquo;'     # ‚   U+201A\n    * \\quotedblbase         he.decode '&bdquo;'     # „   U+201E\n    * \\guillemotleft        he.decode '&laquo;'     # «   U+00AB\n    * \\guillemotright       he.decode '&raquo;'     # »   U+00BB\n    * \\guilsinglleft        he.decode '&lsaquo;'    # ‹   U+2039\n    * \\guilsinglright       he.decode '&rsaquo;'    # ›   U+203A\n\n    # diacritics\n    * \\textasciigrave       '\\u0060'                # `\n    * \\textgravedbl         '\\u02F5'                # ˵\n    * \\textasciidieresis    he.decode '&die;'       # ¨   U+00A8\n    * \\textasciiacute       he.decode '&acute;'     # ´   U+00B4\n    * \\textacutedbl         he.decode '&dblac;'     # ˝   U+02DD\n    * \\textasciimacron      he.decode '&macr;'      # ¯   U+00AF\n    * \\textasciicaron       he.decode '&caron;'     # ˇ   U+02C7\n    * \\textasciibreve       he.decode '&breve;'     # ˘   U+02D8\n    * \\texttildelow         '\\u02F7'                # ˷\n\n    # punctuation\n    * \\textendash           he.decode '&ndash;'     # –   U+2013\n    * \\textemdash           he.decode '&mdash;'     # —   U+2014\n    * \\textellipsis         he.decode '&hellip;'    # …   U+2026    \\dots, \\ldots\n    * \\dots                 he.decode '&hellip;'\n    * \\ldots                he.decode '&hellip;'\n    * \\textbullet           he.decode '&bull;'      # •   U+2022\n    * \\textopenbullet       '\\u25E6'                # ◦\n    * \\textperiodcentered   he.decode '&middot;'    # ·   U+00B7\n    * \\textdagger           he.decode '&dagger;'    # †   U+2020    \\dag\n    * \\dag                  he.decode '&dagger;'\n    * \\textdaggerdbl        he.decode '&Dagger;'    # ‡   U+2021    \\ddag\n    * \\ddag                 he.decode '&Dagger;'\n    * \\textexclamdown       he.decode '&iexcl;'     # ¡   U+00A1\n    * \\textquestiondown     he.decode '&iquest;'    # ¿   U+00BF\n    * \\textinterrobang      '\\u203D'                # ‽\n    * \\textinterrobangdown  '\\u2E18'                # ⸘\n\n    * \\textsection          he.decode '&sect;'      # §   U+00A7    \\S\n    * \\S                    he.decode '&sect;'\n    * \\textparagraph        he.decode '&para;'      # ¶   U+00B6    \\P\n    * \\P                    he.decode '&para;'\n    * \\textblank            '\\u2422'                # ␢\n\n    # delimiters\n    * \\textlquill           '\\u2045'                # ⁅\n    * \\textrquill           '\\u2046'                # ⁆\n    * \\textlangle           '\\u2329'                # 〈\n    * \\textrangle           '\\u232A'                # 〉\n    * \\textlbrackdbl        '\\u301A'                # 〚\n    * \\textrbrackdbl        '\\u301B'                # 〛\n\n    # legal symbols\n    * \\textcopyright        he.decode '&copy;'      # ©   U+00A9    \\copyright\n    * \\copyright            he.decode '&copy;'\n    * \\textregistered       he.decode '&reg;'       # ®   U+00AE\n    * \\textcircledP         he.decode '&copysr;'    # ℗   U+2117\n    * \\textservicemark      '\\u2120'                # ℠\n    * \\texttrademark        he.decode '&trade;'     # ™   U+2122\n\n    # genealogical\n    * \\textmarried          '\\u26AD'                # ⚭\n    * \\textdivorced         '\\u26AE'                # ⚮\n\n    # misc\n    * \\textordfeminine      he.decode '&ordf;'      # ª   U+00AA\n    * \\textordmasculine     he.decode '&ordm;'      # º   U+00BA\n\n    * \\textdegree           he.decode '&deg;'       # °   U+00B0\n    * \\textmu               he.decode '&micro;'     # µ   U+00B5\n\n    * \\textbar              '\\u007C'                # |\n    * \\textbardbl           he.decode '&Vert;'      # ‖   U+2016\n    * \\textbrokenbar        he.decode '&brvbar;'    # ¦   U+00A6\n\n    * \\textreferencemark    '\\u203B'                # ※\n    * \\textdiscount         '\\u2052'                # ⁒\n    * \\textcelsius          '\\u2103'                # ℃   U+2103\n    * \\textnumero           he.decode '&numero;'    # №   U+2116\n    * \\textrecipe           he.decode '&rx;'        # ℞   U+211E\n    * \\textestimated        '\\u212E'                # ℮\n    * \\textbigcircle        he.decode '&xcirc;'     # ◯   U+25EF\n    * \\textmusicalnote      he.decode '&sung;'      # ♪   U+266A\n\n    * \\textohm              '\\u2126'                # Ω\n    * \\textmho              '\\u2127'                # ℧\n\n\n    # arrows\n    * \\textleftarrow        he.decode '&larr;'      # ←   U+2190\n    * \\textuparrow          he.decode '&uarr;'      # ↑   U+2191\n    * \\textrightarrow       he.decode '&rarr;'      # →   U+2192\n    * \\textdownarrow        he.decode '&darr;'      # ↓   U+2193\n\n    # math symbols\n    * \\textperthousand      he.decode '&permil;'    # ‰   U+2030\n    * \\textpertenthousand   '\\u2031'                # ‱\n    * \\textonehalf          he.decode '&frac12;'    # ½   U+00BD\n    * \\textthreequarters    he.decode '&frac34;'    # ¾   U+00BE\n    * \\textonequarter       he.decode '&frac14;'    # ¼   U+00BC\n    * \\textfractionsolidus  he.decode '&frasl;'     # ⁄   U+2044\n    * \\textdiv              he.decode '&divide;'    # ÷   U+00F7\n    * \\texttimes            he.decode '&times;'     # ×   U+00D7\n    * \\textminus            he.decode '&minus;'     # −   U+2212\n    * \\textasteriskcentered he.decode '&lowast;'    # ∗   U+2217\n    * \\textpm               he.decode '&plusmn;'    # ±   U+00B1\n    * \\textsurd             he.decode '&radic;'     # √   U+221A\n    * \\textlnot             he.decode '&not;'       # ¬   U+00AC\n    * \\textonesuperior      he.decode '&sup1;'      # ¹   U+00B9\n    * \\texttwosuperior      he.decode '&sup2;'      # ²   U+00B2\n    * \\textthreesuperior    he.decode '&sup3;'      # ³   U+00B3\n\n    # currencies\n    * \\texteuro             he.decode '&euro;'      # €   U+20AC\n    * \\textcent             he.decode '&cent;'      # ¢   U+00A2\n    * \\textsterling         he.decode '&pound;'     # £   U+00A3    \\pounds\n    * \\pounds               he.decode '&pound;'\n    * \\textbaht             '\\u0E3F'                # ฿\n    * \\textcolonmonetary    '\\u20A1'                # ₡\n    * \\textcurrency         '\\u00A4'                # ¤\n    * \\textdong             '\\u20AB'                # ₫\n    * \\textflorin           '\\u0192'                # ƒ\n    * \\textlira             '\\u20A4'                # ₤\n    * \\textnaira            '\\u20A6'                # ₦\n    * \\textpeso             '\\u20B1'                # ₱\n    * \\textwon              '\\u20A9'                # ₩\n    * \\textyen              '\\u00A5'                # ¥\n])\n","'use strict'\n\n# base class for all standard documentclasses\n#\nexport class Base\n\n    args = @args = {}\n\n    # class options\n    options: new Map\n\n    # CTOR\n    (generator, options) ->\n\n        @g = generator\n        @options = options if options\n\n        @g.newCounter \\part\n        @g.newCounter \\section\n        @g.newCounter \\subsection       \\section\n        @g.newCounter \\subsubsection    \\subsection\n        @g.newCounter \\paragraph        \\subsubsection\n        @g.newCounter \\subparagraph     \\paragraph\n\n        @g.newCounter \\figure\n        @g.newCounter \\table\n\n\n\n        # default: letterpaper, 10pt, onecolumn, oneside\n\n        @g.setLength \\paperheight       new @g.Length 11, \"in\"\n        @g.setLength \\paperwidth        new @g.Length 8.5, \"in\"\n        @g.setLength \\@@size            new @g.Length 10, \"pt\"\n\n        @options.forEach (v, k) ~>\n            switch k\n            | \"oneside\" =>\n            | \"twoside\" =>      # twoside doesn't make sense in single-page HTML\n\n            | \"onecolumn\" =>    # TODO\n            | \"twocolumn\" =>\n\n            | \"titlepage\" =>    # TODO\n            | \"notitlepage\" =>\n\n            | \"fleqn\" =>\n            | \"leqno\" =>\n\n            | \"a4paper\" =>\n                @g.setLength \\paperheight   new @g.Length 297, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 210, \"mm\"\n            | \"a5paper\" =>\n                @g.setLength \\paperheight   new @g.Length 210, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 148, \"mm\"\n            | \"b5paper\" =>\n                @g.setLength \\paperheight   new @g.Length 250, \"mm\"\n                @g.setLength \\paperwidth    new @g.Length 176, \"mm\"\n            | \"letterpaper\" =>\n                @g.setLength \\paperheight   new @g.Length 11, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 8.5, \"in\"\n            | \"legalpaper\" =>\n                @g.setLength \\paperheight   new @g.Length 14, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 8.5, \"in\"\n            | \"executivepaper\" =>\n                @g.setLength \\paperheight   new @g.Length 10.5, \"in\"\n                @g.setLength \\paperwidth    new @g.Length 7.25, \"in\"\n            | \"landscape\" =>\n                tmp = @g.length \\paperheight\n                @g.setLength \\paperheight   @g.length \\paperwidth\n                @g.setLength \\paperwidth    tmp\n\n            | otherwise =>\n                # check if a point size was given -> set font size\n                value = parseFloat k\n                if value != NaN and k.endsWith \"pt\" and String(value) == k.substring 0, k.length - 2\n                    @g.setLength \\@@size new @g.Length value, \"pt\"\n\n\n\n        ## textwidth\n\n        pt345 = new @g.Length 345, \"pt\"\n        inch = new @g.Length 1, \"in\"\n\n        textwidth = @g.length(\\paperwidth).sub(inch.mul 2)\n        if textwidth.cmp(pt345) == 1\n            textwidth = pt345\n\n        @g.setLength \\textwidth textwidth\n\n\n        ## margins\n\n        @g.setLength \\marginparsep new @g.Length 11, \"pt\"\n        @g.setLength \\marginparpush new @g.Length 5, \"pt\"\n\n        # in px\n        margins = @g.length(\\paperwidth).sub @g.length(\\textwidth)\n        oddsidemargin = margins.mul(0.5).sub(inch)\n        marginparwidth = margins.mul(0.5).sub(@g.length(\\marginparsep)).sub(inch.mul 0.8)\n        if marginparwidth.cmp(inch.mul(2)) == 1\n            marginparwidth = inch.mul(2)\n\n        @g.setLength \\oddsidemargin oddsidemargin\n        @g.setLength \\marginparwidth marginparwidth\n\n        # \\evensidemargin = \\paperwidth - 2in - \\textwidth - \\oddsidemargin\n        # \\@settopoint\\evensidemargin\n\n\n\n    \\contentsname       :-> [ \"Contents\" ]\n    \\listfigurename     :-> [ \"List of Figures\" ]\n    \\listtablename      :-> [ \"List of Tables\" ]\n\n    \\partname           :-> [ \"Part\" ]\n\n    \\figurename         :-> [ \"Figure\" ]\n    \\tablename          :-> [ \"Table\" ]\n\n    \\appendixname       :-> [ \"Appendix\" ]\n    \\indexname          :-> [ \"Index\" ]\n\n\n    ##############\n    # sectioning #\n    ##############\n\n    args\n     ..\\part =          \\\n     ..\\section =       \\\n     ..\\subsection =    \\\n     ..\\subsubsection = \\\n     ..\\paragraph =     \\\n     ..\\subparagraph =  <[ V s X o? g ]>\n\n\n    \\part               : (s, toc, ttl) -> [ @g.startsection \\part,           0, s, toc, ttl ]\n    \\section            : (s, toc, ttl) -> [ @g.startsection \\section,        1, s, toc, ttl ]\n    \\subsection         : (s, toc, ttl) -> [ @g.startsection \\subsection,     2, s, toc, ttl ]\n    \\subsubsection      : (s, toc, ttl) -> [ @g.startsection \\subsubsection,  3, s, toc, ttl ]\n    \\paragraph          : (s, toc, ttl) -> [ @g.startsection \\paragraph,      4, s, toc, ttl ]\n    \\subparagraph       : (s, toc, ttl) -> [ @g.startsection \\subparagraph,   5, s, toc, ttl ]\n\n\n    \\thepart            :-> [ @g.Roman @g.counter \\part ]\n    \\thesection         :-> [ @g.arabic @g.counter \\section ]\n    \\thesubsection      :-> @thesection!       ++ \".\" + @g.arabic @g.counter \\subsection\n    \\thesubsubsection   :-> @thesubsection!    ++ \".\" + @g.arabic @g.counter \\subsubsection\n    \\theparagraph       :-> @thesubsubsection! ++ \".\" + @g.arabic @g.counter \\paragraph\n    \\thesubparagraph    :-> @theparagraph!     ++ \".\" + @g.arabic @g.counter \\subparagraph\n\n\n    # title\n\n    args.\\maketitle =   <[ V ]>\n\n    \\maketitle          :->\n        @g.setTitle @_title\n\n        title = @g.create @g.title, @_title\n        author = @g.create @g.author, @_author\n        date = @g.create @g.date, if @_date then that else @g.macro \\today\n\n        maketitle = @g.create @g.list, [\n            @g.createVSpace new @g.Length 2, \"em\"\n            title\n            @g.createVSpace new @g.Length 1.5, \"em\"\n            author\n            @g.createVSpace new @g.Length 1, \"em\"\n            date\n            @g.createVSpace new @g.Length 1.5, \"em\"\n        ], \"center\"\n\n\n        # reset footnote back to 0\n        @g.setCounter \\footnote 0\n\n        # reset - maketitle can only be used once\n        @_title = null\n        @_author = null\n        @_date = null\n        @_thanks = null\n\n        @\\title = @\\author = @\\date = @\\thanks = @\\and = @\\maketitle = !->\n\n        [ maketitle ]\n","import\n    './base': { Base }\n\n\nexport class Article extends Base\n\n    # public static\n    @css = \"css/article.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @g.setCounter \\secnumdepth  3\n        @g.setCounter \\tocdepth     3\n\n\n    args = @args = Base.args\n\n    \\refname            :-> [ \"References\" ]\n\n\n    # toc\n\n    args.\\tableofcontents = <[ V ]>\n    \\tableofcontents    : -> @section(true, undefined, @g.macro(\\contentsname)) ++ [ @g._toc ]\n\n\n    args.\\abstract =    <[ V ]>\n\n    \\abstract           :->\n        # onecolumn, no titlepage\n        @g.setFontSize \"small\"\n\n        # TODO use center env directly instead...\n        @g.enterGroup!\n        @g.setFontWeight(\"bf\")\n        head = @g.create @g.list, @g.macro(\"abstractname\"), \"center\"\n        @g.exitGroup!\n\n        [ head ] ++ @quotation!\n\n    \\endabstract        :!-> @endquotation!\n\n\n    args.\\appendix =    <[ V ]>\n\n    \\appendix           :!->\n        @g.setCounter \\section 0\n        @g.setCounter \\subsection 0\n        @[\\thesection] = -> [ @g.Alph @g.counter \\section ]\n","import\n    './base': { Base }\n\n\nexport class Report extends Base\n\n    # public static\n    @css = \"css/book.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @g.newCounter \\chapter\n        @g.addToReset \\section      \\chapter\n\n        @g.setCounter \\secnumdepth  2\n        @g.setCounter \\tocdepth     2\n\n        @g.addToReset \\figure       \\chapter\n        @g.addToReset \\table        \\chapter\n        @g.addToReset \\footnote     \\chapter\n\n\n\n    \\chaptername        :-> [ \"Chapter\" ]\n    \\bibname            :-> [ \"Bibliography\" ]\n\n    args = @args = Base.args\n\n    args\n     ..\\part =          \\\n     ..\\chapter =       <[ V s X o? g ]>\n\n    \\part               : (s, toc, ttl) -> [ @g.startsection \\part,          -1, s, toc, ttl ]\n    \\chapter            : (s, toc, ttl) -> [ @g.startsection \\chapter,        0, s, toc, ttl ]\n\n\n    \\thechapter         :-> [ @g.arabic @g.counter \\chapter ]\n    \\thesection         :-> @thechapter! ++ \".\" + @g.arabic @g.counter \\section\n\n    \\thefigure          :-> (if @g.counter(\\chapter) > 0 then @thechapter! ++ \".\" else []) ++ @g.arabic @g.counter \\figure\n    \\thetable           :-> (if @g.counter(\\chapter) > 0 then @thechapter! ++ \".\" else []) ++ @g.arabic @g.counter \\table\n\n\n    # toc\n\n    args.\\tableofcontents = <[ V ]>\n    \\tableofcontents    : -> @chapter(true, undefined, @g.macro(\\contentsname)) ++ [ @g._toc ]\n\n\n    args.\\abstract =    <[ V ]>\n\n    \\abstract           :->\n        # onecolumn, no titlepage\n        @g.setFontSize \"small\"\n\n        # TODO use center env directly instead...\n        @g.enterGroup!\n        @g.setFontWeight(\"bf\")\n        head = @g.create @g.list, @g.macro(\"abstractname\"), \"center\"\n        @g.exitGroup!\n\n        [ head ] ++ @quotation!\n\n    \\endabstract        :!-> @endquotation!\n\n\n    args.\\appendix =    <[ V ]>\n\n    \\appendix           :!->\n        @g.setCounter \\chapter 0\n        @g.setCounter \\section 0\n        @[\\chaptername] = @[\\appendixname]\n        @[\\thechapter] = -> [ @g.Alph @g.counter \\chapter ]\n","import\n    './report': { Report }\n\n\n# book in LaTeX has no abstract\n\nexport class Book extends Report\n\n    # public static\n    @css = \"css/book.css\"\n\n\n    # CTOR\n    (generator, options) ->\n        super ...\n\n        @[\\@mainmatter] = true\n\n\n    args = @args = Report.args\n\n    args\n     ..\\part =          \\\n     ..\\chapter =       <[ V s X o? g ]>\n\n    \\chapter            : (s, toc, ttl) -> [ @g.startsection \\chapter, 0, (s or not @\"@mainmatter\"), toc, ttl ]\n\n\n    args\n     ..\\frontmatter =   \\\n     ..\\mainmatter =    \\\n     ..\\backmatter =    <[ V ]>\n\n    \\frontmatter        :!-> @[\\@mainmatter] = false\n    \\mainmatter         :!-> @[\\@mainmatter] = true\n    \\backmatter         :!-> @[\\@mainmatter] = false\n","module.exports = /*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { latex: peg$parselatex },\n        peg$startRuleFunction  = peg$parselatex,\n\n        peg$c0 = function() { error(\"expected \\\\begin{document}\") },\n        peg$c1 = function() { error(\"\\\\end{document} missing\") },\n        peg$c2 = peg$anyExpectation(),\n        peg$c3 = function() { return g; },\n        peg$c4 = function() { g.macro(\"documentclass\", [null, g.documentClass, null]); return true; },\n        peg$c5 = \"document\",\n        peg$c6 = peg$literalExpectation(\"document\", false),\n        peg$c7 = function() { g.startBalanced(); g.enterGroup(); return true; },\n        peg$c8 = function(pars) {\n                g.exitGroup();\n                g.isBalanced() || error(\"groups need to be balanced!\");\n                var l = g.endBalanced();\n                // this error should be impossible, it's just to be safe\n                l == 1 && g.isBalanced() || error(\"grammar error: \" + l + \" levels of balancing are remaining, or the last level is unbalanced!\");\n\n                g.createDocument(pars);\n                g.logUndefinedRefs();\n                return g;\n            },\n        peg$c9 = function(bb, n, txt, be) {\n                bb.length > 0 && g.break();\n                var p = g.create(g.par, txt, n ? \"noindent\" : \"\");\n                be && g.break();\n                return p;\n            },\n        peg$c10 = function() { return g.create(g.linebreak); },\n        peg$c11 = function() { return undefined; },\n        peg$c12 = function() { return g.createText(g.sp); },\n        peg$c13 = peg$otherExpectation(\"text\"),\n        peg$c14 = function(p) { return g.createText(p.join(\"\")); },\n        peg$c15 = function(m) { return m; },\n        peg$c16 = function() { g.enterGroup(true); return true; },\n        peg$c17 = function(s) { return g.createText(s); },\n        peg$c18 = function() { if (!g.isBalanced()) { g.exitGroup(); return true; } },\n        peg$c19 = peg$otherExpectation(\"primitive\"),\n        peg$c20 = function() { return g.sp; },\n        peg$c21 = function(b) { return !g.isBalanced() },\n        peg$c22 = function(b) { return b; },\n        peg$c23 = function(e) { return e; },\n        peg$c24 = function(m) { g.break(); return m; },\n        peg$c25 = function(id) { return g.isPreamble(id); },\n        peg$c26 = function(id) { return g.isVmode(id); },\n        peg$c27 = function(id) { return g.isHmode(id); },\n        peg$c28 = function(id) { return g.isHVmode(id); },\n        peg$c29 = function(id) { return g.isHmode(id) || g.isHVmode(id); },\n        peg$c30 = function(name) { if (g.hasMacro(name)) { g.beginArgs(name); return true; } },\n        peg$c31 = function(name) {\n                var args = g.parsedArgs();\n                g.endArgs();\n                return g.createFragment(g.macro(name, args));\n            },\n        peg$c32 = function(m) { error(\"macro only allowed in preamble: \" + m); },\n        peg$c33 = function(m) { error(\"unknown macro: \\\\\" + m); },\n        peg$c34 = peg$otherExpectation(\"identifier\"),\n        peg$c35 = /^[\\-$&_\\/@]/,\n        peg$c36 = peg$classExpectation([\"-\", \"$\", \"&\", \"_\", \"/\", \"@\"], false, false),\n        peg$c37 = /^[=,]/,\n        peg$c38 = peg$classExpectation([\"=\", \",\"], false, false),\n        peg$c39 = peg$otherExpectation(\"key=value\"),\n        peg$c40 = \"=\",\n        peg$c41 = peg$literalExpectation(\"=\", false),\n        peg$c42 = function(k) { error(\"value expected\") },\n        peg$c43 = function(k, v) { return v.trim(); },\n        peg$c44 = function(k, v) { return [k.trim(), v == null ? true : v ]; },\n        peg$c45 = function() { return g.nextArg(\"X\") },\n        peg$c46 = function() { g.preExecMacro(); },\n        peg$c47 = function() { return g.nextArg(\"g\") },\n        peg$c48 = function() { g.argError(\"group argument expected\") },\n        peg$c49 = function(a) { g.addParsedArg(a); },\n        peg$c50 = function() { return g.nextArg(\"hg\") },\n        peg$c51 = function() { return g.nextArg(\"h\") },\n        peg$c52 = function() { g.argError(\"horizontal material expected\") },\n        peg$c53 = function(h) { g.addParsedArg(h); },\n        peg$c54 = function() { return g.nextArg(\"o?\") },\n        peg$c55 = function(o) { g.addParsedArg(o); },\n        peg$c56 = function() { return g.nextArg(\"i\") },\n        peg$c57 = function() { g.argError(\"id group argument expected\") },\n        peg$c58 = function(i) { g.addParsedArg(i); },\n        peg$c59 = function() { return g.nextArg(\"ie\") },\n        peg$c60 = function() { g.argError(\"id or empty group arg expected\") },\n        peg$c61 = function() { return g.nextArg(\"i?\") },\n        peg$c62 = function() { return g.nextArg(\"k\") },\n        peg$c63 = function() { g.argError(\"key group argument expected\") },\n        peg$c64 = function(k) { g.addParsedArg(k); },\n        peg$c65 = function() { return g.nextArg(\"k?\") },\n        peg$c66 = function() { return g.nextArg(\"kv?\") },\n        peg$c67 = function() { return g.nextArg(\"csv\") },\n        peg$c68 = function() { g.argError(\"comma-sep. values group expected\") },\n        peg$c69 = function(v) { g.addParsedArg(v); },\n        peg$c70 = function() { return g.nextArg(\"n\") },\n        peg$c71 = function() { g.argError(\"num group argument expected\") },\n        peg$c72 = function(n) { g.addParsedArg(n); },\n        peg$c73 = function() { return g.nextArg(\"n?\") },\n        peg$c74 = function() { return g.nextArg(\"l\") },\n        peg$c75 = function() { g.argError(\"length group argument expected\") },\n        peg$c76 = function(l) { g.addParsedArg(l); },\n        peg$c77 = function() { return g.nextArg(\"lg?\") },\n        peg$c78 = function() { return g.nextArg(\"l?\") },\n        peg$c79 = function() { return g.nextArg(\"m\") },\n        peg$c80 = function() { g.argError(\"macro group argument expected\") },\n        peg$c81 = function(m) { g.addParsedArg(m); },\n        peg$c82 = function() { return g.nextArg(\"u\") },\n        peg$c83 = function() { g.argError(\"url group argument expected\") },\n        peg$c84 = function(u) { g.addParsedArg(u); },\n        peg$c85 = function() { return g.nextArg(\"c\") },\n        peg$c86 = function() { g.argError(\"color group expected\") },\n        peg$c87 = function(c) { g.addParsedArg(c); },\n        peg$c88 = function() { return g.nextArg(\"c-ml\") },\n        peg$c89 = function() { g.argError(\"color model list expected\") },\n        peg$c90 = function() { return g.nextArg(\"c-ml?\") },\n        peg$c91 = function() { return g.nextArg(\"c-ssp\") },\n        peg$c92 = function() { g.argError(\"color set spec expected\") },\n        peg$c93 = function() { return g.nextArg(\"c-spl\") },\n        peg$c94 = function() { g.argError(\"color spec list expected\") },\n        peg$c95 = function() { return g.nextArg(\"cl\") },\n        peg$c96 = function() { g.argError(\"coordinate/length group expected\") },\n        peg$c97 = function() { return g.nextArg(\"cl?\") },\n        peg$c98 = function() { return g.nextArg(\"v\") },\n        peg$c99 = function() { g.argError(\"coordinate pair expected\") },\n        peg$c100 = function() { return g.nextArg(\"v?\") },\n        peg$c101 = function() { return g.nextArg(\"cols\") },\n        peg$c102 = function() { g.argError(\"column specification missing\") },\n        peg$c103 = function() { return g.nextArg(\"is\") },\n        peg$c104 = function() { return g.nextArg(\"items\") },\n        peg$c105 = function() { return g.nextArg(\"enumitems\") },\n        peg$c106 = function() { return g.selectArgsBranch(\"[\") },\n        peg$c107 = function() { return g.selectArgsBranch(\"{\") /* requirement in pegjs: balance } */ },\n        peg$c108 = function() { return g.nextArg(\"s\") },\n        peg$c109 = \"*\",\n        peg$c110 = peg$literalExpectation(\"*\", false),\n        peg$c111 = function(s) { g.addParsedArg(!!s); return !!s; },\n        peg$c112 = function(id) { return id; },\n        peg$c113 = function(k) { return k; },\n        peg$c114 = \",\",\n        peg$c115 = peg$literalExpectation(\",\", false),\n        peg$c116 = function() {return null;},\n        peg$c117 = function(kv) {return kv;},\n        peg$c118 = function(kv_list) {\n                                return new Map(kv_list.filter(kv => kv != null));\n                            },\n        peg$c119 = function(v) {return v.trim();},\n        peg$c120 = function(v_list) {\n                                return v_list.filter(v => v != null);\n                            },\n        peg$c121 = \"sp\",\n        peg$c122 = peg$literalExpectation(\"sp\", false),\n        peg$c123 = \"pt\",\n        peg$c124 = peg$literalExpectation(\"pt\", false),\n        peg$c125 = \"px\",\n        peg$c126 = peg$literalExpectation(\"px\", false),\n        peg$c127 = \"dd\",\n        peg$c128 = peg$literalExpectation(\"dd\", false),\n        peg$c129 = \"mm\",\n        peg$c130 = peg$literalExpectation(\"mm\", false),\n        peg$c131 = \"pc\",\n        peg$c132 = peg$literalExpectation(\"pc\", false),\n        peg$c133 = \"cc\",\n        peg$c134 = peg$literalExpectation(\"cc\", false),\n        peg$c135 = \"cm\",\n        peg$c136 = peg$literalExpectation(\"cm\", false),\n        peg$c137 = \"in\",\n        peg$c138 = peg$literalExpectation(\"in\", false),\n        peg$c139 = \"ex\",\n        peg$c140 = peg$literalExpectation(\"ex\", false),\n        peg$c141 = \"em\",\n        peg$c142 = peg$literalExpectation(\"em\", false),\n        peg$c143 = function(u) { return u; },\n        peg$c144 = function(l, u) { return new g.Length(l, u); },\n        peg$c145 = function(l) { return l; },\n        peg$c146 = function(n) { return n; },\n        peg$c147 = function() { return f; },\n        peg$c148 = function(f) { return g.length(\"unitlength\").mul(f) },\n        peg$c149 = function(c) { return c; },\n        peg$c150 = \"(\",\n        peg$c151 = peg$literalExpectation(\"(\", false),\n        peg$c152 = \")\",\n        peg$c153 = peg$literalExpectation(\")\", false),\n        peg$c154 = function(x, y) { return new Vector(x, y); },\n        peg$c155 = \"%\",\n        peg$c156 = peg$literalExpectation(\"%\", false),\n        peg$c157 = function(p) { return p; },\n        peg$c158 = /^[\\-._~:\\/?#[\\]@!$&()*+,;=]/,\n        peg$c159 = peg$classExpectation([\"-\", \".\", \"_\", \"~\", \":\", \"/\", \"?\", \"#\", \"[\", \"]\", \"@\", \"!\", \"$\", \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\"], false, false),\n        peg$c160 = \"'\",\n        peg$c161 = peg$literalExpectation(\"'\", false),\n        peg$c162 = function() { error(\"illegal char in url given\"); },\n        peg$c163 = function(c) {return c;},\n        peg$c164 = function(url) { return url.join(\"\"); },\n        peg$c165 = function() { g.enterGroup(); g.startBalanced(); return true; },\n        peg$c166 = function(s, p) {\n                                g.isBalanced() || error(\"groups inside an argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n\n                                s != undefined && p.unshift(g.createText(s));\n                                return g.createFragment(p);\n                            },\n        peg$c167 = function(l) { return g.createFragment(l); },\n        peg$c168 = function(s, h) {\n                                g.isBalanced() || error(\"groups inside an argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n                                return g.createFragment(g.createText(s), h);\n                            },\n        peg$c169 = function(p) { return g.isBalanced(); },\n        peg$c170 = function(p) {\n                                g.isBalanced() || error(\"groups inside an optional argument need to be balanced!\");\n                                g.endBalanced();\n                                g.exitGroup();\n                                return g.createFragment(p);\n                            },\n        peg$c171 = \"value\",\n        peg$c172 = peg$literalExpectation(\"value\", false),\n        peg$c173 = \"real\",\n        peg$c174 = peg$literalExpectation(\"real\", false),\n        peg$c175 = function(f) { return f; },\n        peg$c176 = function(expr) { return expr; },\n        peg$c177 = function(c) { return g.counter(c); },\n        peg$c178 = \"+\",\n        peg$c179 = peg$literalExpectation(\"+\", false),\n        peg$c180 = \"-\",\n        peg$c181 = peg$literalExpectation(\"-\", false),\n        peg$c182 = function(s, n) { return s == \"-\" ? -n : n; },\n        peg$c183 = \"/\",\n        peg$c184 = peg$literalExpectation(\"/\", false),\n        peg$c185 = function(head, tail) {\n                            var result = head, i;\n\n                            for (i = 0; i < tail.length; i++) {\n                                if (tail[i][1] === \"*\") { result = Math.trunc(result * tail[i][3]); }\n                                if (tail[i][1] === \"/\") { result = Math.trunc(result / tail[i][3]); }\n                            }\n\n                            return Math.trunc(result);\n                        },\n        peg$c186 = function(head, tail) {\n                            var result = head, i;\n\n                            for (i = 0; i < tail.length; i++) {\n                                if (tail[i][1] === \"+\") { result += tail[i][3]; }\n                                if (tail[i][1] === \"-\") { result -= tail[i][3]; }\n                            }\n\n                            return result;\n                        },\n        peg$c187 = function(ml) { return ml; },\n        peg$c188 = function(cssp) { return cssp; },\n        peg$c189 = function(csl) { return csl; },\n        peg$c190 = \":\",\n        peg$c191 = peg$literalExpectation(\":\", false),\n        peg$c192 = \";\",\n        peg$c193 = peg$literalExpectation(\";\", false),\n        peg$c194 = \"!\",\n        peg$c195 = peg$literalExpectation(\"!\", false),\n        peg$c196 = \">\",\n        peg$c197 = peg$literalExpectation(\">\", false),\n        peg$c198 = \"wheel\",\n        peg$c199 = peg$literalExpectation(\"wheel\", false),\n        peg$c200 = \"twheel\",\n        peg$c201 = peg$literalExpectation(\"twheel\", false),\n        peg$c202 = function(m) { return m.length % 2 == 0; },\n        peg$c203 = \".\",\n        peg$c204 = peg$literalExpectation(\".\", false),\n        peg$c205 = \"!!\",\n        peg$c206 = peg$literalExpectation(\"!!\", false),\n        peg$c207 = \"[\",\n        peg$c208 = peg$literalExpectation(\"[\", false),\n        peg$c209 = \"]\",\n        peg$c210 = peg$literalExpectation(\"]\", false),\n        peg$c211 = \"rgb\",\n        peg$c212 = peg$literalExpectation(\"rgb\", false),\n        peg$c213 = \"cmyk\",\n        peg$c214 = peg$literalExpectation(\"cmyk\", false),\n        peg$c215 = \"cmy\",\n        peg$c216 = peg$literalExpectation(\"cmy\", false),\n        peg$c217 = \"hsb\",\n        peg$c218 = peg$literalExpectation(\"hsb\", false),\n        peg$c219 = \"gray\",\n        peg$c220 = peg$literalExpectation(\"gray\", false),\n        peg$c221 = \"RBG\",\n        peg$c222 = peg$literalExpectation(\"RBG\", false),\n        peg$c223 = \"HTML\",\n        peg$c224 = peg$literalExpectation(\"HTML\", false),\n        peg$c225 = \"HSB\",\n        peg$c226 = peg$literalExpectation(\"HSB\", false),\n        peg$c227 = \"Gray\",\n        peg$c228 = peg$literalExpectation(\"Gray\", false),\n        peg$c229 = \"Hsb\",\n        peg$c230 = peg$literalExpectation(\"Hsb\", false),\n        peg$c231 = \"tHsb\",\n        peg$c232 = peg$literalExpectation(\"tHsb\", false),\n        peg$c233 = \"wave\",\n        peg$c234 = peg$literalExpectation(\"wave\", false),\n        peg$c235 = \"named\",\n        peg$c236 = peg$literalExpectation(\"named\", false),\n        peg$c237 = \"ps\",\n        peg$c238 = peg$literalExpectation(\"ps\", false),\n        peg$c239 = function(core, cm, cml) {\n                            if (core) core = core[0];\n\n                            var list = [ cm ];\n                            cml.forEach(m => list.push(m[1]));\n\n                            return {\n                                core: core,\n                                models: list\n                            }\n                        },\n        peg$c240 = function(f, fl) { var list = [ f ]; fl.forEach(f => list.push(f[1])); return list; },\n        peg$c241 = function(cs, csl) {\n                            var list = [ cs ];\n                            csl.forEach(s => list.push(s[1]));\n                            return list;\n                        },\n        peg$c242 = function(n, s, sl) {\n                            var list = [ { name: n, speclist: s } ];\n\n                            sl.forEach(s => list.push({\n                                name: s[2],\n                                speclist: s[4]\n                            }));\n\n                            return list;\n                        },\n        peg$c243 = function(s, _c, _s) { return Array.isArray(_c) ? _c.concat(_s) : [_c].concat(_s); },\n        peg$c244 = function(s, c) {\n                return c.reduce(function(a, b) { return a.concat(b); }, s)\n            },\n        peg$c245 = \"l\",\n        peg$c246 = peg$literalExpectation(\"l\", false),\n        peg$c247 = \"c\",\n        peg$c248 = peg$literalExpectation(\"c\", false),\n        peg$c249 = \"r\",\n        peg$c250 = peg$literalExpectation(\"r\", false),\n        peg$c251 = \"p\",\n        peg$c252 = peg$literalExpectation(\"p\", false),\n        peg$c253 = function(c) {\n                return c;\n            },\n        peg$c254 = function(reps, c) {\n                var result = []\n                for (var i = 0; i < reps; i++) {\n                    result = result.concat(c.slice())\n                }\n                return result\n            },\n        peg$c255 = \"|\",\n        peg$c256 = peg$literalExpectation(\"|\", false),\n        peg$c257 = \"@\",\n        peg$c258 = peg$literalExpectation(\"@\", false),\n        peg$c259 = function(a) { return a; },\n        peg$c260 = function(s) {\n                return {\n                    type: \"separator\",\n                    content: s\n                }\n            },\n        peg$c261 = \"vspace\",\n        peg$c262 = peg$literalExpectation(\"vspace\", false),\n        peg$c263 = function(l) { return g.createVSpaceInline(l); },\n        peg$c264 = function(l) { return g.createVSpace(l); },\n        peg$c265 = \"small\",\n        peg$c266 = peg$literalExpectation(\"small\", false),\n        peg$c267 = \"med\",\n        peg$c268 = peg$literalExpectation(\"med\", false),\n        peg$c269 = \"big\",\n        peg$c270 = peg$literalExpectation(\"big\", false),\n        peg$c271 = \"skip\",\n        peg$c272 = peg$literalExpectation(\"skip\", false),\n        peg$c273 = function(s) { return g.createVSpaceSkipInline(s + \"skip\"); },\n        peg$c274 = function(s) { return g.createVSpaceSkip(s + \"skip\"); },\n        peg$c275 = \"verb\",\n        peg$c276 = peg$literalExpectation(\"verb\", false),\n        peg$c277 = function(s, b, t) { return b == t; },\n        peg$c278 = function(s, b, v, e) {\n                                b == e || error(\"\\\\verb is missing its end delimiter: \" + b);\n                                if (s)\n                                    v = v.replace(/ /g, g.visp);\n\n                                return g.create(g.verb, g.createVerbatim(v, true));\n                            },\n        peg$c279 = peg$otherExpectation(\"\\\\begin\"),\n        peg$c280 = function(id) { g.begin(id); return id; },\n        peg$c281 = function(id, s) {\n                return { id, end: id + (s ? \"*\" : \"\") };\n            },\n        peg$c282 = peg$otherExpectation(\"\\\\end\"),\n        peg$c283 = function(id, s) {\n                return id + (s ? \"*\" : \"\");\n            },\n        peg$c284 = function(id) { return g.macro(id.id, g.endArgs()); },\n        peg$c285 = function(id, node, s) {return g.createText(s); },\n        peg$c286 = function(id, node, sb, p, end_id, s) {return g.createText(s); },\n        peg$c287 = function(id, node, sb, p, end_id, se) {\n                var end = g.end(id.end, end_id);\n\n                // if nodes are created by macro, add content as children to the last element\n                // if node is a text node, just add it\n                // potential spaces after \\begin and \\end have to be added explicitely\n\n                var pf = g.createFragment(p);\n                if (pf && node && node.length > 0 && node[node.length - 1].nodeType === 1) {\n                    node[node.length - 1].appendChild(sb);\n                    node[node.length - 1].appendChild(pf);\n                    return g.createFragment(node, end, se);\n                }\n\n                return g.createFragment(node, sb, pf, end, se);     // use pf, fragments in p are now empty!!\n            },\n        peg$c288 = function(id) { g.break(); },\n        peg$c289 = function(id, node, p, end_id) {\n                var end = g.end(id.end, end_id);\n\n                // if nodes are created by macro, add content as children to the last element\n                // if node is a text node, just add it\n\n                var pf = g.createFragment(p);\n                if (pf && node && node.length > 0 && node[node.length - 1].nodeType === 1) {\n                    node[node.length - 1].appendChild(pf);\n                    return g.createFragment(node, end);\n                }\n                return g.createFragment(node, pf, end);\n            },\n        peg$c290 = \"item\",\n        peg$c291 = peg$literalExpectation(\"item\", false),\n        peg$c292 = function() { g.break(); },\n        peg$c293 = function(og) { return og; },\n        peg$c294 = function(label, p) { return p; },\n        peg$c295 = function(label, pars) {\n                    return {\n                        label: label,\n                        text: g.createFragment(pars)\n                    };\n                },\n        peg$c296 = function(label) {\n                    // null is no opt_group (\\item ...)\n                    // undefined is an empty one (\\item[] ...)\n                    if (label === null) {\n                        var itemCounter = \"enum\" + g.roman(g.counter(\"@enumdepth\"));\n                        var itemId = \"item-\" + g.nextId();\n                        g.stepCounter(itemCounter);\n                        g.refCounter(itemCounter, itemId);\n                        return {\n                            id:   itemId,\n                            node: g.macro(\"label\" + itemCounter)\n                        };\n                    }\n                    return {\n                        id: undefined,\n                        node: label\n                    };\n                },\n        peg$c297 = peg$otherExpectation(\"comment environment\"),\n        peg$c298 = \"\\\\begin\",\n        peg$c299 = peg$literalExpectation(\"\\\\begin\", false),\n        peg$c300 = \"{comment}\",\n        peg$c301 = peg$literalExpectation(\"{comment}\", false),\n        peg$c302 = function() { g.break(); return undefined; },\n        peg$c303 = \"\\\\end\",\n        peg$c304 = peg$literalExpectation(\"\\\\end\", false),\n        peg$c305 = function(m) { return g.parseMath(m, false); },\n        peg$c306 = function(m) { return g.parseMath(m, true); },\n        peg$c307 = \"begin\",\n        peg$c308 = peg$literalExpectation(\"begin\", false),\n        peg$c309 = function() {},\n        peg$c310 = \"end\",\n        peg$c311 = peg$literalExpectation(\"end\", false),\n        peg$c312 = \"par\",\n        peg$c313 = peg$literalExpectation(\"par\", false),\n        peg$c314 = \"noindent\",\n        peg$c315 = peg$literalExpectation(\"noindent\", false),\n        peg$c316 = \"plus\",\n        peg$c317 = peg$literalExpectation(\"plus\", false),\n        peg$c318 = \"minus\",\n        peg$c319 = peg$literalExpectation(\"minus\", false),\n        peg$c320 = \"endinput\",\n        peg$c321 = peg$literalExpectation(\"endinput\", false),\n        peg$c322 = \"\\\\\",\n        peg$c323 = peg$literalExpectation(\"\\\\\", false),\n        peg$c324 = \"{\",\n        peg$c325 = peg$literalExpectation(\"{\", false),\n        peg$c326 = \"}\",\n        peg$c327 = peg$literalExpectation(\"}\", false),\n        peg$c328 = peg$otherExpectation(\"math\"),\n        peg$c329 = \"$\",\n        peg$c330 = peg$literalExpectation(\"$\", false),\n        peg$c331 = \"&\",\n        peg$c332 = peg$literalExpectation(\"&\", false),\n        peg$c333 = peg$otherExpectation(\"parameter\"),\n        peg$c334 = \"#\",\n        peg$c335 = peg$literalExpectation(\"#\", false),\n        peg$c336 = \"^\",\n        peg$c337 = peg$literalExpectation(\"^\", false),\n        peg$c338 = \"_\",\n        peg$c339 = peg$literalExpectation(\"_\", false),\n        peg$c340 = \"\\0\",\n        peg$c341 = peg$literalExpectation(\"\\0\", false),\n        peg$c342 = peg$otherExpectation(\"EOF\"),\n        peg$c343 = peg$otherExpectation(\"newline\"),\n        peg$c344 = \"\\n\",\n        peg$c345 = peg$literalExpectation(\"\\n\", false),\n        peg$c346 = \"\\r\\n\",\n        peg$c347 = peg$literalExpectation(\"\\r\\n\", false),\n        peg$c348 = \"\\r\",\n        peg$c349 = peg$literalExpectation(\"\\r\", false),\n        peg$c350 = \"\\u2028\",\n        peg$c351 = peg$literalExpectation(\"\\u2028\", false),\n        peg$c352 = \"\\u2029\",\n        peg$c353 = peg$literalExpectation(\"\\u2029\", false),\n        peg$c354 = peg$otherExpectation(\"whitespace\"),\n        peg$c355 = /^[ \\t]/,\n        peg$c356 = peg$classExpectation([\" \", \"\\t\"], false, false),\n        peg$c357 = peg$otherExpectation(\"comment\"),\n        peg$c358 = peg$otherExpectation(\"spaces\"),\n        peg$c359 = function() { return g.brsp; },\n        peg$c360 = peg$otherExpectation(\"control space\"),\n        peg$c361 = peg$otherExpectation(\"non-brk space\"),\n        peg$c362 = \"~\",\n        peg$c363 = peg$literalExpectation(\"~\", false),\n        peg$c364 = function() { return g.nbsp; },\n        peg$c365 = peg$otherExpectation(\"paragraph break\"),\n        peg$c366 = function() { return true; },\n        peg$c367 = peg$otherExpectation(\"linebreak\"),\n        peg$c368 = function(l) {return l;},\n        peg$c369 = function(l) {\n                                          if (l) return g.createBreakSpace(l);\n                                          else   return g.create(g.linebreak);\n                                      },\n        peg$c370 = \"put\",\n        peg$c371 = peg$literalExpectation(\"put\", false),\n        peg$c372 = \"newline\",\n        peg$c373 = peg$literalExpectation(\"newline\", false),\n        peg$c374 = peg$otherExpectation(\"letter\"),\n        peg$c375 = /^[a-z]/i,\n        peg$c376 = peg$classExpectation([[\"a\", \"z\"]], false, true),\n        peg$c377 = function(c) { return g.character(c); },\n        peg$c378 = peg$otherExpectation(\"digit\"),\n        peg$c379 = /^[0-9]/,\n        peg$c380 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c381 = function(n) { return g.character(n); },\n        peg$c382 = peg$otherExpectation(\"punctuation\"),\n        peg$c383 = /^[.,;:*\\/()!?=+<>]/,\n        peg$c384 = peg$classExpectation([\".\", \",\", \";\", \":\", \"*\", \"/\", \"(\", \")\", \"!\", \"?\", \"=\", \"+\", \"<\", \">\"], false, false),\n        peg$c385 = function(p) { return g.character(p); },\n        peg$c386 = peg$otherExpectation(\"quotes\"),\n        peg$c387 = /^[`']/,\n        peg$c388 = peg$classExpectation([\"`\", \"'\"], false, false),\n        peg$c389 = function(q) { return g.textquote(q); },\n        peg$c390 = peg$otherExpectation(\"left bracket\"),\n        peg$c391 = function(b) { return g.character(b); },\n        peg$c392 = peg$otherExpectation(\"right bracket\"),\n        peg$c393 = peg$otherExpectation(\"utf8 char\"),\n        peg$c394 = function(u) { return g.character(u); },\n        peg$c395 = peg$otherExpectation(\"hyphen\"),\n        peg$c396 = function() { return g.hyphen(); },\n        peg$c397 = peg$otherExpectation(\"ligature\"),\n        peg$c398 = \"ffi\",\n        peg$c399 = peg$literalExpectation(\"ffi\", false),\n        peg$c400 = \"ffl\",\n        peg$c401 = peg$literalExpectation(\"ffl\", false),\n        peg$c402 = \"ff\",\n        peg$c403 = peg$literalExpectation(\"ff\", false),\n        peg$c404 = \"fi\",\n        peg$c405 = peg$literalExpectation(\"fi\", false),\n        peg$c406 = \"fl\",\n        peg$c407 = peg$literalExpectation(\"fl\", false),\n        peg$c408 = \"---\",\n        peg$c409 = peg$literalExpectation(\"---\", false),\n        peg$c410 = \"--\",\n        peg$c411 = peg$literalExpectation(\"--\", false),\n        peg$c412 = \"``\",\n        peg$c413 = peg$literalExpectation(\"``\", false),\n        peg$c414 = \"''\",\n        peg$c415 = peg$literalExpectation(\"''\", false),\n        peg$c416 = \"!\\xB4\",\n        peg$c417 = peg$literalExpectation(\"!\\xB4\", false),\n        peg$c418 = \"?\\xB4\",\n        peg$c419 = peg$literalExpectation(\"?\\xB4\", false),\n        peg$c420 = \"<<\",\n        peg$c421 = peg$literalExpectation(\"<<\", false),\n        peg$c422 = \">>\",\n        peg$c423 = peg$literalExpectation(\">>\", false),\n        peg$c424 = function(l) { return g.ligature(l); },\n        peg$c425 = peg$otherExpectation(\"control symbol\"),\n        peg$c426 = /^[$%#&{}_\\-,\\/@]/,\n        peg$c427 = peg$classExpectation([\"$\", \"%\", \"#\", \"&\", \"{\", \"}\", \"_\", \"-\", \",\", \"/\", \"@\"], false, false),\n        peg$c428 = function(c) { return g.controlSymbol(c); },\n        peg$c429 = peg$otherExpectation(\"symbol macro\"),\n        peg$c430 = function(name) { return g.hasSymbol(name); },\n        peg$c431 = function(name) {\n                return g.symbol(name);\n            },\n        peg$c432 = peg$otherExpectation(\"diacritic macro\"),\n        peg$c433 = function(d) { return g.hasDiacritic(d); },\n        peg$c434 = function(d, c, s) { return g.diacritic(d, c) + (s ? s:\"\"); },\n        peg$c435 = function(d, c) { return g.diacritic(d, c); },\n        peg$c436 = function(d, c) {\n                return c;\n            },\n        peg$c437 = \"symbol\",\n        peg$c438 = peg$literalExpectation(\"symbol\", false),\n        peg$c439 = function(i) { return String.fromCharCode(i); },\n        peg$c440 = \"char\",\n        peg$c441 = peg$literalExpectation(\"char\", false),\n        peg$c442 = \"^^^^\",\n        peg$c443 = peg$literalExpectation(\"^^^^\", false),\n        peg$c444 = \"^^\",\n        peg$c445 = peg$literalExpectation(\"^^\", false),\n        peg$c446 = function(c) { c = c.charCodeAt(0);\n                                                                          return String.fromCharCode(c < 64 ? c + 64 : c - 64); },\n        peg$c447 = function(i) { return parseInt(i, 10); },\n        peg$c448 = function(o) { return parseInt(o, 8); },\n        peg$c449 = \"\\\"\",\n        peg$c450 = peg$literalExpectation(\"\\\"\", false),\n        peg$c451 = function(h) { return h; },\n        peg$c452 = peg$otherExpectation(\"8bit hex value\"),\n        peg$c453 = function(h) { return parseInt(h, 16); },\n        peg$c454 = peg$otherExpectation(\"16bit hex value\"),\n        peg$c455 = peg$otherExpectation(\"integer value\"),\n        peg$c456 = peg$otherExpectation(\"octal value\"),\n        peg$c457 = /^[0-7]/,\n        peg$c458 = peg$classExpectation([[\"0\", \"7\"]], false, false),\n        peg$c459 = peg$otherExpectation(\"hex digit\"),\n        peg$c460 = /^[a-f0-9]/i,\n        peg$c461 = peg$classExpectation([[\"a\", \"f\"], [\"0\", \"9\"]], false, true),\n        peg$c462 = peg$otherExpectation(\"float value\"),\n        peg$c463 = /^[+\\-]/,\n        peg$c464 = peg$classExpectation([\"+\", \"-\"], false, false),\n        peg$c465 = function(f) { return parseFloat(f); },\n        peg$c466 = \"the\",\n        peg$c467 = peg$literalExpectation(\"the\", false),\n        peg$c468 = function(c) { return g.hasCounter(c);},\n        peg$c469 = function(c) { return g.createText(\"\" + g.counter(c)); },\n        peg$c470 = function(id) { return g.theLength(id); },\n        peg$c471 = function(t) { return t; },\n        peg$c472 = \"showthe\",\n        peg$c473 = peg$literalExpectation(\"showthe\", false),\n        peg$c474 = function(c) { console.log(g.counter(c)); },\n        peg$c475 = function(l) { console.log(g.length(l)); },\n        peg$c476 = \"message\",\n        peg$c477 = peg$literalExpectation(\"message\", false),\n        peg$c478 = function(m) { console.log(m.textContent); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parselatex() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsewith_preamble();\n      peg$silentFails--;\n      if (s2 !== peg$FAILED) {\n        peg$currPos = s1;\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseescape();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseis_hvmode();\n            peg$silentFails--;\n            if (s7 !== peg$FAILED) {\n              peg$currPos = s6;\n              s6 = void 0;\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseis_preamble();\n              peg$silentFails--;\n              if (s7 !== peg$FAILED) {\n                peg$currPos = s6;\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemacro();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseescape();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseis_hvmode();\n              peg$silentFails--;\n              if (s7 !== peg$FAILED) {\n                peg$currPos = s6;\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$parseis_preamble();\n                peg$silentFails--;\n                if (s7 !== peg$FAILED) {\n                  peg$currPos = s6;\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsemacro();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_all_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_doc();\n            if (s4 === peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s4 = peg$c0();\n              if (s4) {\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsedocument();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_doc();\n                if (s6 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s6 = peg$c1();\n                  if (s6) {\n                    s6 = void 0;\n                  } else {\n                    s6 = peg$FAILED;\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  if (input.length > peg$currPos) {\n                    s8 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (input.length > peg$currPos) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseEOF();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c3();\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parsewith_preamble();\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n          s1 = void 0;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s2 = peg$c4();\n          if (s2) {\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsedocument();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseEOF();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c3();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsewith_preamble() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parseis_preamble();\n          peg$silentFails--;\n          if (s4 !== peg$FAILED) {\n            peg$currPos = s3;\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_doc() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c5) {\n                s5 = peg$c5;\n                peg$currPos += 8;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  s1 = [s1, s2, s3, s4, s5, s6];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_doc() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseend();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c5) {\n                s5 = peg$c5;\n                peg$currPos += 8;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  s1 = [s1, s2, s3, s4, s5, s6];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsedocument() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c7();\n      if (s1) {\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_all_space();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseparagraph();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseparagraph();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_all_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c8(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseparagraph() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$parsevmode_macro();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$parseescape();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenoindent();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsebreak();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          s4 = peg$parseescape();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsenoindent();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebreak();\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseskip_space();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsenoindent();\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = null;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parsetext();\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parsetext();\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsebreak();\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c9(s1, s3, s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseparagraph_with_linebreak() {\n      var s0, s1;\n\n      s0 = peg$parsetext();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsevmode_macro();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsebreak();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseline() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parselinebreak();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsebreak();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetext();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsetext() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseligature();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseprimitive();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsebreak();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsecomment();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s2;\n              s3 = peg$c11();\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseligature();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseprimitive();\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = peg$currPos;\n              peg$silentFails++;\n              s4 = peg$parsebreak();\n              peg$silentFails--;\n              if (s4 === peg$FAILED) {\n                s3 = void 0;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsecomment();\n                if (s4 !== peg$FAILED) {\n                  peg$savedPos = s2;\n                  s3 = peg$c11();\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parselinebreak();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$currPos;\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseunskip_macro();\n          peg$silentFails--;\n          if (s3 !== peg$FAILED) {\n            peg$currPos = s2;\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseskip_space();\n            if (s3 !== peg$FAILED) {\n              s2 = [s2, s3];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = null;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehmode_macro();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsemath();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parsebegin_group();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s2 = peg$c16();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parsespace();\n                  if (s3 === peg$FAILED) {\n                    s3 = null;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseend_group();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c18();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parsespace();\n                    if (s3 === peg$FAILED) {\n                      s3 = null;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c17(s3);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseprimitive() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$parsechar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsespace();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$parseunskip_macro();\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = void 0;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c20();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsehyphen();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsedigit();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsepunctuation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsequotes();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseleft_br();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    s1 = peg$parseright_br();\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c21(s1);\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c22(s1);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsenbsp();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsectrl_space();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsediacritic();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parsectrl_sym();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parsesymbol();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parsecharsym();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseutf8_char();\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehv_macro() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parseis_hvmode();\n        peg$silentFails--;\n        if (s4 !== peg$FAILED) {\n          peg$currPos = s3;\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsemacro();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$parselogging();\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsehmode_macro() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$parsehv_macro();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parseis_hmode();\n          peg$silentFails--;\n          if (s4 !== peg$FAILED) {\n            peg$currPos = s3;\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemacro();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s2;\n              s3 = peg$c15(s4);\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parseis_hmode_env();\n            peg$silentFails--;\n            if (s4 !== peg$FAILED) {\n              peg$currPos = s3;\n              s3 = void 0;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseh_environment();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c23(s4);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsenoindent();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parsesmbskip_hmode();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parsevspace_hmode();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parsethe();\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$parseverb();\n                      if (s2 === peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        peg$silentFails++;\n                        s4 = peg$parseis_preamble();\n                        peg$silentFails--;\n                        if (s4 !== peg$FAILED) {\n                          peg$currPos = s3;\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s4 = peg$parseonly_preamble();\n                          if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s2;\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 === peg$FAILED) {\n                          s2 = peg$currPos;\n                          s3 = peg$currPos;\n                          peg$silentFails++;\n                          s4 = peg$parsebegin();\n                          peg$silentFails--;\n                          if (s4 === peg$FAILED) {\n                            s3 = void 0;\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                          if (s3 !== peg$FAILED) {\n                            s4 = peg$currPos;\n                            peg$silentFails++;\n                            s5 = peg$parseend();\n                            peg$silentFails--;\n                            if (s5 === peg$FAILED) {\n                              s4 = void 0;\n                            } else {\n                              peg$currPos = s4;\n                              s4 = peg$FAILED;\n                            }\n                            if (s4 !== peg$FAILED) {\n                              s5 = peg$currPos;\n                              peg$silentFails++;\n                              s6 = peg$parseis_vmode();\n                              peg$silentFails--;\n                              if (s6 === peg$FAILED) {\n                                s5 = void 0;\n                              } else {\n                                peg$currPos = s5;\n                                s5 = peg$FAILED;\n                              }\n                              if (s5 !== peg$FAILED) {\n                                s6 = peg$parseunknown_macro();\n                                if (s6 !== peg$FAILED) {\n                                  s3 = [s3, s4, s5, s6];\n                                  s2 = s3;\n                                } else {\n                                  peg$currPos = s2;\n                                  s2 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s2;\n                                s2 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsevmode_macro() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsehv_macro();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseskip_all_space();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseescape();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parseis_vmode();\n            peg$silentFails--;\n            if (s5 !== peg$FAILED) {\n              peg$currPos = s4;\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemacro();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c24(s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parseis_vmode_env();\n              peg$silentFails--;\n              if (s5 !== peg$FAILED) {\n                peg$currPos = s4;\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseenvironment();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c23(s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$parsevspace_vmode();\n                if (s3 === peg$FAILED) {\n                  s3 = peg$parsesmbskip_vmode();\n                }\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_preamble() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c25(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_vmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c26(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c27(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hvmode() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c28(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_vmode_env() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseend();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseidentifier();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s4 = peg$c26(s3);\n            if (s4) {\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseis_hmode_env() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseidentifier();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s4 = peg$c29(s3);\n            if (s4) {\n              s4 = void 0;\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c30(s1);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemacro_args();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c31(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseonly_preamble() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseunknown_macro() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c33(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsedigit();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsesp();\n          if (s2 === peg$FAILED) {\n            if (peg$c35.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s2 === peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = peg$currPos;\n              peg$silentFails++;\n              if (peg$c37.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c38); }\n              }\n              peg$silentFails--;\n              if (s4 === peg$FAILED) {\n                s3 = void 0;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parseutf8_char();\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsedigit();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsesp();\n              if (s2 === peg$FAILED) {\n                if (peg$c35.test(input.charAt(peg$currPos))) {\n                  s2 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c36); }\n                }\n                if (s2 === peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  peg$silentFails++;\n                  if (peg$c37.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                  }\n                  peg$silentFails--;\n                  if (s4 === peg$FAILED) {\n                    s3 = void 0;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parseutf8_char();\n                    if (s4 !== peg$FAILED) {\n                      s3 = [s3, s4];\n                      s2 = s3;\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_val() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsekey();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parseskip_space();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c40;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsekey();\n              if (s6 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s6 = peg$c42(s1);\n                if (s6) {\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s2;\n                s3 = peg$c43(s1, s6);\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro_args() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = [];\n      s1 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s2 = peg$c45();\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s1;\n        s2 = peg$c46();\n      }\n      s1 = s2;\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsenextArgStar();\n        if (s1 === peg$FAILED) {\n          s1 = peg$currPos;\n          peg$savedPos = peg$currPos;\n          s2 = peg$c47();\n          if (s2) {\n            s2 = void 0;\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsearg_group();\n            if (s3 === peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s3 = peg$c48();\n              if (s3) {\n                s3 = void 0;\n              } else {\n                s3 = peg$FAILED;\n              }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c49(s3);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s2 = peg$c50();\n            if (s2) {\n              s2 = void 0;\n            } else {\n              s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsearg_hgroup();\n              if (s3 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s3 = peg$c48();\n                if (s3) {\n                  s3 = void 0;\n                } else {\n                  s3 = peg$FAILED;\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c49(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              peg$savedPos = peg$currPos;\n              s2 = peg$c51();\n              if (s2) {\n                s2 = void 0;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsehorizontal();\n                if (s3 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s3 = peg$c52();\n                  if (s3) {\n                    s3 = void 0;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s1;\n                  s2 = peg$c53(s3);\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = peg$currPos;\n                peg$savedPos = peg$currPos;\n                s2 = peg$c54();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parseopt_group();\n                  if (s3 === peg$FAILED) {\n                    s3 = null;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s1;\n                    s2 = peg$c55(s3);\n                    s1 = s2;\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = peg$currPos;\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c56();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseid_group();\n                    if (s3 === peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s3 = peg$c57();\n                      if (s3) {\n                        s3 = void 0;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s1;\n                      s2 = peg$c58(s3);\n                      s1 = s2;\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$currPos;\n                    peg$savedPos = peg$currPos;\n                    s2 = peg$c59();\n                    if (s2) {\n                      s2 = void 0;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseide_group();\n                      if (s3 === peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s3 = peg$c60();\n                        if (s3) {\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        peg$savedPos = s1;\n                        s2 = peg$c58(s3);\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = peg$currPos;\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c61();\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$parseid_optgroup();\n                        if (s3 === peg$FAILED) {\n                          s3 = null;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s1;\n                          s2 = peg$c58(s3);\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = peg$currPos;\n                        peg$savedPos = peg$currPos;\n                        s2 = peg$c62();\n                        if (s2) {\n                          s2 = void 0;\n                        } else {\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          s3 = peg$parsekey_group();\n                          if (s3 === peg$FAILED) {\n                            peg$savedPos = peg$currPos;\n                            s3 = peg$c63();\n                            if (s3) {\n                              s3 = void 0;\n                            } else {\n                              s3 = peg$FAILED;\n                            }\n                          }\n                          if (s3 !== peg$FAILED) {\n                            peg$savedPos = s1;\n                            s2 = peg$c64(s3);\n                            s1 = s2;\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = peg$currPos;\n                          peg$savedPos = peg$currPos;\n                          s2 = peg$c65();\n                          if (s2) {\n                            s2 = void 0;\n                          } else {\n                            s2 = peg$FAILED;\n                          }\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsekey_optgroup();\n                            if (s3 === peg$FAILED) {\n                              s3 = null;\n                            }\n                            if (s3 !== peg$FAILED) {\n                              peg$savedPos = s1;\n                              s2 = peg$c64(s3);\n                              s1 = s2;\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = peg$currPos;\n                            peg$savedPos = peg$currPos;\n                            s2 = peg$c66();\n                            if (s2) {\n                              s2 = void 0;\n                            } else {\n                              s2 = peg$FAILED;\n                            }\n                            if (s2 !== peg$FAILED) {\n                              s3 = peg$parsekeyval_optgroup();\n                              if (s3 === peg$FAILED) {\n                                s3 = null;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                peg$savedPos = s1;\n                                s2 = peg$c64(s3);\n                                s1 = s2;\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = peg$currPos;\n                              peg$savedPos = peg$currPos;\n                              s2 = peg$c67();\n                              if (s2) {\n                                s2 = void 0;\n                              } else {\n                                s2 = peg$FAILED;\n                              }\n                              if (s2 !== peg$FAILED) {\n                                s3 = peg$parsecsv_group();\n                                if (s3 === peg$FAILED) {\n                                  peg$savedPos = peg$currPos;\n                                  s3 = peg$c68();\n                                  if (s3) {\n                                    s3 = void 0;\n                                  } else {\n                                    s3 = peg$FAILED;\n                                  }\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  peg$savedPos = s1;\n                                  s2 = peg$c69(s3);\n                                  s1 = s2;\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = peg$currPos;\n                                peg$savedPos = peg$currPos;\n                                s2 = peg$c70();\n                                if (s2) {\n                                  s2 = void 0;\n                                } else {\n                                  s2 = peg$FAILED;\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  s3 = peg$parseexpr_group();\n                                  if (s3 === peg$FAILED) {\n                                    peg$savedPos = peg$currPos;\n                                    s3 = peg$c71();\n                                    if (s3) {\n                                      s3 = void 0;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                    }\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    peg$savedPos = s1;\n                                    s2 = peg$c72(s3);\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = peg$currPos;\n                                  peg$savedPos = peg$currPos;\n                                  s2 = peg$c73();\n                                  if (s2) {\n                                    s2 = void 0;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    s3 = peg$parseexpr_optgroup();\n                                    if (s3 === peg$FAILED) {\n                                      s3 = null;\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      peg$savedPos = s1;\n                                      s2 = peg$c72(s3);\n                                      s1 = s2;\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = peg$currPos;\n                                    peg$savedPos = peg$currPos;\n                                    s2 = peg$c74();\n                                    if (s2) {\n                                      s2 = void 0;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = peg$parselength_group();\n                                      if (s3 === peg$FAILED) {\n                                        peg$savedPos = peg$currPos;\n                                        s3 = peg$c75();\n                                        if (s3) {\n                                          s3 = void 0;\n                                        } else {\n                                          s3 = peg$FAILED;\n                                        }\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        peg$savedPos = s1;\n                                        s2 = peg$c76(s3);\n                                        s1 = s2;\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = peg$currPos;\n                                      peg$savedPos = peg$currPos;\n                                      s2 = peg$c77();\n                                      if (s2) {\n                                        s2 = void 0;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        s3 = peg$parselength_group();\n                                        if (s3 === peg$FAILED) {\n                                          s3 = null;\n                                        }\n                                        if (s3 !== peg$FAILED) {\n                                          peg$savedPos = s1;\n                                          s2 = peg$c76(s3);\n                                          s1 = s2;\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = peg$currPos;\n                                        peg$savedPos = peg$currPos;\n                                        s2 = peg$c78();\n                                        if (s2) {\n                                          s2 = void 0;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          s3 = peg$parselength_optgroup();\n                                          if (s3 === peg$FAILED) {\n                                            s3 = null;\n                                          }\n                                          if (s3 !== peg$FAILED) {\n                                            peg$savedPos = s1;\n                                            s2 = peg$c76(s3);\n                                            s1 = s2;\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = peg$currPos;\n                                          peg$savedPos = peg$currPos;\n                                          s2 = peg$c79();\n                                          if (s2) {\n                                            s2 = void 0;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            s3 = peg$parsemacro_group();\n                                            if (s3 === peg$FAILED) {\n                                              peg$savedPos = peg$currPos;\n                                              s3 = peg$c80();\n                                              if (s3) {\n                                                s3 = void 0;\n                                              } else {\n                                                s3 = peg$FAILED;\n                                              }\n                                            }\n                                            if (s3 !== peg$FAILED) {\n                                              peg$savedPos = s1;\n                                              s2 = peg$c81(s3);\n                                              s1 = s2;\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = peg$currPos;\n                                            peg$savedPos = peg$currPos;\n                                            s2 = peg$c82();\n                                            if (s2) {\n                                              s2 = void 0;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              s3 = peg$parseurl_group();\n                                              if (s3 === peg$FAILED) {\n                                                peg$savedPos = peg$currPos;\n                                                s3 = peg$c83();\n                                                if (s3) {\n                                                  s3 = void 0;\n                                                } else {\n                                                  s3 = peg$FAILED;\n                                                }\n                                              }\n                                              if (s3 !== peg$FAILED) {\n                                                peg$savedPos = s1;\n                                                s2 = peg$c84(s3);\n                                                s1 = s2;\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = peg$currPos;\n                                              peg$savedPos = peg$currPos;\n                                              s2 = peg$c85();\n                                              if (s2) {\n                                                s2 = void 0;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                s3 = peg$parsecolor_group();\n                                                if (s3 === peg$FAILED) {\n                                                  peg$savedPos = peg$currPos;\n                                                  s3 = peg$c86();\n                                                  if (s3) {\n                                                    s3 = void 0;\n                                                  } else {\n                                                    s3 = peg$FAILED;\n                                                  }\n                                                }\n                                                if (s3 !== peg$FAILED) {\n                                                  peg$savedPos = s1;\n                                                  s2 = peg$c87(s3);\n                                                  s1 = s2;\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = peg$currPos;\n                                                peg$savedPos = peg$currPos;\n                                                s2 = peg$c88();\n                                                if (s2) {\n                                                  s2 = void 0;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  s3 = peg$parsecolor_modellist_group();\n                                                  if (s3 === peg$FAILED) {\n                                                    peg$savedPos = peg$currPos;\n                                                    s3 = peg$c89();\n                                                    if (s3) {\n                                                      s3 = void 0;\n                                                    } else {\n                                                      s3 = peg$FAILED;\n                                                    }\n                                                  }\n                                                  if (s3 !== peg$FAILED) {\n                                                    peg$savedPos = s1;\n                                                    s2 = peg$c87(s3);\n                                                    s1 = s2;\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = peg$currPos;\n                                                  peg$savedPos = peg$currPos;\n                                                  s2 = peg$c90();\n                                                  if (s2) {\n                                                    s2 = void 0;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    s3 = peg$parsecolor_modellist_optgroup();\n                                                    if (s3 === peg$FAILED) {\n                                                      s3 = null;\n                                                    }\n                                                    if (s3 !== peg$FAILED) {\n                                                      peg$savedPos = s1;\n                                                      s2 = peg$c87(s3);\n                                                      s1 = s2;\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = peg$currPos;\n                                                    peg$savedPos = peg$currPos;\n                                                    s2 = peg$c91();\n                                                    if (s2) {\n                                                      s2 = void 0;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      s3 = peg$parsecolor_setspec_group();\n                                                      if (s3 === peg$FAILED) {\n                                                        peg$savedPos = peg$currPos;\n                                                        s3 = peg$c92();\n                                                        if (s3) {\n                                                          s3 = void 0;\n                                                        } else {\n                                                          s3 = peg$FAILED;\n                                                        }\n                                                      }\n                                                      if (s3 !== peg$FAILED) {\n                                                        peg$savedPos = s1;\n                                                        s2 = peg$c87(s3);\n                                                        s1 = s2;\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                    if (s1 === peg$FAILED) {\n                                                      s1 = peg$currPos;\n                                                      peg$savedPos = peg$currPos;\n                                                      s2 = peg$c93();\n                                                      if (s2) {\n                                                        s2 = void 0;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                      }\n                                                      if (s2 !== peg$FAILED) {\n                                                        s3 = peg$parsecolor_speclist_group();\n                                                        if (s3 === peg$FAILED) {\n                                                          peg$savedPos = peg$currPos;\n                                                          s3 = peg$c94();\n                                                          if (s3) {\n                                                            s3 = void 0;\n                                                          } else {\n                                                            s3 = peg$FAILED;\n                                                          }\n                                                        }\n                                                        if (s3 !== peg$FAILED) {\n                                                          peg$savedPos = s1;\n                                                          s2 = peg$c87(s3);\n                                                          s1 = s2;\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                      if (s1 === peg$FAILED) {\n                                                        s1 = peg$currPos;\n                                                        peg$savedPos = peg$currPos;\n                                                        s2 = peg$c95();\n                                                        if (s2) {\n                                                          s2 = void 0;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                        }\n                                                        if (s2 !== peg$FAILED) {\n                                                          s3 = peg$parsecoord_group();\n                                                          if (s3 === peg$FAILED) {\n                                                            peg$savedPos = peg$currPos;\n                                                            s3 = peg$c96();\n                                                            if (s3) {\n                                                              s3 = void 0;\n                                                            } else {\n                                                              s3 = peg$FAILED;\n                                                            }\n                                                          }\n                                                          if (s3 !== peg$FAILED) {\n                                                            peg$savedPos = s1;\n                                                            s2 = peg$c87(s3);\n                                                            s1 = s2;\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                        if (s1 === peg$FAILED) {\n                                                          s1 = peg$currPos;\n                                                          peg$savedPos = peg$currPos;\n                                                          s2 = peg$c97();\n                                                          if (s2) {\n                                                            s2 = void 0;\n                                                          } else {\n                                                            s2 = peg$FAILED;\n                                                          }\n                                                          if (s2 !== peg$FAILED) {\n                                                            s3 = peg$parsecoord_optgroup();\n                                                            if (s3 === peg$FAILED) {\n                                                              s3 = null;\n                                                            }\n                                                            if (s3 !== peg$FAILED) {\n                                                              peg$savedPos = s1;\n                                                              s2 = peg$c87(s3);\n                                                              s1 = s2;\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                          if (s1 === peg$FAILED) {\n                                                            s1 = peg$currPos;\n                                                            peg$savedPos = peg$currPos;\n                                                            s2 = peg$c98();\n                                                            if (s2) {\n                                                              s2 = void 0;\n                                                            } else {\n                                                              s2 = peg$FAILED;\n                                                            }\n                                                            if (s2 !== peg$FAILED) {\n                                                              s3 = peg$parsevector();\n                                                              if (s3 === peg$FAILED) {\n                                                                peg$savedPos = peg$currPos;\n                                                                s3 = peg$c99();\n                                                                if (s3) {\n                                                                  s3 = void 0;\n                                                                } else {\n                                                                  s3 = peg$FAILED;\n                                                                }\n                                                              }\n                                                              if (s3 !== peg$FAILED) {\n                                                                peg$savedPos = s1;\n                                                                s2 = peg$c69(s3);\n                                                                s1 = s2;\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                            if (s1 === peg$FAILED) {\n                                                              s1 = peg$currPos;\n                                                              peg$savedPos = peg$currPos;\n                                                              s2 = peg$c100();\n                                                              if (s2) {\n                                                                s2 = void 0;\n                                                              } else {\n                                                                s2 = peg$FAILED;\n                                                              }\n                                                              if (s2 !== peg$FAILED) {\n                                                                s3 = peg$parsevector();\n                                                                if (s3 === peg$FAILED) {\n                                                                  s3 = null;\n                                                                }\n                                                                if (s3 !== peg$FAILED) {\n                                                                  peg$savedPos = s1;\n                                                                  s2 = peg$c69(s3);\n                                                                  s1 = s2;\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                              if (s1 === peg$FAILED) {\n                                                                s1 = peg$currPos;\n                                                                peg$savedPos = peg$currPos;\n                                                                s2 = peg$c101();\n                                                                if (s2) {\n                                                                  s2 = void 0;\n                                                                } else {\n                                                                  s2 = peg$FAILED;\n                                                                }\n                                                                if (s2 !== peg$FAILED) {\n                                                                  s3 = peg$parsecolumns();\n                                                                  if (s3 === peg$FAILED) {\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s3 = peg$c102();\n                                                                    if (s3) {\n                                                                      s3 = void 0;\n                                                                    } else {\n                                                                      s3 = peg$FAILED;\n                                                                    }\n                                                                  }\n                                                                  if (s3 !== peg$FAILED) {\n                                                                    peg$savedPos = s1;\n                                                                    s2 = peg$c87(s3);\n                                                                    s1 = s2;\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                                if (s1 === peg$FAILED) {\n                                                                  s1 = peg$currPos;\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s2 = peg$c103();\n                                                                  if (s2) {\n                                                                    s2 = void 0;\n                                                                  } else {\n                                                                    s2 = peg$FAILED;\n                                                                  }\n                                                                  if (s2 !== peg$FAILED) {\n                                                                    s3 = peg$parseskip_space();\n                                                                    if (s3 !== peg$FAILED) {\n                                                                      s2 = [s2, s3];\n                                                                      s1 = s2;\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                  if (s1 === peg$FAILED) {\n                                                                    s1 = peg$currPos;\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s2 = peg$c104();\n                                                                    if (s2) {\n                                                                      s2 = void 0;\n                                                                    } else {\n                                                                      s2 = peg$FAILED;\n                                                                    }\n                                                                    if (s2 !== peg$FAILED) {\n                                                                      s3 = peg$parseitems();\n                                                                      if (s3 !== peg$FAILED) {\n                                                                        peg$savedPos = s1;\n                                                                        s2 = peg$c58(s3);\n                                                                        s1 = s2;\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                    if (s1 === peg$FAILED) {\n                                                                      s1 = peg$currPos;\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s2 = peg$c105();\n                                                                      if (s2) {\n                                                                        s2 = void 0;\n                                                                      } else {\n                                                                        s2 = peg$FAILED;\n                                                                      }\n                                                                      if (s2 !== peg$FAILED) {\n                                                                        s3 = peg$parseenumitems();\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$savedPos = s1;\n                                                                          s2 = peg$c58(s3);\n                                                                          s1 = s2;\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                      if (s1 === peg$FAILED) {\n                                                                        s1 = peg$currPos;\n                                                                        s2 = peg$currPos;\n                                                                        peg$silentFails++;\n                                                                        s3 = peg$currPos;\n                                                                        s4 = peg$parseskip_space();\n                                                                        if (s4 !== peg$FAILED) {\n                                                                          s5 = peg$parsebegin_optgroup();\n                                                                          if (s5 !== peg$FAILED) {\n                                                                            s4 = [s4, s5];\n                                                                            s3 = s4;\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s3;\n                                                                          s3 = peg$FAILED;\n                                                                        }\n                                                                        peg$silentFails--;\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$currPos = s2;\n                                                                          s2 = void 0;\n                                                                        } else {\n                                                                          s2 = peg$FAILED;\n                                                                        }\n                                                                        if (s2 !== peg$FAILED) {\n                                                                          peg$savedPos = peg$currPos;\n                                                                          s3 = peg$c106();\n                                                                          if (s3) {\n                                                                            s3 = void 0;\n                                                                          } else {\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            s2 = [s2, s3];\n                                                                            s1 = s2;\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                        if (s1 === peg$FAILED) {\n                                                                          s1 = peg$currPos;\n                                                                          s2 = peg$currPos;\n                                                                          peg$silentFails++;\n                                                                          s3 = peg$currPos;\n                                                                          s4 = peg$parseskip_space();\n                                                                          if (s4 !== peg$FAILED) {\n                                                                            s5 = peg$parsebegin_group();\n                                                                            if (s5 !== peg$FAILED) {\n                                                                              s4 = [s4, s5];\n                                                                              s3 = s4;\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          peg$silentFails--;\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$currPos = s2;\n                                                                            s2 = void 0;\n                                                                          } else {\n                                                                            s2 = peg$FAILED;\n                                                                          }\n                                                                          if (s2 !== peg$FAILED) {\n                                                                            peg$savedPos = peg$currPos;\n                                                                            s3 = peg$c107();\n                                                                            if (s3) {\n                                                                              s3 = void 0;\n                                                                            } else {\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              s2 = [s2, s3];\n                                                                              s1 = s2;\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s2 = peg$c45();\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s1;\n          s2 = peg$c46();\n        }\n        s1 = s2;\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsenextArgStar();\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s2 = peg$c47();\n            if (s2) {\n              s2 = void 0;\n            } else {\n              s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsearg_group();\n              if (s3 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s3 = peg$c48();\n                if (s3) {\n                  s3 = void 0;\n                } else {\n                  s3 = peg$FAILED;\n                }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c49(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n            if (s1 === peg$FAILED) {\n              s1 = peg$currPos;\n              peg$savedPos = peg$currPos;\n              s2 = peg$c50();\n              if (s2) {\n                s2 = void 0;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsearg_hgroup();\n                if (s3 === peg$FAILED) {\n                  peg$savedPos = peg$currPos;\n                  s3 = peg$c48();\n                  if (s3) {\n                    s3 = void 0;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s1;\n                  s2 = peg$c49(s3);\n                  s1 = s2;\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n              if (s1 === peg$FAILED) {\n                s1 = peg$currPos;\n                peg$savedPos = peg$currPos;\n                s2 = peg$c51();\n                if (s2) {\n                  s2 = void 0;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parsehorizontal();\n                  if (s3 === peg$FAILED) {\n                    peg$savedPos = peg$currPos;\n                    s3 = peg$c52();\n                    if (s3) {\n                      s3 = void 0;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s1;\n                    s2 = peg$c53(s3);\n                    s1 = s2;\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s1;\n                  s1 = peg$FAILED;\n                }\n                if (s1 === peg$FAILED) {\n                  s1 = peg$currPos;\n                  peg$savedPos = peg$currPos;\n                  s2 = peg$c54();\n                  if (s2) {\n                    s2 = void 0;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseopt_group();\n                    if (s3 === peg$FAILED) {\n                      s3 = null;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s1;\n                      s2 = peg$c55(s3);\n                      s1 = s2;\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 === peg$FAILED) {\n                    s1 = peg$currPos;\n                    peg$savedPos = peg$currPos;\n                    s2 = peg$c56();\n                    if (s2) {\n                      s2 = void 0;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseid_group();\n                      if (s3 === peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s3 = peg$c57();\n                        if (s3) {\n                          s3 = void 0;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        peg$savedPos = s1;\n                        s2 = peg$c58(s3);\n                        s1 = s2;\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s1;\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 === peg$FAILED) {\n                      s1 = peg$currPos;\n                      peg$savedPos = peg$currPos;\n                      s2 = peg$c59();\n                      if (s2) {\n                        s2 = void 0;\n                      } else {\n                        s2 = peg$FAILED;\n                      }\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$parseide_group();\n                        if (s3 === peg$FAILED) {\n                          peg$savedPos = peg$currPos;\n                          s3 = peg$c60();\n                          if (s3) {\n                            s3 = void 0;\n                          } else {\n                            s3 = peg$FAILED;\n                          }\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s1;\n                          s2 = peg$c58(s3);\n                          s1 = s2;\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 === peg$FAILED) {\n                        s1 = peg$currPos;\n                        peg$savedPos = peg$currPos;\n                        s2 = peg$c61();\n                        if (s2) {\n                          s2 = void 0;\n                        } else {\n                          s2 = peg$FAILED;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          s3 = peg$parseid_optgroup();\n                          if (s3 === peg$FAILED) {\n                            s3 = null;\n                          }\n                          if (s3 !== peg$FAILED) {\n                            peg$savedPos = s1;\n                            s2 = peg$c58(s3);\n                            s1 = s2;\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s1;\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 === peg$FAILED) {\n                          s1 = peg$currPos;\n                          peg$savedPos = peg$currPos;\n                          s2 = peg$c62();\n                          if (s2) {\n                            s2 = void 0;\n                          } else {\n                            s2 = peg$FAILED;\n                          }\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsekey_group();\n                            if (s3 === peg$FAILED) {\n                              peg$savedPos = peg$currPos;\n                              s3 = peg$c63();\n                              if (s3) {\n                                s3 = void 0;\n                              } else {\n                                s3 = peg$FAILED;\n                              }\n                            }\n                            if (s3 !== peg$FAILED) {\n                              peg$savedPos = s1;\n                              s2 = peg$c64(s3);\n                              s1 = s2;\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s1;\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 === peg$FAILED) {\n                            s1 = peg$currPos;\n                            peg$savedPos = peg$currPos;\n                            s2 = peg$c65();\n                            if (s2) {\n                              s2 = void 0;\n                            } else {\n                              s2 = peg$FAILED;\n                            }\n                            if (s2 !== peg$FAILED) {\n                              s3 = peg$parsekey_optgroup();\n                              if (s3 === peg$FAILED) {\n                                s3 = null;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                peg$savedPos = s1;\n                                s2 = peg$c64(s3);\n                                s1 = s2;\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s1;\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 === peg$FAILED) {\n                              s1 = peg$currPos;\n                              peg$savedPos = peg$currPos;\n                              s2 = peg$c66();\n                              if (s2) {\n                                s2 = void 0;\n                              } else {\n                                s2 = peg$FAILED;\n                              }\n                              if (s2 !== peg$FAILED) {\n                                s3 = peg$parsekeyval_optgroup();\n                                if (s3 === peg$FAILED) {\n                                  s3 = null;\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  peg$savedPos = s1;\n                                  s2 = peg$c64(s3);\n                                  s1 = s2;\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s1;\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 === peg$FAILED) {\n                                s1 = peg$currPos;\n                                peg$savedPos = peg$currPos;\n                                s2 = peg$c67();\n                                if (s2) {\n                                  s2 = void 0;\n                                } else {\n                                  s2 = peg$FAILED;\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  s3 = peg$parsecsv_group();\n                                  if (s3 === peg$FAILED) {\n                                    peg$savedPos = peg$currPos;\n                                    s3 = peg$c68();\n                                    if (s3) {\n                                      s3 = void 0;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                    }\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    peg$savedPos = s1;\n                                    s2 = peg$c69(s3);\n                                    s1 = s2;\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s1;\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 === peg$FAILED) {\n                                  s1 = peg$currPos;\n                                  peg$savedPos = peg$currPos;\n                                  s2 = peg$c70();\n                                  if (s2) {\n                                    s2 = void 0;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    s3 = peg$parseexpr_group();\n                                    if (s3 === peg$FAILED) {\n                                      peg$savedPos = peg$currPos;\n                                      s3 = peg$c71();\n                                      if (s3) {\n                                        s3 = void 0;\n                                      } else {\n                                        s3 = peg$FAILED;\n                                      }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      peg$savedPos = s1;\n                                      s2 = peg$c72(s3);\n                                      s1 = s2;\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s1;\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    s1 = peg$currPos;\n                                    peg$savedPos = peg$currPos;\n                                    s2 = peg$c73();\n                                    if (s2) {\n                                      s2 = void 0;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = peg$parseexpr_optgroup();\n                                      if (s3 === peg$FAILED) {\n                                        s3 = null;\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        peg$savedPos = s1;\n                                        s2 = peg$c72(s3);\n                                        s1 = s2;\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s1;\n                                      s1 = peg$FAILED;\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      s1 = peg$currPos;\n                                      peg$savedPos = peg$currPos;\n                                      s2 = peg$c74();\n                                      if (s2) {\n                                        s2 = void 0;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                      }\n                                      if (s2 !== peg$FAILED) {\n                                        s3 = peg$parselength_group();\n                                        if (s3 === peg$FAILED) {\n                                          peg$savedPos = peg$currPos;\n                                          s3 = peg$c75();\n                                          if (s3) {\n                                            s3 = void 0;\n                                          } else {\n                                            s3 = peg$FAILED;\n                                          }\n                                        }\n                                        if (s3 !== peg$FAILED) {\n                                          peg$savedPos = s1;\n                                          s2 = peg$c76(s3);\n                                          s1 = s2;\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s1;\n                                        s1 = peg$FAILED;\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        s1 = peg$currPos;\n                                        peg$savedPos = peg$currPos;\n                                        s2 = peg$c77();\n                                        if (s2) {\n                                          s2 = void 0;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                        }\n                                        if (s2 !== peg$FAILED) {\n                                          s3 = peg$parselength_group();\n                                          if (s3 === peg$FAILED) {\n                                            s3 = null;\n                                          }\n                                          if (s3 !== peg$FAILED) {\n                                            peg$savedPos = s1;\n                                            s2 = peg$c76(s3);\n                                            s1 = s2;\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s1;\n                                          s1 = peg$FAILED;\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          s1 = peg$currPos;\n                                          peg$savedPos = peg$currPos;\n                                          s2 = peg$c78();\n                                          if (s2) {\n                                            s2 = void 0;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                          }\n                                          if (s2 !== peg$FAILED) {\n                                            s3 = peg$parselength_optgroup();\n                                            if (s3 === peg$FAILED) {\n                                              s3 = null;\n                                            }\n                                            if (s3 !== peg$FAILED) {\n                                              peg$savedPos = s1;\n                                              s2 = peg$c76(s3);\n                                              s1 = s2;\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s1;\n                                            s1 = peg$FAILED;\n                                          }\n                                          if (s1 === peg$FAILED) {\n                                            s1 = peg$currPos;\n                                            peg$savedPos = peg$currPos;\n                                            s2 = peg$c79();\n                                            if (s2) {\n                                              s2 = void 0;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                            }\n                                            if (s2 !== peg$FAILED) {\n                                              s3 = peg$parsemacro_group();\n                                              if (s3 === peg$FAILED) {\n                                                peg$savedPos = peg$currPos;\n                                                s3 = peg$c80();\n                                                if (s3) {\n                                                  s3 = void 0;\n                                                } else {\n                                                  s3 = peg$FAILED;\n                                                }\n                                              }\n                                              if (s3 !== peg$FAILED) {\n                                                peg$savedPos = s1;\n                                                s2 = peg$c81(s3);\n                                                s1 = s2;\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s1;\n                                              s1 = peg$FAILED;\n                                            }\n                                            if (s1 === peg$FAILED) {\n                                              s1 = peg$currPos;\n                                              peg$savedPos = peg$currPos;\n                                              s2 = peg$c82();\n                                              if (s2) {\n                                                s2 = void 0;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                              }\n                                              if (s2 !== peg$FAILED) {\n                                                s3 = peg$parseurl_group();\n                                                if (s3 === peg$FAILED) {\n                                                  peg$savedPos = peg$currPos;\n                                                  s3 = peg$c83();\n                                                  if (s3) {\n                                                    s3 = void 0;\n                                                  } else {\n                                                    s3 = peg$FAILED;\n                                                  }\n                                                }\n                                                if (s3 !== peg$FAILED) {\n                                                  peg$savedPos = s1;\n                                                  s2 = peg$c84(s3);\n                                                  s1 = s2;\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s1;\n                                                s1 = peg$FAILED;\n                                              }\n                                              if (s1 === peg$FAILED) {\n                                                s1 = peg$currPos;\n                                                peg$savedPos = peg$currPos;\n                                                s2 = peg$c85();\n                                                if (s2) {\n                                                  s2 = void 0;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                }\n                                                if (s2 !== peg$FAILED) {\n                                                  s3 = peg$parsecolor_group();\n                                                  if (s3 === peg$FAILED) {\n                                                    peg$savedPos = peg$currPos;\n                                                    s3 = peg$c86();\n                                                    if (s3) {\n                                                      s3 = void 0;\n                                                    } else {\n                                                      s3 = peg$FAILED;\n                                                    }\n                                                  }\n                                                  if (s3 !== peg$FAILED) {\n                                                    peg$savedPos = s1;\n                                                    s2 = peg$c87(s3);\n                                                    s1 = s2;\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s1;\n                                                  s1 = peg$FAILED;\n                                                }\n                                                if (s1 === peg$FAILED) {\n                                                  s1 = peg$currPos;\n                                                  peg$savedPos = peg$currPos;\n                                                  s2 = peg$c88();\n                                                  if (s2) {\n                                                    s2 = void 0;\n                                                  } else {\n                                                    s2 = peg$FAILED;\n                                                  }\n                                                  if (s2 !== peg$FAILED) {\n                                                    s3 = peg$parsecolor_modellist_group();\n                                                    if (s3 === peg$FAILED) {\n                                                      peg$savedPos = peg$currPos;\n                                                      s3 = peg$c89();\n                                                      if (s3) {\n                                                        s3 = void 0;\n                                                      } else {\n                                                        s3 = peg$FAILED;\n                                                      }\n                                                    }\n                                                    if (s3 !== peg$FAILED) {\n                                                      peg$savedPos = s1;\n                                                      s2 = peg$c87(s3);\n                                                      s1 = s2;\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                  } else {\n                                                    peg$currPos = s1;\n                                                    s1 = peg$FAILED;\n                                                  }\n                                                  if (s1 === peg$FAILED) {\n                                                    s1 = peg$currPos;\n                                                    peg$savedPos = peg$currPos;\n                                                    s2 = peg$c90();\n                                                    if (s2) {\n                                                      s2 = void 0;\n                                                    } else {\n                                                      s2 = peg$FAILED;\n                                                    }\n                                                    if (s2 !== peg$FAILED) {\n                                                      s3 = peg$parsecolor_modellist_optgroup();\n                                                      if (s3 === peg$FAILED) {\n                                                        s3 = null;\n                                                      }\n                                                      if (s3 !== peg$FAILED) {\n                                                        peg$savedPos = s1;\n                                                        s2 = peg$c87(s3);\n                                                        s1 = s2;\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                    } else {\n                                                      peg$currPos = s1;\n                                                      s1 = peg$FAILED;\n                                                    }\n                                                    if (s1 === peg$FAILED) {\n                                                      s1 = peg$currPos;\n                                                      peg$savedPos = peg$currPos;\n                                                      s2 = peg$c91();\n                                                      if (s2) {\n                                                        s2 = void 0;\n                                                      } else {\n                                                        s2 = peg$FAILED;\n                                                      }\n                                                      if (s2 !== peg$FAILED) {\n                                                        s3 = peg$parsecolor_setspec_group();\n                                                        if (s3 === peg$FAILED) {\n                                                          peg$savedPos = peg$currPos;\n                                                          s3 = peg$c92();\n                                                          if (s3) {\n                                                            s3 = void 0;\n                                                          } else {\n                                                            s3 = peg$FAILED;\n                                                          }\n                                                        }\n                                                        if (s3 !== peg$FAILED) {\n                                                          peg$savedPos = s1;\n                                                          s2 = peg$c87(s3);\n                                                          s1 = s2;\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                      } else {\n                                                        peg$currPos = s1;\n                                                        s1 = peg$FAILED;\n                                                      }\n                                                      if (s1 === peg$FAILED) {\n                                                        s1 = peg$currPos;\n                                                        peg$savedPos = peg$currPos;\n                                                        s2 = peg$c93();\n                                                        if (s2) {\n                                                          s2 = void 0;\n                                                        } else {\n                                                          s2 = peg$FAILED;\n                                                        }\n                                                        if (s2 !== peg$FAILED) {\n                                                          s3 = peg$parsecolor_speclist_group();\n                                                          if (s3 === peg$FAILED) {\n                                                            peg$savedPos = peg$currPos;\n                                                            s3 = peg$c94();\n                                                            if (s3) {\n                                                              s3 = void 0;\n                                                            } else {\n                                                              s3 = peg$FAILED;\n                                                            }\n                                                          }\n                                                          if (s3 !== peg$FAILED) {\n                                                            peg$savedPos = s1;\n                                                            s2 = peg$c87(s3);\n                                                            s1 = s2;\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                        } else {\n                                                          peg$currPos = s1;\n                                                          s1 = peg$FAILED;\n                                                        }\n                                                        if (s1 === peg$FAILED) {\n                                                          s1 = peg$currPos;\n                                                          peg$savedPos = peg$currPos;\n                                                          s2 = peg$c95();\n                                                          if (s2) {\n                                                            s2 = void 0;\n                                                          } else {\n                                                            s2 = peg$FAILED;\n                                                          }\n                                                          if (s2 !== peg$FAILED) {\n                                                            s3 = peg$parsecoord_group();\n                                                            if (s3 === peg$FAILED) {\n                                                              peg$savedPos = peg$currPos;\n                                                              s3 = peg$c96();\n                                                              if (s3) {\n                                                                s3 = void 0;\n                                                              } else {\n                                                                s3 = peg$FAILED;\n                                                              }\n                                                            }\n                                                            if (s3 !== peg$FAILED) {\n                                                              peg$savedPos = s1;\n                                                              s2 = peg$c87(s3);\n                                                              s1 = s2;\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                          } else {\n                                                            peg$currPos = s1;\n                                                            s1 = peg$FAILED;\n                                                          }\n                                                          if (s1 === peg$FAILED) {\n                                                            s1 = peg$currPos;\n                                                            peg$savedPos = peg$currPos;\n                                                            s2 = peg$c97();\n                                                            if (s2) {\n                                                              s2 = void 0;\n                                                            } else {\n                                                              s2 = peg$FAILED;\n                                                            }\n                                                            if (s2 !== peg$FAILED) {\n                                                              s3 = peg$parsecoord_optgroup();\n                                                              if (s3 === peg$FAILED) {\n                                                                s3 = null;\n                                                              }\n                                                              if (s3 !== peg$FAILED) {\n                                                                peg$savedPos = s1;\n                                                                s2 = peg$c87(s3);\n                                                                s1 = s2;\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                            } else {\n                                                              peg$currPos = s1;\n                                                              s1 = peg$FAILED;\n                                                            }\n                                                            if (s1 === peg$FAILED) {\n                                                              s1 = peg$currPos;\n                                                              peg$savedPos = peg$currPos;\n                                                              s2 = peg$c98();\n                                                              if (s2) {\n                                                                s2 = void 0;\n                                                              } else {\n                                                                s2 = peg$FAILED;\n                                                              }\n                                                              if (s2 !== peg$FAILED) {\n                                                                s3 = peg$parsevector();\n                                                                if (s3 === peg$FAILED) {\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s3 = peg$c99();\n                                                                  if (s3) {\n                                                                    s3 = void 0;\n                                                                  } else {\n                                                                    s3 = peg$FAILED;\n                                                                  }\n                                                                }\n                                                                if (s3 !== peg$FAILED) {\n                                                                  peg$savedPos = s1;\n                                                                  s2 = peg$c69(s3);\n                                                                  s1 = s2;\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                              } else {\n                                                                peg$currPos = s1;\n                                                                s1 = peg$FAILED;\n                                                              }\n                                                              if (s1 === peg$FAILED) {\n                                                                s1 = peg$currPos;\n                                                                peg$savedPos = peg$currPos;\n                                                                s2 = peg$c100();\n                                                                if (s2) {\n                                                                  s2 = void 0;\n                                                                } else {\n                                                                  s2 = peg$FAILED;\n                                                                }\n                                                                if (s2 !== peg$FAILED) {\n                                                                  s3 = peg$parsevector();\n                                                                  if (s3 === peg$FAILED) {\n                                                                    s3 = null;\n                                                                  }\n                                                                  if (s3 !== peg$FAILED) {\n                                                                    peg$savedPos = s1;\n                                                                    s2 = peg$c69(s3);\n                                                                    s1 = s2;\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                } else {\n                                                                  peg$currPos = s1;\n                                                                  s1 = peg$FAILED;\n                                                                }\n                                                                if (s1 === peg$FAILED) {\n                                                                  s1 = peg$currPos;\n                                                                  peg$savedPos = peg$currPos;\n                                                                  s2 = peg$c101();\n                                                                  if (s2) {\n                                                                    s2 = void 0;\n                                                                  } else {\n                                                                    s2 = peg$FAILED;\n                                                                  }\n                                                                  if (s2 !== peg$FAILED) {\n                                                                    s3 = peg$parsecolumns();\n                                                                    if (s3 === peg$FAILED) {\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s3 = peg$c102();\n                                                                      if (s3) {\n                                                                        s3 = void 0;\n                                                                      } else {\n                                                                        s3 = peg$FAILED;\n                                                                      }\n                                                                    }\n                                                                    if (s3 !== peg$FAILED) {\n                                                                      peg$savedPos = s1;\n                                                                      s2 = peg$c87(s3);\n                                                                      s1 = s2;\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                  } else {\n                                                                    peg$currPos = s1;\n                                                                    s1 = peg$FAILED;\n                                                                  }\n                                                                  if (s1 === peg$FAILED) {\n                                                                    s1 = peg$currPos;\n                                                                    peg$savedPos = peg$currPos;\n                                                                    s2 = peg$c103();\n                                                                    if (s2) {\n                                                                      s2 = void 0;\n                                                                    } else {\n                                                                      s2 = peg$FAILED;\n                                                                    }\n                                                                    if (s2 !== peg$FAILED) {\n                                                                      s3 = peg$parseskip_space();\n                                                                      if (s3 !== peg$FAILED) {\n                                                                        s2 = [s2, s3];\n                                                                        s1 = s2;\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                    } else {\n                                                                      peg$currPos = s1;\n                                                                      s1 = peg$FAILED;\n                                                                    }\n                                                                    if (s1 === peg$FAILED) {\n                                                                      s1 = peg$currPos;\n                                                                      peg$savedPos = peg$currPos;\n                                                                      s2 = peg$c104();\n                                                                      if (s2) {\n                                                                        s2 = void 0;\n                                                                      } else {\n                                                                        s2 = peg$FAILED;\n                                                                      }\n                                                                      if (s2 !== peg$FAILED) {\n                                                                        s3 = peg$parseitems();\n                                                                        if (s3 !== peg$FAILED) {\n                                                                          peg$savedPos = s1;\n                                                                          s2 = peg$c58(s3);\n                                                                          s1 = s2;\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                      } else {\n                                                                        peg$currPos = s1;\n                                                                        s1 = peg$FAILED;\n                                                                      }\n                                                                      if (s1 === peg$FAILED) {\n                                                                        s1 = peg$currPos;\n                                                                        peg$savedPos = peg$currPos;\n                                                                        s2 = peg$c105();\n                                                                        if (s2) {\n                                                                          s2 = void 0;\n                                                                        } else {\n                                                                          s2 = peg$FAILED;\n                                                                        }\n                                                                        if (s2 !== peg$FAILED) {\n                                                                          s3 = peg$parseenumitems();\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$savedPos = s1;\n                                                                            s2 = peg$c58(s3);\n                                                                            s1 = s2;\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                        } else {\n                                                                          peg$currPos = s1;\n                                                                          s1 = peg$FAILED;\n                                                                        }\n                                                                        if (s1 === peg$FAILED) {\n                                                                          s1 = peg$currPos;\n                                                                          s2 = peg$currPos;\n                                                                          peg$silentFails++;\n                                                                          s3 = peg$currPos;\n                                                                          s4 = peg$parseskip_space();\n                                                                          if (s4 !== peg$FAILED) {\n                                                                            s5 = peg$parsebegin_optgroup();\n                                                                            if (s5 !== peg$FAILED) {\n                                                                              s4 = [s4, s5];\n                                                                              s3 = s4;\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s3;\n                                                                            s3 = peg$FAILED;\n                                                                          }\n                                                                          peg$silentFails--;\n                                                                          if (s3 !== peg$FAILED) {\n                                                                            peg$currPos = s2;\n                                                                            s2 = void 0;\n                                                                          } else {\n                                                                            s2 = peg$FAILED;\n                                                                          }\n                                                                          if (s2 !== peg$FAILED) {\n                                                                            peg$savedPos = peg$currPos;\n                                                                            s3 = peg$c106();\n                                                                            if (s3) {\n                                                                              s3 = void 0;\n                                                                            } else {\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              s2 = [s2, s3];\n                                                                              s1 = s2;\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          } else {\n                                                                            peg$currPos = s1;\n                                                                            s1 = peg$FAILED;\n                                                                          }\n                                                                          if (s1 === peg$FAILED) {\n                                                                            s1 = peg$currPos;\n                                                                            s2 = peg$currPos;\n                                                                            peg$silentFails++;\n                                                                            s3 = peg$currPos;\n                                                                            s4 = peg$parseskip_space();\n                                                                            if (s4 !== peg$FAILED) {\n                                                                              s5 = peg$parsebegin_group();\n                                                                              if (s5 !== peg$FAILED) {\n                                                                                s4 = [s4, s5];\n                                                                                s3 = s4;\n                                                                              } else {\n                                                                                peg$currPos = s3;\n                                                                                s3 = peg$FAILED;\n                                                                              }\n                                                                            } else {\n                                                                              peg$currPos = s3;\n                                                                              s3 = peg$FAILED;\n                                                                            }\n                                                                            peg$silentFails--;\n                                                                            if (s3 !== peg$FAILED) {\n                                                                              peg$currPos = s2;\n                                                                              s2 = void 0;\n                                                                            } else {\n                                                                              s2 = peg$FAILED;\n                                                                            }\n                                                                            if (s2 !== peg$FAILED) {\n                                                                              peg$savedPos = peg$currPos;\n                                                                              s3 = peg$c107();\n                                                                              if (s3) {\n                                                                                s3 = void 0;\n                                                                              } else {\n                                                                                s3 = peg$FAILED;\n                                                                              }\n                                                                              if (s3 !== peg$FAILED) {\n                                                                                s2 = [s2, s3];\n                                                                                s1 = s2;\n                                                                              } else {\n                                                                                peg$currPos = s1;\n                                                                                s1 = peg$FAILED;\n                                                                              }\n                                                                            } else {\n                                                                              peg$currPos = s1;\n                                                                              s1 = peg$FAILED;\n                                                                            }\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenextArgStar() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c108();\n      if (s1) {\n        s1 = void 0;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s3 = peg$c109;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c110); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c111(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseid_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseide_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemacro_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifier();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseend_group();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c112(s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseid_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseidentifier();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_optgroup();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsekey();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c113(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsekey();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_optgroup();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c113(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsekeyval_optgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parseskip_space();\n          if (s5 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s6 = peg$c114;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c116();\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsekey_val();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c117(s6);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c114;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c116();\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsekey_val();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c117(s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c118(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecsv_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseskip_space();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s7 = peg$c114;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c116();\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsekey();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c119(s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c114;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c116();\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsekey();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c119(s7);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c120(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_unit() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c121) {\n          s2 = peg$c121;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c122); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c123) {\n            s2 = peg$c123;\n            peg$currPos += 2;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c124); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c125) {\n              s2 = peg$c125;\n              peg$currPos += 2;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c126); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c127) {\n                s2 = peg$c127;\n                peg$currPos += 2;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c128); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c129) {\n                  s2 = peg$c129;\n                  peg$currPos += 2;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c130); }\n                }\n                if (s2 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c131) {\n                    s2 = peg$c131;\n                    peg$currPos += 2;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c132); }\n                  }\n                  if (s2 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c133) {\n                      s2 = peg$c133;\n                      peg$currPos += 2;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n                    }\n                    if (s2 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c135) {\n                        s2 = peg$c135;\n                        peg$currPos += 2;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c136); }\n                      }\n                      if (s2 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 2) === peg$c137) {\n                          s2 = peg$c137;\n                          peg$currPos += 2;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n                        }\n                        if (s2 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c139) {\n                            s2 = peg$c139;\n                            peg$currPos += 2;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c140); }\n                          }\n                          if (s2 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 2) === peg$c141) {\n                              s2 = peg$c141;\n                              peg$currPos += 2;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c142); }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c143(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parselength_unit();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseplus();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parselength_unit();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parseminus();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsefloat();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parselength_unit();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c144(s1, s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_group() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parselength();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_group();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c145(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselength_optgroup() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parselength();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c145(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseexpr_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_expr();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c146(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseexpr_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_expr();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c146(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefloat_group() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c147();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoordinate() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parselength();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parsefloat();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c148(s3);\n          }\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevector() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c150;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c151); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c114;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsecoordinate();\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c154(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoord_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecoord_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecoordinate();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_pct_encoded() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s4 = peg$c155;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c156); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehex();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsehex();\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c157(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_char() {\n      var s0;\n\n      s0 = peg$parsechar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedigit();\n        if (s0 === peg$FAILED) {\n          if (peg$c158.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c159); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s0 = peg$c160;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c161); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseurl_pct_encoded();\n              if (s0 === peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s0 = peg$c162();\n                if (s0) {\n                  s0 = void 0;\n                } else {\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseurl_group() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$currPos;\n            s8 = peg$parseskip_space();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseend_group();\n              if (s9 !== peg$FAILED) {\n                s8 = [s8, s9];\n                s7 = s8;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseurl_char();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c163(s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = peg$currPos;\n                peg$silentFails++;\n                s7 = peg$currPos;\n                s8 = peg$parseskip_space();\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseend_group();\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                peg$silentFails--;\n                if (s7 === peg$FAILED) {\n                  s6 = void 0;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseurl_char();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s5;\n                    s6 = peg$c163(s7);\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c164(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsearg_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsespace();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph_with_linebreak();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph_with_linebreak();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c166(s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsehorizontal() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseline();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseline();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c167(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsearg_hgroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsespace();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsehorizontal();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_group();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c168(s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseopt_group() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c165();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseparagraph_with_linebreak();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseparagraph_with_linebreak();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_optgroup();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s6 = peg$c169(s4);\n                if (s6) {\n                  s6 = void 0;\n                } else {\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c170(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c171) {\n          s2 = peg$c171;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c172); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseid_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c149(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsereal() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c173) {\n          s2 = peg$c173;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c174); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseskip_space();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsefloat();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseend_group();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c175(s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_value() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c150;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c151); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenum_expr();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c152;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c153); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c176(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseinteger();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsereal();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsevalue();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c177(s1);\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_factor() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c178;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c179); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c180;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c181); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenum_factor();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c182(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenum_value();\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_term() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenum_factor();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_space();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c109;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c110); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c183;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c184); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseskip_space();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenum_factor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_space();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s5 = peg$c109;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c110); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s5 = peg$c183;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c184); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseskip_space();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsenum_factor();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c185(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenum_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenum_term();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parseskip_space();\n          if (s5 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s6 = peg$c178;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c179); }\n            }\n            if (s6 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s6 = peg$c180;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c181); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseskip_space();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsenum_term();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseskip_space();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 43) {\n                s6 = peg$c178;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c179); }\n              }\n              if (s6 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 45) {\n                  s6 = peg$c180;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c181); }\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseskip_space();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsenum_term();\n                  if (s8 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c186(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c149(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_modellist_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemodel_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c187(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_modellist_optgroup() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_optgroup();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemodel_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_optgroup();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c187(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_setspec_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_set_spec();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c188(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_speclist_group() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_spec_list();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c189(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_ext_expr();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsec_expr();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsec_name();\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefunc_expr();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsefunc_expr();\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_ext_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecore_model();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c114;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseint();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c190;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c191); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsec_expr();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c114;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c115); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsefloat();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 59) {\n                    s9 = peg$c192;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c193); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parsec_expr();\n                    if (s10 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s11 = peg$c114;\n                        peg$currPos++;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parsefloat();\n                        if (s12 !== peg$FAILED) {\n                          s9 = [s9, s10, s11, s12];\n                          s8 = s9;\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 59) {\n                      s9 = peg$c192;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c193); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsec_expr();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s11 = peg$c114;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parsefloat();\n                          if (s12 !== peg$FAILED) {\n                            s9 = [s9, s10, s11, s12];\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s1 = [s1, s2, s3, s4, s5, s6, s7];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_expr() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_prefix();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsec_name();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsec_mix_expr();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsec_postfix();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_mix_expr() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c194;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c195); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsefloat();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 33) {\n            s5 = peg$c194;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c195); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsec_name();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 33) {\n                s7 = peg$c194;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c195); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsefloat();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s5 = peg$c194;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c195); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsec_name();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 33) {\n                  s7 = peg$c194;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c195); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsefloat();\n                  if (s8 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 33) {\n              s5 = peg$c194;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c195); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsec_name();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefunc_expr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefn();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s4 = peg$c114;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsefloat();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c114;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c115); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefn() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s1 = peg$c196;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c197); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c198) {\n          s2 = peg$c198;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c199); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c200) {\n            s2 = peg$c200;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c201); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_prefix() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c180;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c181); }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c180;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c181); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c202(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsec_name() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsedigit();\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsedigit();\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c203;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c204); }\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_postfix() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c205) {\n        s1 = peg$c205;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c206); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s3 = peg$c178;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c179); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s3 = peg$c178;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c179); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 91) {\n            s3 = peg$c207;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c208); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseint();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c209;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c210); }\n              }\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_model() {\n      var s0;\n\n      s0 = peg$parsecore_model();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseint_model();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedec_model();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsepseudo_model();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecore_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c211) {\n        s0 = peg$c211;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c212); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c213) {\n          s0 = peg$c213;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c214); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c215) {\n            s0 = peg$c215;\n            peg$currPos += 3;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c216); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c217) {\n              s0 = peg$c217;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c218); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c219) {\n                s0 = peg$c219;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c220); }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseint_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c221) {\n        s0 = peg$c221;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c222); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c223) {\n          s0 = peg$c223;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c224); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c225) {\n            s0 = peg$c225;\n            peg$currPos += 3;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c226); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c227) {\n              s0 = peg$c227;\n              peg$currPos += 4;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c228); }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedec_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 3) === peg$c229) {\n        s0 = peg$c229;\n        peg$currPos += 3;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c230); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c231) {\n          s0 = peg$c231;\n          peg$currPos += 4;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c232); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c233) {\n            s0 = peg$c233;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c234); }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepseudo_model() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c235) {\n        s0 = peg$c235;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c236); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsec_type() {\n      var s0;\n\n      if (input.substr(peg$currPos, 5) === peg$c235) {\n        s0 = peg$c235;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c236); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c237) {\n          s0 = peg$c237;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c238); }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemodel_list() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsecore_model();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c190;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c191); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecolor_model();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c183;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c184); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsecolor_model();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c183;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c184); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsecolor_model();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c239(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_spec() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsefloat();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsesp();\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c114;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c115); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsefloat();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsesp();\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c114;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsefloat();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c240(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsec_name();\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_spec_list() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecolor_spec();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s4 = peg$c183;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c184); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsecolor_spec();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c183;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c184); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsecolor_spec();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c241(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolor_set_spec() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      s0 = peg$currPos;\n      s1 = peg$parsec_name();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c114;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c115); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecolor_spec_list();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 59) {\n              s6 = peg$c192;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c193); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseskip_space();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsec_name();\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c114;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parsecolor_spec_list();\n                    if (s10 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9, s10];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c192;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c193); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseskip_space();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parsec_name();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c114;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c115); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parsecolor_spec_list();\n                      if (s10 !== peg$FAILED) {\n                        s6 = [s6, s7, s8, s9, s10];\n                        s5 = s6;\n                      } else {\n                        peg$currPos = s5;\n                        s5 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c242(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumns() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_group();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsecolumn_separator();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecolumn_separator();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parsecolumn();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parsecolumn_separator();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsecolumn_separator();\n            }\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c243(s2, s5, s6);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n              s5 = peg$parsecolumn();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parsecolumn_separator();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parsecolumn_separator();\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c243(s2, s5, s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseend_group();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c244(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumn() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 108) {\n        s1 = peg$c245;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c246); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 99) {\n          s1 = peg$c247;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c248); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 114) {\n            s1 = peg$c249;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c250); }\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 112) {\n              s2 = peg$c251;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c252); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parselength_group();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c145(s3);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c253(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c109;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseexpr_group();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsecolumns();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c254(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecolumn_separator() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c255;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c256); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 64) {\n          s2 = peg$c257;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c258); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsearg_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c259(s3);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c260(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsevspace_hmode() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c261) {\n        s1 = peg$c261;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c262); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parselength_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c263(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevspace_vmode() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c261) {\n        s1 = peg$c261;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c262); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parselength_group();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c264(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesmbskip_hmode() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c265) {\n        s2 = peg$c265;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c266); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c267) {\n          s2 = peg$c267;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c268); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c269) {\n            s2 = peg$c269;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c270); }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c271) {\n          s2 = peg$c271;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c272); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c273(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesmbskip_vmode() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c265) {\n        s2 = peg$c265;\n        peg$currPos += 5;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c266); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c267) {\n          s2 = peg$c267;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c268); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c269) {\n            s2 = peg$c269;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c270); }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c271) {\n          s2 = peg$c271;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c272); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsechar();\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c274(s1);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseverb() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c275) {\n        s1 = peg$c275;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c276); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c109;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c110); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$currPos;\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$currPos;\n                peg$silentFails++;\n                s10 = peg$parsenl();\n                peg$silentFails--;\n                if (s10 === peg$FAILED) {\n                  s9 = void 0;\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                if (s9 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s10 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = peg$currPos;\n                    s11 = peg$c277(s2, s5, s10);\n                    if (s11) {\n                      s11 = peg$FAILED;\n                    } else {\n                      s11 = void 0;\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s9 = [s9, s10, s11];\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$currPos;\n                  peg$silentFails++;\n                  s10 = peg$parsenl();\n                  peg$silentFails--;\n                  if (s10 === peg$FAILED) {\n                    s9 = void 0;\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                      s10 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = peg$currPos;\n                      s11 = peg$c277(s2, s5, s10);\n                      if (s11) {\n                        s11 = peg$FAILED;\n                      } else {\n                        s11 = void 0;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s9 = [s9, s10, s11];\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s6 = input.substring(s6, peg$currPos);\n                } else {\n                  s6 = s7;\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c278(s2, s5, s6, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_env() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsebegin();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsebegin_group();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseidentifier();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c280(s4);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsenextArgStar();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_group();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c281(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c279); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_env() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsebegin_group();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifier();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s7 = peg$c109;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c110); }\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseend_group();\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c283(s5, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c282); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseh_environment() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_env();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemacro_args();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c284(s1);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsespace();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c285(s1, s3, s5);\n            }\n            s4 = s5;\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph_with_linebreak();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph_with_linebreak();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_env();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = peg$parsespace();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s7;\n                    s8 = peg$c286(s1, s3, s4, s5, s6, s8);\n                  }\n                  s7 = s8;\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c287(s1, s3, s4, s5, s6, s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseenvironment() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_env();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c288(s1);\n        if (s2) {\n          s2 = peg$FAILED;\n        } else {\n          s2 = void 0;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemacro_args();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$currPos;\n            peg$silentFails++;\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            peg$silentFails--;\n            if (s6 !== peg$FAILED) {\n              peg$currPos = s5;\n              s5 = void 0;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c284(s1);\n            }\n            s4 = s5;\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseparagraph();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseparagraph();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseend_env();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c289(s1, s4, s5, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseitem() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_all_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c290) {\n            s3 = peg$c290;\n            peg$currPos += 4;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c291); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s5 = peg$c292();\n              if (s5) {\n                s5 = peg$FAILED;\n              } else {\n                s5 = void 0;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseopt_group();\n                if (s6 === peg$FAILED) {\n                  s6 = null;\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_all_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c293(s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseitems() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseskip_all_space();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsehv_macro();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseitem();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          s7 = peg$parseitem();\n          if (s7 === peg$FAILED) {\n            s7 = peg$parseend_env();\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseparagraph();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c294(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c295(s3, s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsehv_macro();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseitem();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseitem();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseend_env();\n              }\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseparagraph();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c294(s3, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c295(s3, s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseenumitems() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = [];\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseskip_all_space();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsehv_macro();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseitem();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c296(s4);\n        }\n        s3 = s4;\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$currPos;\n          peg$silentFails++;\n          s7 = peg$parseitem();\n          if (s7 === peg$FAILED) {\n            s7 = peg$parseend_env();\n          }\n          peg$silentFails--;\n          if (s7 === peg$FAILED) {\n            s6 = void 0;\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseparagraph();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c294(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c295(s3, s4);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseskip_all_space();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehv_macro();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseskip_all_space();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsehv_macro();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseitem();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c296(s4);\n          }\n          s3 = s4;\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseitem();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parseend_env();\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseparagraph();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c294(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseitem();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseend_env();\n              }\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseparagraph();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c294(s3, s7);\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c295(s3, s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomment_env() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c298) {\n        s1 = peg$c298;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c299); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c300) {\n            s3 = peg$c300;\n            peg$currPos += 9;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c301); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$currPos;\n            peg$silentFails++;\n            s7 = peg$parseend_comment();\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$currPos;\n              peg$silentFails++;\n              s7 = peg$parseend_comment();\n              peg$silentFails--;\n              if (s7 === peg$FAILED) {\n                s6 = void 0;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseend_comment();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c302();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c297); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_comment() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c303) {\n        s1 = peg$c303;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c304); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseskip_space();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c300) {\n            s3 = peg$c300;\n            peg$currPos += 9;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c301); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemath() {\n      var s0;\n\n      s0 = peg$parseinline_math();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedisplay_math();\n      }\n\n      return s0;\n    }\n\n    function peg$parseinline_math() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemath_shift();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parsemath_primitive();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsemath_primitive();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemath_shift();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c305(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s2 = peg$c150;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c151); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parsemath_primitive();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsemath_primitive();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = input.substring(s3, peg$currPos);\n            } else {\n              s3 = s4;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseescape();\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c305(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedisplay_math() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemath_shift();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemath_shift();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parsemath_primitive();\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsemath_primitive();\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = input.substring(s3, peg$currPos);\n          } else {\n            s3 = s4;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsemath_shift();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemath_shift();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c306(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseleft_br();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parsemath_primitive();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsemath_primitive();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = input.substring(s3, peg$currPos);\n            } else {\n              s3 = s4;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseescape();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseright_br();\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c306(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemath_primitive() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$parseprimitive();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsealignment_tab();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsesuperscript();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsesubscript();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseescape();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseidentifier();\n                if (s2 !== peg$FAILED) {\n                  s1 = [s1, s2];\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsebegin_group();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseskip_space();\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parseend_group();\n                    if (s3 !== peg$FAILED) {\n                      s1 = [s1, s2, s3];\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parsebegin_group();\n                  if (s1 !== peg$FAILED) {\n                    s2 = [];\n                    s3 = peg$parsemath_primitive();\n                    if (s3 !== peg$FAILED) {\n                      while (s3 !== peg$FAILED) {\n                        s2.push(s3);\n                        s3 = peg$parsemath_primitive();\n                      }\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parseend_group();\n                      if (s3 !== peg$FAILED) {\n                        s1 = [s1, s2, s3];\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsesp();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsenl();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parselinebreak();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsecomment();\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c307) {\n        s1 = peg$c307;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c308); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c310) {\n        s1 = peg$c310;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c311); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepar() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c312) {\n        s1 = peg$c312;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c313); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c309();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenoindent() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c314) {\n        s1 = peg$c314;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c315); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseplus() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c316) {\n        s1 = peg$c316;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c317); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseminus() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c318) {\n        s1 = peg$c318;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c319); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c309();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseendinput() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c320) {\n        s1 = peg$c320;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c321); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseescape() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c322;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c323); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsebegin_group() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c324;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c325); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseend_group() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 125) {\n        s1 = peg$c326;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c327); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemath_shift() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s1 = peg$c329;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c330); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c328); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsealignment_tab() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s1 = peg$c331;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c332); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemacro_parameter() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c334;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c335); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c333); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesuperscript() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s1 = peg$c336;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c337); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesubscript() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 95) {\n        s1 = peg$c338;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c339); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseignore() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 0) {\n        s1 = peg$c340;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c341); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseEOF() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.length > peg$currPos) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c2); }\n      }\n      peg$silentFails--;\n      if (s1 === peg$FAILED) {\n        s0 = void 0;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseendinput();\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c342); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenl() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s0 = peg$c344;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c345); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c346) {\n          s0 = peg$c346;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c347); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 13) {\n            s0 = peg$c348;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c349); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8232) {\n              s0 = peg$c350;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c351); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 8233) {\n                s1 = peg$c352;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c353); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c11();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c343); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesp() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c355.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c356); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c354); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomment() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 37) {\n        s1 = peg$c155;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c156); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parsenl();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsenl();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parsenl();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsesp();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsesp();\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseEOF();\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsecomment_env();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c357); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseskip_space() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parsebreak();\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = void 0;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsenl();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsesp();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsecomment();\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsebreak();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenl();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsesp();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parsecomment();\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseskip_all_space() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsenl();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsesp();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsecomment();\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsenl();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsesp();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsecomment();\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsespace() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsebreak();\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parselinebreak();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$currPos;\n          s5 = peg$parseskip_all_space();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseescape();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseis_vmode();\n              if (s7 === peg$FAILED) {\n                s7 = peg$parseis_vmode_env();\n              }\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parsesp();\n            if (s5 === peg$FAILED) {\n              s5 = peg$parsenl();\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parsesp();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenl();\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c359();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c358); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsectrl_space() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsenl();\n        peg$silentFails--;\n        if (s4 !== peg$FAILED) {\n          peg$currPos = s3;\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsebreak();\n          peg$silentFails--;\n          if (s5 !== peg$FAILED) {\n            peg$currPos = s4;\n            s4 = void 0;\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsenl();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsesp();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c359();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c360); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenbsp() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 126) {\n        s1 = peg$c362;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c363); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c364();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c361); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsebreak() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parseskip_all_space();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseescape();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsepar();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseskip_all_space();\n            if (s6 !== peg$FAILED) {\n              s3 = [s3, s4, s5, s6];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parseskip_all_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseescape();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepar();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_all_space();\n                if (s6 !== peg$FAILED) {\n                  s3 = [s3, s4, s5, s6];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsesp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsesp();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parsenl();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsecomment();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsecomment();\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = [];\n            s4 = peg$parsecomment();\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parsecomment();\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parsesp();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parsesp();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsenl();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$currPos;\n                s6 = [];\n                s7 = peg$parsesp();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parsesp();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsenl();\n                  if (s7 !== peg$FAILED) {\n                    s6 = [s6, s7];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              peg$silentFails++;\n              s5 = peg$parseend_doc();\n              peg$silentFails--;\n              if (s5 !== peg$FAILED) {\n                peg$currPos = s4;\n                s4 = void 0;\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 === peg$FAILED) {\n                s4 = peg$parseEOF();\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parsesp();\n              if (s6 === peg$FAILED) {\n                s6 = peg$parsenl();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$parsecomment();\n                }\n              }\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsesp();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$parsenl();\n                  if (s6 === peg$FAILED) {\n                    s6 = peg$parsecomment();\n                  }\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                s2 = [s2, s3, s4, s5];\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c366();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c365); }\n      }\n\n      return s0;\n    }\n\n    function peg$parselinebreak() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s3 = peg$c322;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c323); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s5 = peg$c109;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c110); }\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = peg$parsebegin_optgroup();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseskip_space();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parselength();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseend_optgroup();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseskip_space();\n                          if (s12 !== peg$FAILED) {\n                            peg$savedPos = s7;\n                            s8 = peg$c368(s10);\n                            s7 = s8;\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = null;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c369(s7);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c367); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseunskip_macro() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseskip_space();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescape();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c370) {\n            s3 = peg$c370;\n            peg$currPos += 3;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c371); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 7) === peg$c372) {\n              s3 = peg$c372;\n              peg$currPos += 7;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c373); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            peg$silentFails++;\n            s5 = peg$parsechar();\n            peg$silentFails--;\n            if (s5 === peg$FAILED) {\n              s4 = void 0;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_optgroup() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c207;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c208); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseend_optgroup() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s1 = peg$c209;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c210); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c375.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c376); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c377(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c374); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c379.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c380); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c381(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c378); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepunctuation() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c383.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c384); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c385(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c382); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsequotes() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c387.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c388); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c389(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c386); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseleft_br() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c207;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c208); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c391(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c390); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseright_br() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s1 = peg$c209;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c210); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c391(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c392); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseutf8_char() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      peg$silentFails++;\n      s2 = peg$parsesp();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsenl();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseescape();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsebegin_group();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseend_group();\n              if (s2 === peg$FAILED) {\n                s2 = peg$parsemath_shift();\n                if (s2 === peg$FAILED) {\n                  s2 = peg$parsealignment_tab();\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$parsemacro_parameter();\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$parsesuperscript();\n                      if (s2 === peg$FAILED) {\n                        s2 = peg$parsesubscript();\n                        if (s2 === peg$FAILED) {\n                          s2 = peg$parseignore();\n                          if (s2 === peg$FAILED) {\n                            s2 = peg$parsecomment();\n                            if (s2 === peg$FAILED) {\n                              s2 = peg$parsebegin_optgroup();\n                              if (s2 === peg$FAILED) {\n                                s2 = peg$parseend_optgroup();\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s2 === peg$FAILED) {\n        s1 = void 0;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c394(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c393); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehyphen() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c180;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c181); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c396();\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c395); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseligature() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c398) {\n        s1 = peg$c398;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c399); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c400) {\n          s1 = peg$c400;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c401); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c402) {\n            s1 = peg$c402;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c403); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c404) {\n              s1 = peg$c404;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c405); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c406) {\n                s1 = peg$c406;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c407); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c408) {\n                  s1 = peg$c408;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c409); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c410) {\n                    s1 = peg$c410;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c411); }\n                  }\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c412) {\n                      s1 = peg$c412;\n                      peg$currPos += 2;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c413); }\n                    }\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c414) {\n                        s1 = peg$c414;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c415); }\n                      }\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 2) === peg$c416) {\n                          s1 = peg$c416;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c417); }\n                        }\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c418) {\n                            s1 = peg$c418;\n                            peg$currPos += 2;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c419); }\n                          }\n                          if (s1 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 2) === peg$c420) {\n                              s1 = peg$c420;\n                              peg$currPos += 2;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c421); }\n                            }\n                            if (s1 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 2) === peg$c422) {\n                                s1 = peg$c422;\n                                peg$currPos += 2;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c423); }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c424(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c397); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsectrl_sym() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (peg$c426.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c427); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c428(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c425); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesymbol() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifier();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c430(s2);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c431(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c429); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsediacritic() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$parsechar();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          s6 = peg$parsechar();\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          s5 = peg$parsechar();\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c433(s2);\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parsebegin_group();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseprimitive();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseend_group();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsespace();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s5;\n                      s6 = peg$c434(s2, s7, s9);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = peg$parseprimitive();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s5;\n                  s6 = peg$c435(s2, s6);\n                }\n                s5 = s6;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c436(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c432); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecharsym() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parseescape();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c437) {\n          s2 = peg$c437;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c438); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsebegin_group();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseskip_space();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseinteger();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseskip_space();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseend_group();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c439(s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c440) {\n            s2 = peg$c440;\n            peg$currPos += 4;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c441); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseinteger();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c439(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 4) === peg$c442) {\n            s1 = peg$c442;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c443); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehex16();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c439(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c444) {\n              s1 = peg$c444;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c445); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsehex8();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c439(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c444) {\n                s1 = peg$c444;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c445); }\n              }\n              if (s1 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s2 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                if (s2 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c446(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseinteger() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseint();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c447(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c160;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c161); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseoct();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c448(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s1 = peg$c449;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c450); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsehex16();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parsehex8();\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c451(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex8() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = peg$parsehex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsehex();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c453(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c452); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex16() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = peg$parsehex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsehex();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsehex();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsehex();\n            if (s6 !== peg$FAILED) {\n              s3 = [s3, s4, s5, s6];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c453(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c454); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseint() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c379.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c380); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c379.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c380); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c455); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseoct() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c457.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c458); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c457.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c458); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c456); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehex() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (peg$c460.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c461); }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c459); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefloat() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      if (peg$c463.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c464); }\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parseint();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s7 = peg$c203;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c204); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseint();\n            if (s8 === peg$FAILED) {\n              s8 = null;\n            }\n            if (s8 !== peg$FAILED) {\n              s7 = [s7, s8];\n              s6 = s7;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c203;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c204); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseint();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c465(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c462); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsethe() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c466) {\n        s1 = peg$c466;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c467); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsevalue();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s6 = peg$c468(s5);\n              if (s6) {\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c469(s5);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseescape();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifier();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s4;\n                    s5 = peg$c470(s6);\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c471(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parselogging() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c472) {\n        s1 = peg$c472;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c473); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        s3 = peg$parsechar();\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseskip_space();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = peg$parsevalue();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = peg$currPos;\n              s6 = peg$c468(s5);\n              if (s6) {\n                s6 = void 0;\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c474(s5);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              s5 = peg$parseescape();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifier();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseskip_space();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s4;\n                    s5 = peg$c475(s6);\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 7) === peg$c476) {\n          s1 = peg$c476;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c477); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsearg_group();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c478(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n\n        var { Vector } = require('./types');\n        var g = options.generator;\n        g.setErrorFn(error);\n        g.location = location;\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();","import { Article } from './article'\nimport { Book } from './book'\nimport { Report } from './report'\n\nexport default {\n    article: Article,\n    book: Book,\n    report: Report\n}","'use strict'\n\n\nexport class XColor\n\n    args = @args = {}\n\n\n    # color data structure:\n\n    # color-name: {\n    #     rgb: { r: , g: , b: },\n    #     hsb: { },\n    #     cmyk: {},\n    #     gray:\n    # }\n\n\n    colors = @colors = new Map([\n        * \"red\"             {}\n        * \"green\"           {}\n        * \"blue\"            {}\n        * \"cyan\"            {}\n        * \"magenta\"         {}\n        * \"yellow\"          {}\n        * \"black\"           {}\n        * \"gray\"            {}\n        * \"white\"           {}\n        * \"darkgray\"        {}\n        * \"lightgray\"       {}\n        * \"brown\"           {}\n        * \"lime\"            {}\n        * \"olive\"           {}\n        * \"orange\"          {}\n        * \"pink\"            {}\n        * \"purple\"          {}\n        * \"teal\"            {}\n        * \"violet\"          {}\n    ])\n\n\n    # CTOR\n    (generator, options) ->\n        @g = generator\n        @options = options if options\n\n        for opt in @options\n            opt = Object.keys(opt).0\n\n            # xcolor, 2.1.2\n\n            switch opt\n            # target color mode\n            | \"natural\" =>\n            | \"rgb\" =>\n            | \"cmy\" =>\n            | \"cmyk\" =>\n            | \"hsb\" =>\n            | \"gray\" =>\n            | \"RGB\" =>\n            | \"HTML\" =>\n            | \"HSB\" =>\n            | \"Gray\" =>\n            | \"monochrome\" =>\n\n            # predefined colors\n            | \"dvipsnames\" =>\n            | \"dvipsnames*\" =>\n            | \"svgnames\" =>\n            | \"svgnames*\" =>\n            | \"x11names\" =>\n            | \"x11names*\" =>\n\n            | otherwise =>\n\n\n\n    # defining colors\n\n\n    # \\definecolorset[type]{model-list}{head}{tail}{set spec}\n    args.\\definecolorset = <[ P i? c-ml ie ie c-ssp ]>\n    \\definecolorset      : (type, models, hd, tl, setspec) !->\n        @g.error \"unknown color type\" if type not in [null, \"named\" \"ps\"]\n\n        hd = \"\" if not hd\n        tl = \"\" if not tl\n\n        for spec in setspec\n            @definecolor type, hd + spec.name + tl, models, spec.speclist\n\n    # \\definecolor[type]{name}{model-list}{color spec list}\n    args.\\definecolor = <[ P i? i c-ml c-spl ]>\n    \\definecolor      : (type, name, models, colorspec) !->\n        @g.error \"unknown color type\" if type not in [null, \"named\" \"ps\"]\n        @g.error \"color models and specs don't match\" if models.models.length != colorspec.length\n\n        color = {}\n\n        # TODO: deal with models.core\n\n        for model, i in models.models\n            color[model] = colorspec[i]\n\n        colors.set name, color\n\n        # console.log(name, JSON.stringify(colors.get name))\n\n\n    # using colors\n\n    # {name/expression} or [model-list]{color spec list}\n    args.\\color     = [ \"HV\" [ <[ c-ml? c-spl ]>\n                               <[ c ]>            ] ]\n    \\color          : !->\n        if &.length == 1\n            console.log \"got color expression\"\n        else\n            console.log \"got model/color spec\"\n\n    # args.\\color =       <[ HV c-ml? c-spl ]>\n    # \\color      : (model, colorspec) ->\n\n    # {name/expression}{text} or [model-list]{color spec list}{text}\n    args.\\textcolor = [ \"HV\" [ <[ c-ml? c-spl ]>\n                               <[ c ]>            ] \"g\" ]\n    \\textcolor      : ->\n        if &.length == 2\n            return\n\n        return\n\n\n    # \\colorbox{name}{text}\n    # \\colorbox[model]{specification}{text}\n    args.\\colorbox  = <[ H i? c g ]>\n    \\colorbox       : (model, color, text) ->\n\n    # \\fcolorbox{name1}{name2}{text}\n    # \\fcolorbox[model]{specification1}{specification2}{text}\n    args.\\fcolorbox = <[ H i? c c g ]>\n    \\fcolorbox      : (model, color, text) ->\n","# forward to xcolor\n\nimport './xcolor': { XColor }\n\nexport Color = XColor\n","'use strict'\n\n\n# macros just for testing\nexport class Echo\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n\n    args.gobbleO = <[ H o? ]>\n\n    \\gobbleO : -> []\n\n\n\n    args.echoO = <[ H o? ]>\n\n    \\echoO : (o) ->\n        [ \"-\", o, \"-\" ]\n\n\n    args.echoOGO = <[ H o? g o? ]>\n\n    \\echoOGO : (o1, g, o2) ->\n        []\n            ..push \"-\", o1, \"-\" if o1\n            ..push \"+\", g,  \"+\"\n            ..push \"-\", o2, \"-\" if o2\n\n\n    args.echoGOG = <[ H g o? g ]>\n\n    \\echoGOG : (g1, o, g2) ->\n        [ \"+\", g1, \"+\" ]\n            ..push \"-\", o,  \"-\" if o\n            ..push \"+\", g2, \"+\"\n","'use strict'\n\nimport 'he'\n\nexport class Gensymb\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n    # TODO: implement package options\n\n    symbols = @symbols = new Map([\n        * \\degree               he.decode '&deg;'       # °   U+00B0\n        * \\celsius              '\\u2103'                # ℃\n        * \\perthousand          he.decode '&permil;'    # ‰   U+2030\n        * \\ohm                  '\\u2126'                # Ω\n        * \\micro                he.decode '&mu;'        # μ   U+03BC\n    ])\n","'use strict'\n\nexport class Graphicx\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n    # 3 Colour   TODO: also in xcolor - include xcolor instead?\n\n\n    # 4.2 Rotation\n\n    # rotation\n\n    # \\rotatebox[key-val list]{angle}{text}\n\n    args.\\rotatebox = <[ H kv? n hg ]>\n    \\rotatebox      : (kvl, angle, text) ->\n        # origin=one or two of: lrctbB\n        # x=<dimen>\n        # y=<dimen>\n        # units=<number>\n\n\n    # 4.3 Scaling\n\n    # TODO: check if they all need to be hg instead of g?\n\n    # \\scalebox{h-scale}[v-scale]{text}\n    args.\\scalebox = <[ H n n? g ]>\n    \\scalebox    : (hsc, vsc, text) ->\n        # style=\"transform: scale(hsc, vsc);\"\n\n\n    # \\reflectbox{text}\n    args.\\reflectbox = <[ H g ]>\n    \\reflectbox    : (text) ->\n        @\\scalebox -1, 1, text\n\n\n    # \\resizebox*{h-length}{v-length}{text}\n    args.\\resizebox = <[ H s l l g ]>\n    \\resizebox    : (s, hl, vl, text) ->\n\n\n    # 4.4 Including Graphics Files\n\n    # TODO: restrict to just one path?\n    # { {path1/} {path2/} }\n    args.\\graphicspath = <[ HV gl ]>\n    \\graphicspath       : (paths) !->\n\n\n    # graphics: \\includegraphics*[<llx,lly>][<urx,ury>]{<file>}     TODO\n    # graphicx: \\includegraphics*[<key-val list>]{<file>}\n\n    args.\\includegraphics = <[ H s kv? kv? k ]>\n    \\includegraphics    : (s, kvl, kvl2, file) ->\n        # LaTeX supports the following keys:\n        #\n        # set bounding box:\n        #  * bb = a b c d\n        #  * bbllx=a, bblly=b, bburx=c, bbury=d => equivalent to bb=a b c d\n        #  * natwidth=w, natheight=h => equivalent to bb=0 0 h w\n        #\n        # hiresbb, pagebox\n        #\n        # viewport\n        # trim\n        #\n        # angle, origin (for rotation)\n        #\n        # width, height\n        # totalheight\n        #\n        # scale\n        #\n        # clip\n        # draft\n        #\n        # type, ext, read, command\n        #\n        # quiet\n        # page (when including a pdf)\n        # interpolate\n\n        # order of the keys is important! insert into map in order!\n\n        [ @g.createImage kvl.get(\"width\"), kvl.get(\"height\"), file ]\n","import { Color } from './color'\nimport { XColor } from './xcolor'\nimport { Echo } from './echo'\nimport { Gensymb } from './gensymb'\nimport { Graphics } from './graphics'\nimport { Graphicx } from './graphicx'\nimport { Hyperref } from './hyperref'\nimport { Latexsym } from './latexsym'\nimport { Multicol } from './multicol'\nimport { Stix } from './stix'\nimport { Textcomp } from './textcomp'\nimport { Textgreek } from './textgreek'\n\n\nexport default {\n    color: Color,\n    xcolor: XColor,\n    echo: Echo,\n    gensymb: Gensymb,\n    graphics: Graphics,\n    graphicx: Graphicx,\n    hyperref: Hyperref,\n    latexsym: Latexsym,\n    multicol: Multicol,\n    stix: Stix,\n    textcomp: Textcomp,\n    textgreek: Textgreek,\n}","# graphics just uses graphicx\n\nimport './graphicx': { Graphicx }\n\nexport Graphics = Graphicx","'use strict'\n\nexport class Hyperref\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    # package: hyperref\n\n    args.\\href =        <[ H o? u g ]>\n    \\href               : (opts, url, txt) -> [ @g.create @g.link(url), txt ]\n\n    args.\\url =         <[ H u ]>\n    \\url                : (url) -> [ @g.create @g.link(url), @g.createText(url) ]\n\n    args.\\nolinkurl =   <[ H u ]>\n    \\nolinkurl          : (url) -> [ @g.create @g.link(), @g.createText(url) ]\n\n\n    # TODO\n    # \\hyperbaseurl  HV u\n\n    # \\hyperref[label]{link text} --- like \\ref{label}, but use \"link text\" for display\n    # args.\\hyperref =    <[ H o? g ]>\n    # \\hyperref           : (label, txt) -> [ @g.ref label ]\n","'use strict'\n\n\n# TODO: this is math mode only!!\nexport class Latexsym\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        * \\mho                  '\\u2127'                # ℧\n        * \\Join                 '\\u2A1D'                # ⨝\n        * \\Box                  '\\u25A1'                # □\n        * \\Diamond              '\\u25C7'                # ◇\n        * \\leadsto              '\\u2933'                # ⤳\n        * \\sqsubset             '\\u228F'                # ⊏\n        * \\sqsupset             '\\u2290'                # ⊐\n        * \\lhd                  '\\u22B2'                # ⊲\n        * \\unlhd                '\\u22B4'                # ⊴\n        * \\rhd                  '\\u22B3'                # ⊳\n        * \\unrhd                '\\u22B5'                # ⊵\n    ])\n","'use strict'\n\nexport class Multicol\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    # multicolumns\n\n    # \\begin{multicols}{number}[pretext][premulticols size]\n    args.\\multicols =   <[ V n o? o? ]>\n\n    \\multicols          : (cols, pre) -> [ pre, @g.create @g.multicols cols ]\n","'use strict'\n\nimport 'he'\n\nexport class Stix\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2664\", \"\\\\varspadesuit\", true)     # ♤\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2665\", \"\\\\varheartsuit\", true)     # ♥\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2666\", \"\\\\vardiamondsuit\", true)   # ♦\n        generator.KaTeX.__defineSymbol(\"math\", \"main\", \"textord\", \"\\u2667\", \"\\\\varclubsuit\", true)      # ♧\n\n\n    symbols = @symbols = new Map([\n        * \\checkmark            he.decode '&check;'     # ✓   U+2713\n    ])\n","'use strict'\n\nimport 'he'\n\nexport class Textcomp\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        # currencies\n        * \\textcentoldstyle     '\\uF7A2'                # \n        * \\textdollaroldstyle   '\\uF724'                # \n        * \\textguarani          '\\u20B2'                # ₲\n\n        # legal symbols\n        * \\textcopyleft         '\\u1F12F'\n\n        # old style numerals\n        * \\textzerooldstyle     '\\uF730'                # \n        * \\textoneoldstyle      '\\uF731'                # \n        * \\texttwooldstyle      '\\uF732'                # \n        * \\textthreeoldstyle    '\\uF733'                # \n        * \\textfouroldstyle     '\\uF734'                # \n        * \\textfiveoldstyle     '\\uF735'                # \n        * \\textsixoldstyle      '\\uF736'                # \n        * \\textsevenoldstyle    '\\uF737'                # \n        * \\texteightoldstyle    '\\uF738'                # \n        * \\textnineoldstyle     '\\uF739'                # \n\n        # genealogical\n        * \\textborn             '\\u2B51'                # ⭑             (alternatives: U+002A, U+2605, U+2736)\n        * \\textdied             he.decode '&dagger;'    # †   U+2020    (alternative: U+271D)\n        # * \\textleaf                                   # TODO\n\n        # misc\n        * \\textpilcrow          he.decode '&para;'      # ¶   U+00B6\n        * \\textdblhyphen        '\\u2E40'                # ⹀\n\n\n        # TODO\n        # * \\textdblhyphenchar\n\n        # * \\textcapitalcompwordmark\n        # * \\textascendercompwordmark\n        # * \\textquotestraightbase\n        # * \\textquotestraightdblbase\n        # * \\textthreequartersemdash\n        # * \\texttwelveudash\n        # * \\capitaltie\n        # * \\newtie\n        # * \\capitalnewtie\n        # * \\capitalgrave\n        # * \\capitalacute\n        # * \\capitalcircumflex\n        # * \\capitaltilde\n        # * \\capitaldieresis\n        # * \\capitalhungarumlaut\n        # * \\capitalring\n        # * \\capitalcaron\n        # * \\capitalbreve\n        # * \\capitalmacron\n        # * \\capitaldotaccent\n        # * \\capitalcedilla\n        # * \\capitalogonek\n\n        # all the other symbols are already defined by tuenc.def\n    ])\n","'use strict'\n\nimport 'he'\n\nexport class Textgreek\n\n    args = @args = {}\n\n    # CTOR\n    (generator, options) ->\n\n\n    symbols = @symbols = new Map([\n        # greek letters - lower case\n        * \\textalpha            he.decode '&alpha;'     # α     U+03B1\n        * \\textbeta             he.decode '&beta;'      # β     U+03B2\n        * \\textgamma            he.decode '&gamma;'     # γ     U+03B3\n        * \\textdelta            he.decode '&delta;'     # δ     U+03B4\n        * \\textepsilon          he.decode '&epsilon;'   # ε     U+03B5\n        * \\textzeta             he.decode '&zeta;'      # ζ     U+03B6\n        * \\texteta              he.decode '&eta;'       # η     U+03B7\n        * \\texttheta            he.decode '&thetasym;'  # ϑ     U+03D1  (θ = U+03B8)\n        * \\textiota             he.decode '&iota;'      # ι     U+03B9\n        * \\textkappa            he.decode '&kappa;'     # κ     U+03BA\n        * \\textlambda           he.decode '&lambda;'    # λ     U+03BB\n        * \\textmu               he.decode '&mu;'        # μ     U+03BC  this is better than \\u00B5, LaTeX's original\n        * \\textmugreek          he.decode '&mu;'\n        * \\textnu               he.decode '&nu;'        # ν     U+03BD\n        * \\textxi               he.decode '&xi;'        # ξ     U+03BE\n        * \\textomikron          he.decode '&omicron;'   # ο     U+03BF\n        * \\textpi               he.decode '&pi;'        # π     U+03C0\n        * \\textrho              he.decode '&rho;'       # ρ     U+03C1\n        * \\textsigma            he.decode '&sigma;'     # σ     U+03C3\n        * \\texttau              he.decode '&tau;'       # τ     U+03C4\n        * \\textupsilon          he.decode '&upsilon;'   # υ     U+03C5\n        * \\textphi              he.decode '&phi;'       # φ     U+03C6\n        * \\textchi              he.decode '&chi;'       # χ     U+03C7\n        * \\textpsi              he.decode '&psi;'       # ψ     U+03C8\n        * \\textomega            he.decode '&omega;'     # ω     U+03C9\n\n        # greek letters - upper case\n        * \\textAlpha            he.decode '&Alpha;'     # Α     U+0391\n        * \\textBeta             he.decode '&Beta;'      # Β     U+0392\n        * \\textGamma            he.decode '&Gamma;'     # Γ     U+0393\n        * \\textDelta            he.decode '&Delta;'     # Δ     U+0394\n        * \\textEpsilon          he.decode '&Epsilon;'   # Ε     U+0395\n        * \\textZeta             he.decode '&Zeta;'      # Ζ     U+0396\n        * \\textEta              he.decode '&Eta;'       # Η     U+0397\n        * \\textTheta            he.decode '&Theta;'     # Θ     U+0398\n        * \\textIota             he.decode '&Iota;'      # Ι     U+0399\n        * \\textKappa            he.decode '&Kappa;'     # Κ     U+039A\n        * \\textLambda           he.decode '&Lambda;'    # Λ     U+039B\n        * \\textMu               he.decode '&Mu;'        # Μ     U+039C\n        * \\textNu               he.decode '&Nu;'        # Ν     U+039D\n        * \\textXi               he.decode '&Xi;'        # Ξ     U+039E\n        * \\textOmikron          he.decode '&Omicron;'   # Ο     U+039F\n        * \\textPi               he.decode '&Pi;'        # Π     U+03A0\n        * \\textRho              he.decode '&Rho;'       # Ρ     U+03A1\n        * \\textSigma            he.decode '&Sigma;'     # Σ     U+03A3\n        * \\textTau              he.decode '&Tau;'       # Τ     U+03A4\n        * \\textUpsilon          he.decode '&Upsilon;'   # Υ     U+03A5\n        * \\textPhi              he.decode '&Phi;'       # Φ     U+03A6\n        * \\textChi              he.decode '&Chi;'       # Χ     U+03A7\n        * \\textPsi              he.decode '&Psi;'       # Ψ     U+03A8\n        * \\textOmega            he.decode '&Omega;'     # Ω     U+03A9\n\n\n        * \\textvarsigma         he.decode '&sigmaf;'    # ς     U+03C2\n        * \\straightphi          '\\u03D5'                # ϕ\n        * \\scripttheta          '\\u03D1'                # ϑ\n        * \\straighttheta        he.decode '&theta;'     # θ     U+03B8\n        * \\straightepsilon      '\\u03F5'                # ϵ\n    ])","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","import\n    './symbols': { symbols }\n    './types': { Vector }\n\n    './documentclasses': builtin-documentclasses\n    './packages': builtin-packages\n\n    'lodash/assign'\n    'lodash/assignIn'\n\n\n# This is where most macros are defined. This file is like base/latex.ltx in LaTeX.\n#\n# By default, a macro takes no arguments and is a horizontal-mode macro.\n# See below for the description of how to declare arguments.\n#\n# A macro must return an array with elements of type Node or String (text).\n#\n# This class should be independent of HtmlGenerator and just work with the generator interface.\n#\n# State is held that is relevant to the particular macros and/or documentclass.\nexport class LaTeX\n\n    # this LaTeX implementation already covers these packages\n    providedPackages = <[ calc pspicture picture pict2e keyval comment ]>\n\n    _title: null\n    _author: null\n    _date: null\n    _thanks: null\n\n\n    # CTOR\n    (generator, CustomMacros) ->\n        if CustomMacros\n            assignIn this, new CustomMacros(generator)\n            assign args, CustomMacros.args\n            CustomMacros.symbols?.forEach (value, key) -> symbols.set key, value\n\n        @g = generator\n\n        @g.newCounter \\secnumdepth\n        @g.newCounter \\tocdepth\n\n        @g.newCounter \\footnote\n        @g.newCounter \\mpfootnote\n\n        @g.newCounter \\@listdepth\n        @g.newCounter \\@itemdepth\n        @g.newCounter \\@enumdepth\n\n\n        @g.newLength \\@@size         # root font size\n\n        # picture lengths\n        @g.newLength \\unitlength\n        @g.setLength \\unitlength    new @g.Length 1, \"pt\"\n\n        @g.newLength \\@wholewidth\n        @g.setLength \\@wholewidth   new @g.Length 0.4, \"pt\"\n\n        @g.newLength \\paperheight\n        @g.newLength \\paperwidth\n\n        @g.newLength \\oddsidemargin\n        @g.newLength \\evensidemargin\n\n        @g.newLength \\textheight\n        @g.newLength \\textwidth\n\n        @g.newLength \\marginparwidth\n        @g.newLength \\marginparsep\n        @g.newLength \\marginparpush\n\n        @g.newLength \\columnwidth\n        @g.newLength \\columnsep\n        @g.newLength \\columnseprule\n\n        @g.newLength \\linewidth\n\n        @g.newLength \\leftmargin\n        @g.newLength \\rightmargin\n        @g.newLength \\listparindent\n        @g.newLength \\itemindent\n        @g.newLength \\labelwidth\n        @g.newLength \\labelsep\n\n        @g.newLength \\leftmargini\n        @g.newLength \\leftmarginii\n        @g.newLength \\leftmarginiii\n        @g.newLength \\leftmarginiv\n        @g.newLength \\leftmarginv\n        @g.newLength \\leftmarginvi\n\n        @g.newLength \\fboxrule\n        @g.newLength \\fboxsep\n\n        @g.newLength \\tabbingsep\n        @g.newLength \\arraycolsep\n        @g.newLength \\tabcolsep\n        @g.newLength \\arrayrulewidth\n        @g.newLength \\doublerulesep\n        @g.newLength \\footnotesep\n        @g.newLength \\topmargin\n        @g.newLength \\headheight\n        @g.newLength \\headsep\n        @g.newLength \\footskip\n\n        @g.newLength \\topsep\n        @g.newLength \\partopsep\n        @g.newLength \\itemsep\n        @g.newLength \\parsep\n        @g.newLength \\floatsep\n        @g.newLength \\textfloatsep\n        @g.newLength \\intextsep\n        @g.newLength \\dblfloatsep\n        @g.newLength \\dbltextfloatsep\n\n\n    @symbols = symbols\n\n    # args: declaring arguments for a macro. If a macro doesn't take arguments and is a\n    #       horizontal-mode macro, args can be left undefined for it.\n    #\n    # syntax: see README.md\n\n    args = @args = {}\n\n\n    args.\\empty = <[ HV ]>\n    \\empty :!->\n\n\n    \\TeX :->\n        # document.createRange().createContextualFragment('<span class=\"tex\">T<span>e</span>X</span>')\n        @g.enterGroup! # prevent createText to add attributes, they will be added by @g.macro\n\n        tex = @g.create @g.inline\n        tex.setAttribute('class', 'tex')\n\n        tex.appendChild @g.createText 'T'\n        e = @g.create @g.inline, (@g.createText 'e'), 'e'\n        tex.appendChild e\n        tex.appendChild @g.createText 'X'\n\n        @g.exitGroup!\n\n        return [tex]\n\n    \\LaTeX :->\n        # <span class=\"latex\">L<span>a</span>T<span>e</span>X</span>\n        @g.enterGroup!\n\n        latex = @g.create @g.inline\n        latex.setAttribute('class', 'latex')\n\n        latex.appendChild @g.createText 'L'\n        a = @g.create @g.inline, (@g.createText 'a'), 'a'\n        latex.appendChild a\n        latex.appendChild @g.createText 'T'\n        e = @g.create @g.inline, (@g.createText 'e'), 'e'\n        latex.appendChild e\n        latex.appendChild @g.createText 'X'\n\n        @g.exitGroup!\n\n        return [latex]\n\n\n    \\today              :-> [ new Date().toLocaleDateString('en', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) ]\n\n    \\newline            :-> [ @g.create @g.linebreak ]\n\n    \\negthinspace       :-> [ @g.create @g.inline, undefined, 'negthinspace' ]\n\n\n\n    # vertical mode declarations\n    args.\\par           = <[ V ]>\n    args.\\item          = <[ V ]>\n\n\n    # switch to onecolumn layout from now on\n    args.\\onecolumn     = <[ V ]>\n    \\onecolumn :->\n\n    # switch to twocolumn layout from now on\n    args.\\twocolumn     = <[ V o? ]>\n    \\twocolumn :->\n\n\n    # spacing\n\n    args\n     ..\\smallbreak      = \\\n     ..\\medbreak        = \\\n     ..\\bigbreak        = <[ V ]>\n\n    \\smallbreak         :-> [ @g.createVSpaceSkip \"smallskip\" ]\n    \\medbreak           :-> [ @g.createVSpaceSkip \"medskip\" ]\n    \\bigbreak           :-> [ @g.createVSpaceSkip \"bigskip\" ]\n\n    args.\\addvspace     = <[ V l ]>\n\n    \\addvspace          : (l) -> @g.createVSpace l          # TODO not correct?\n\n\n\n    args.\\marginpar     = <[ H g ]>\n    \\marginpar          : (txt) -> [ @g.marginpar txt ]\n\n\n    ###########\n    # titling #\n    ###########\n\n    \\abstractname       :-> [ \"Abstract\" ]\n\n\n    args.\\title =       <[ HV g ]>\n    args.\\author =      <[ HV g ]>\n    args.\\and =         <[ H ]>\n    args.\\date =        <[ HV g ]>\n    args.\\thanks =      <[ HV g ]>\n\n    \\title              : (t) !-> @_title = t\n    \\author             : (a) !-> @_author = a\n    \\date               : (d) !-> @_date = d\n\n    \\and                :-> @g.macro \\quad\n    \\thanks             : @\\footnote\n\n\n\n    ###############\n    # font macros #\n    ###############\n\n    # commands\n\n    [ args[\\text + ..]  = <[ H X g ]> for <[ rm sf tt md bf up it sl sc normal ]> ]\n\n\n    \\textrm         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"rm\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsf         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"sf\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\texttt         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontFamily \"tt\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textmd         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontWeight \"md\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textbf         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontWeight \"bf\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textup         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"up\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textit         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"it\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsl         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"sl\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n    \\textsc         : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape  \"sc\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n    \\textnormal     : (arg) ->\n                        if &length == 0\n                            @g.enterGroup!\n                            @g.setFontFamily \"rm\"\n                            @g.setFontWeight \"md\"\n                            @g.setFontShape \"up\"\n                        else\n                            arg = @g.addAttributes arg\n                            @g.exitGroup!\n                            [ arg ]\n\n\n\n    args.\\emph      = <[ H X g ]>\n    \\emph           : (arg) ->  if &length == 0 then @g.enterGroup!; @g.setFontShape \"em\" else arg = @g.addAttributes arg; @g.exitGroup!; [ arg ]\n\n\n    # declarations\n\n    [ args[.. + \"family\"] = [ \\HV ] for <[ rm sf tt    ]> ]\n    [ args[.. + \"series\"] = [ \\HV ] for <[ md bf       ]> ]\n    [ args[.. + \"shape\" ] = [ \\HV ] for <[ up it sl sc ]> ]\n    [ args[..]            = [ \\HV ] for <[ normalfont em ]> ]\n    [ args[..]            = [ \\HV ] for <[ tiny scriptsize footnotesize small normalsize large Large LARGE huge Huge ]> ]\n\n\n    \\rmfamily           :!-> @g.setFontFamily \"rm\"\n    \\sffamily           :!-> @g.setFontFamily \"sf\"\n    \\ttfamily           :!-> @g.setFontFamily \"tt\"\n\n    \\mdseries           :!-> @g.setFontWeight \"md\"\n    \\bfseries           :!-> @g.setFontWeight \"bf\"\n\n    \\upshape            :!-> @g.setFontShape \"up\"\n    \\itshape            :!-> @g.setFontShape \"it\"\n    \\slshape            :!-> @g.setFontShape \"sl\"\n    \\scshape            :!-> @g.setFontShape \"sc\"\n\n    \\normalfont         :!-> @g.setFontFamily \"rm\"; @g.setFontWeight \"md\"; @g.setFontShape \"up\"\n\n    [ ::[..] = ((f) -> -> @g.setFontSize(f))(..) for <[ tiny scriptsize footnotesize small normalsize large Large LARGE huge Huge ]> ]\n\n    \\em                 :!-> @g.setFontShape \"em\"\n\n\n\n    ################\n    # environments #\n    ################\n\n    # enumerate\n\n    \\theenumi           :-> [ @g.arabic @g.counter \\enumi ]\n    \\theenumii          :-> [ @g.alph @g.counter \\enumii ]\n    \\theenumiii         :-> [ @g.roman @g.counter \\enumiii ]\n    \\theenumiv          :-> [ @g.Alph @g.counter \\enumiv ]\n\n    \\labelenumi         :-> @theenumi! ++ \".\"\n    \\labelenumii        :-> [ \"(\", ...@theenumii!, \")\" ]\n    \\labelenumiii       :-> @theenumiii! ++ \".\"\n    \\labelenumiv        :-> @theenumiv! ++ \".\"\n\n    \\p@enumii           :-> @theenumi!\n    \\p@enumiii          :-> @theenumi! ++ \"(\" ++ @theenumii! ++ \")\"\n    \\p@enumiv           :-> @\"p@enumiii\"! ++ @theenumiii!\n\n    # itemize\n\n    \\labelitemi         :-> [ @g.symbol \\textbullet ]\n    \\labelitemii        :-> @normalfont!; @bfseries!; [ @g.symbol \\textendash ]\n    \\labelitemiii       :-> [ @g.symbol \\textasteriskcentered ]\n    \\labelitemiv        :-> [ @g.symbol \\textperiodcentered ]\n\n\n\n    # TODO: LaTeX doesn't allow hyphenation in alignment, but with e.g. \\RaggedRight, it does. (package ragged2e)\n\n    # alignment\n\n    args\n     ..\\centering =     \\\n     ..\\raggedright =   \\\n     ..\\raggedleft =    <[ HV ]>\n\n    \\centering          :!-> @g.setAlignment \"centering\"\n    \\raggedright        :!-> @g.setAlignment \"raggedright\"\n    \\raggedleft         :!-> @g.setAlignment \"raggedleft\"\n\n\n    # alignment environments using a list:  flushleft, flushright, center\n\n    args\n     ..\\center =        \\\n     ..\\flushleft =     \\\n     ..\\flushright =    <[ V ]>\n\n    \\center             :->  @g.startlist!; [ @g.create @g.list, null, \"center\" ]\n    \\endcenter          :!-> @g.endlist!\n\n    \\flushleft          :->  @g.startlist!; [ @g.create @g.list, null, \"flushleft\" ]\n    \\endflushleft       :!-> @g.endlist!\n\n    \\flushright         :->  @g.startlist!; [ @g.create @g.list, null, \"flushright\" ]\n    \\endflushright      :!-> @g.endlist!\n\n\n\n    # titling\n\n    args\n     ..\\titlepage =     <[ V ]>\n\n    \\titlepage          :-> [ @g.create @g.titlepage ]\n\n\n    # quote, quotation, verse\n\n    args\n     ..\\quote =         \\\n     ..\\quotation =     \\\n     ..\\verse =         <[ V ]>\n\n    \\quote              :->  @g.startlist!; [ @g.create @g.quote ]\n    \\endquote           :!-> @g.endlist!\n\n    \\quotation          :->  @g.startlist!; [ @g.create @g.quotation ]\n    \\endquotation       :!-> @g.endlist!\n\n    \\verse              :->  @g.startlist!; [ @g.create @g.verse ]\n    \\endverse           :!-> @g.endlist!\n\n\n    # lists: itemize, enumerate, description\n\n    args.\\itemize =     <[ V X items ]>\n    \\itemize            : (items) ->\n        if &length == 0\n            @g.startlist!\n            @g.stepCounter \\@itemdepth\n            @g.error \"too deeply nested\" if @g.counter(\\@itemdepth) > 4\n            return\n\n        label = \"labelitem\" + @g.roman @g.counter \\@itemdepth\n\n        [\n        @g.create @g.unorderedList, items.map (item) ~>\n            @g.enterGroup!\n            # label: null means no opt_group was given (\\item ...), undefined is an empty one (\\item[] ...)\n            makelabel = @g.create @g.itemlabel, @\\llap (if item.label != null then item.label else @g.macro label)\n            @g.exitGroup!\n\n            @g.create @g.listitem, [ makelabel, item.text ]\n        ]\n\n\n    \\enditemize         :!->\n        @g.endlist!\n        @g.setCounter \\@itemdepth, @g.counter(\\@itemdepth) - 1\n\n\n\n    args.\\enumerate =   <[ V X enumitems ]>\n    \\enumerate          : (items) ->\n        if &length == 0\n            @g.startlist!\n            @g.stepCounter \\@enumdepth\n            @g.error \"too deeply nested\" if @g.counter(\\@enumdepth) > 4\n            return\n\n        itemCounter = \"enum\" + @g.roman @g.counter \\@enumdepth\n        @g.setCounter itemCounter, 0\n\n        [\n        @g.create @g.orderedList, items.map (item) ~>\n            label = @g.create @g.inline, item.label.node\n            if item.label.id\n                label.id = item.label.id\n\n            makelabel = @g.create @g.itemlabel, @\\llap label\n            @g.create @g.listitem, [ makelabel, item.text ]\n        ]\n\n\n    \\endenumerate       :!->\n        @g.endlist!\n        @g.setCounter \\@enumdepth, @g.counter(\\@enumdepth) - 1\n\n\n    args.\\description = <[ V X items ]>\n    \\description        : (items) ->\n        if &length == 0\n            @g.startlist!\n            return\n\n        [\n        @g.create @g.descriptionList, items.map (item) ~>\n            dt = @g.create @g.term, item.label\n            dd = @g.create @g.description, item.text\n            @g.createFragment [dt, dd]\n        ]\n\n    \\enddescription     :!-> @g.endlist!\n\n\n\n    # picture\n\n    # \\begin{picture}(width,height)(xoffset,yoffset)\n    args.\\picture =     <[ H v v? h ]>\n\n    \\picture            : (size, offset, content) ->\n        # TODO: rule for picture content??? LaTeX allows anything, Lamport says: HV macros and picture commands\n        # content:text*\n        [ @g.createPicture(size, offset, content) ]\n\n\n\n\n    ##############\n\n    # horizontal spacing\n    args.\\hspace =      <[ H s l ]>\n    \\hspace             : (s, l) -> [ @g.createHSpace l ]\n\n    # stretch     arg_group\n    #\n    # hfill           = \\hspace{\\fill}\n    # dotfill         =\n    # hrulefill       =\n\n\n\n    # label, ref\n\n    args.\\label =       <[ HV g ]>\n    \\label              : (label) !-> @g.setLabel label.textContent\n\n    args.\\ref =         <[ H g ]>\n    \\ref                : (label) -> [ @g.ref label.textContent ]\n\n\n\n    #########\n    # boxes #\n    #########\n\n    ### hboxes\n\n    # lowlevel macros...\n    args\n     ..\\llap =          \\\n     ..\\rlap =          \\\n     ..\\clap =          \\\n     ..\\smash =         \\\n     ..\\hphantom =      \\\n     ..\\vphantom =      \\\n     ..\\phantom =       <[ H hg ]>   # TODO: not true, these should be usable in V-mode as well, they don't \\leavevmode :(\n\n    \\llap               : (txt) -> [ @g.create @g.inline, txt, \"hbox llap\" ]\n    \\rlap               : (txt) -> [ @g.create @g.inline, txt, \"hbox rlap\" ]\n    \\clap               : (txt) -> [ @g.create @g.inline, txt, \"hbox clap\" ]\n    \\smash              : (txt) -> [ @g.create @g.inline, txt, \"hbox smash\" ]\n\n    \\hphantom           : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox smash\" ]\n    \\vphantom           : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox rlap\" ]\n    \\phantom            : (txt) -> [ @g.create @g.inline, txt, \"phantom hbox\" ]\n\n\n    # LaTeX\n\n    args.\\underline     = <[ H hg ]>\n    \\underline          : (txt) -> [ @g.create @g.inline, txt, \"hbox underline\" ]\n\n\n    # \\mbox{text} - not broken into lines\n    args.\\mbox =        <[ H hg ]>\n    \\mbox               : (txt) -> @makebox undefined, undefined, undefined, txt\n\n\n    # \\makebox[0pt][r]{...} behaves like \\leavevmode\\llap{...}\n    # \\makebox[0pt][l]{...} behaves like \\leavevmode\\rlap{...}\n    # \\makebox[0pt][c]{...} behaves like \\leavevmode\\clap{...}\n\n    # \\makebox[width][position]{text}\n    #   position: c,l,r,s (default = c)\n    # \\makebox(width,height)[position]{text}\n    #   position: c,l,r,s (default = c) and t,b or combinations of the two\n    args.\\makebox =     <[ H v? l? i? hg ]>\n    \\makebox            : (vec, width, pos, txt) ->\n        if vec\n            # picture version TODO\n            @g.error \"expected \\\\makebox(width,height)[position]{text} but got two optional arguments!\" if width and pos\n            pos = width\n\n            [ txt ]\n        else\n            # normal makebox\n            @_box width, pos, txt, \"hbox\"\n\n\n    # \\fbox{text}\n    # \\framebox[width][position]{text}\n    #   position: c,l,r,s\n    #\n    # these add \\fboxsep (default ‘3pt’) padding to \"text\" and draw a frame with linewidth \\fboxrule (default ‘.4pt’)\n    #\n    # \\framebox(width,height)[position]{text}\n    #   position: t,b,l,r (one or two)\n    # this one uses the picture line thickness\n    args.\\fbox =        <[ H hg ]>\n    args.\\framebox =    <[ H v? l? i? hg ]>\n\n    \\fbox               : (txt) ->\n        @framebox undefined, undefined, undefined, txt\n\n    \\framebox           : (vec, width, pos, txt) ->\n        if vec\n            # picture version TODO\n            @g.error \"expected \\\\framebox(width,height)[position]{text} but got two optional arguments!\" if width and pos\n        else\n            # normal framebox\n            # add the frame if it is a simple node, otherwise create a new box\n            if txt.hasAttribute? and not width and not pos and not @g.hasAttribute txt, \"frame\"\n                @g.addAttribute txt, \"frame\"\n                [ txt ]\n            else\n                @_box width, pos, txt, \"hbox frame\"\n\n\n\n    # helper for mbox, fbox, makebox, framebox\n    _box: (width, pos, txt, classes) ->\n        if width\n            pos = \"c\" if not pos\n\n            switch pos\n            | \"s\" => classes += \" stretch\"           # @g.error \"position 's' (stretch) is not supported for text!\"\n            | \"c\" => classes += \" clap\"\n            | \"l\" => classes += \" rlap\"\n            | \"r\" => classes += \" llap\"\n            |  _  => @g.error \"unknown position: #{pos}\"\n\n        content = @g.create @g.inline, txt\n        box = @g.create @g.inline, content, classes\n\n        if width\n            box.setAttribute \"style\", \"width:#{width.value}\"\n\n        [ box ]\n\n\n\n    # \\raisebox{distance}[height][depth]{text}\n\n    # \\rule[raise]{width}{height}\n\n\n    # \\newsavebox{\\name}\n    # \\savebox{\\boxcmd}[width][pos]{text}\n    # \\sbox{\\boxcmd}{text}\n    # \\usebox{\\boxcmd}\n\n    # \\begin{lrbox}{\\boxcmd}\n    #   text\n    # \\end{lrbox}\n\n\n\n    ### parboxes\n\n    # \\parbox[pos][height][inner-pos]{width}{text}\n    #  pos: c,t,b\n    #  inner-pos: t,c,b,s (or pos if not given)\n    args.\\parbox =      <[ H i? l? i? l g ]>\n    \\parbox             : (pos, height, inner-pos, width, txt) ->\n        pos = \"c\" if not pos\n        inner-pos = pos if not inner-pos\n        classes = \"parbox\"\n        style = \"width:#{width.value};\"\n\n        if height\n            classes += \" pbh\"\n            style += \"height:#{height.value};\"\n\n        switch pos\n        | \"c\" => classes += \" p-c\"\n        | \"t\" => classes += \" p-t\"\n        | \"b\" => classes += \" p-b\"\n        |  _  => @g.error \"unknown position: #{pos}\"\n\n        switch inner-pos\n        | \"s\" => classes += \" stretch\"\n        | \"c\" => classes += \" p-cc\"\n        | \"t\" => classes += \" p-ct\"\n        | \"b\" => classes += \" p-cb\"\n        |  _  => @g.error \"unknown inner-pos: #{inner-pos}\"\n\n        content = @g.create @g.inline, txt\n        box = @g.create @g.inline, content, classes\n\n        box.setAttribute \"style\", style\n\n        [ box ]\n\n\n\n    /*\n    \\shortstack[pos]{...\\\\...\\\\...}, pos: r,l,c (horizontal alignment)\n\n\n    \\begin{minipage}[pos][height][inner-pos]{width}\n    */\n\n\n\n    ############\n    # graphics #\n    ############\n\n\n\n    ### picture environment (pspicture, calc, picture and pict2e packages)\n\n    # line thickness and arrowlength in a picture (not multiplied by \\unitlength)\n\n    args\n     ..\\thicklines =    <[ HV ]>\n     ..\\thinlines =     <[ HV ]>\n     ..\\linethickness = <[ HV l ]>\n     ..\\arrowlength =   <[ HV l ]>\n\n    \\thinlines          :!->        @g.setLength \\@wholewidth new @g.Length 0.4, \"pt\"\n    \\thicklines         :!->        @g.setLength \\@wholewidth new @g.Length 0.8, \"pt\"\n    \\linethickness      : (l) !->\n        @g.error \"relative units for \\\\linethickness not supported!\" if l.unit != \"sp\"\n        @g.setLength \\@wholewidth l\n\n    \\arrowlength        : (l) !->   @g.setLength \\@arrowlength l\n\n    \\maxovalrad         :-> \"20pt\"\n\n    \\qbeziermax         :-> 500\n\n\n    # frames\n\n    # \\dashbox{dashlen}(width,height)[pos]{text}\n    args.\\dashbox =     <[ H cl v i? g ]>\n\n    # \\frame{text} - frame without padding, linewidth given by picture linethickness\n    args.\\frame =       <[ H hg ]>\n    \\frame              : (txt) ->\n        el = @g.create @g.inline, txt, \"hbox pframe\"\n        w = @g.length \\@wholewidth\n        el.setAttribute \"style\" \"border-width:#{w.value}\"\n        [ el ]\n\n\n    ## picture commands\n\n    # these commands create a box with width 0 and height abs(y) + height of {obj} if y positive\n\n    # \\put(x,y){obj}\n    args.\\put =         <[ H v g is ]>\n    \\put                : (v, obj) ->\n        wrapper = @g.create @g.inline, obj, \"put-obj\"\n\n        if v.y.cmp(@g.Length.zero) >= 0\n            # TODO: CSS: this case should align the text (put-obj) on baseline... otherwise, strut is too high\n            #       (see mixing math, text and lines unit test)\n            wrapper.setAttribute \"style\", \"left:#{v.x.value}\"\n            # only add the strut if y > 0\n            if v.y.cmp(@g.Length.zero) > 0\n                strut = @g.create @g.inline, undefined, \"strut\"\n                strut.setAttribute \"style\", \"height:#{v.y.value}\"\n        else\n            wrapper.setAttribute \"style\", \"left:#{v.x.value};bottom:#{v.y.value}\"\n\n        @rlap @g.create @g.inline, [wrapper, strut], \"picture\"\n\n\n    # \\multiput(x,y)(delta_x,delta_y){n}{obj}\n    args.\\multiput =    <[ H v v n g ]>\n    \\multiput           : (v, dv, n, obj) ->\n        res = []\n        for i til n\n            res = res ++ @\\put v.add(dv.mul i), obj.cloneNode true\n\n        res\n\n\n    # \\qbezier[N](x1, y1)(x, y)(x2, y2)\n    args.\\qbezier =     <[ H n? v v v ]>\n    \\qbezier            : (N, v1, v, v2) ->\n        # for path, v MUST be unitless - so v is always in user coordinate system, or relative\n        # (and just to be safe, set size = viewbox in @_path)\n        [ @_path \"M#{v1.x.pxpct},#{v1.y.pxpct} Q#{v.x.pxpct},#{v.y.pxpct} #{v2.x.pxpct},#{v2.y.pxpct}\", N ]\n\n\n    # \\cbezier[N](x1, y1)(x, y)(x2, y2)(x3, y3)\n    args.\\cbezier =     <[ H n? v v v v ]>\n    \\cbezier            : (N, v1, v, v2, v3) ->\n        [ @_path \"M#{v1.x.pxpct},#{v1.y.pxpct} C#{v.x.pxpct},#{v.y.pxpct} #{v2.x.pxpct},#{v2.y.pxpct} #{v3.x.pxpct},#{v3.y.pxpct}\", N ]\n\n\n    # typeset an SVG path, optionally with N+1 points instead of smooth\n    # (https://github.com/Pomax/bezierjs for calculating bezier points manually)\n    _path: (p, N) ->\n        linethickness = @g.length \\@wholewidth\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!.addTo svg\n\n        path = draw.path p\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .fill 'none'\n\n        if N > 0\n            N = Math.min N, @\\qbeziermax () - 1\n\n            pw = linethickness.px                           # width of a point\n            len-section = (path.length! - (N+1)*pw) / N     # N sections for N+1 points\n            if len-section > 0\n                path.stroke { dasharray: \"#{pw} #{@g.round len-section}\" }\n\n        bbox = path.bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        @g.create @g.inline, svg, \"picture\"\n\n\n\n    ## picture objects\n\n    # the boxes created by picture objects do not have a height or width\n\n    # \\circle[*]{diameter}\n    args.\\circle =      <[ H s cl ]>\n    \\circle             : (s, d) ->\n        # no negative diameters\n        d = d.abs!\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n\n        linethickness = @g.length \\@wholewidth\n\n        draw = @g.SVG!.addTo svg\n\n        # if the circle is filled, then linewidth must not influence the diameter\n        if s\n            offset = d.div(2).mul(-1).value\n\n            draw.size d.value, d.value\n                .stroke {\n                    color: \"#000\"\n                    width: \"0\"\n                }\n                .circle(d.value)\n                .cx(d.div(2).value)\n                .cy(d.div(2).value)\n                .fill(\"\")\n        else\n            # increase border by linewidth; multiply by -1 to shift left/down\n            offset = d.div(2).add(linethickness).mul(-1).value\n\n            draw.size d.add(linethickness.mul(2)).value, d.add(linethickness.mul(2)).value\n                .stroke {\n                    color: \"#000\"\n                    width: linethickness.value\n                }\n                .circle(d.value)\n                .cx(d.div(2).add(linethickness).value)\n                .cy(d.div(2).add(linethickness).value)\n                .fill(\"none\")\n\n        svg.setAttribute \"style\", \"left:#{offset};bottom:#{offset}\"\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        [ @g.create @g.inline, svg, \"picture\" ]\n\n\n    # \\line(xslope,yslope){length}\n    #   if xslope != 0 then length is horizontal, else it is vertical\n    #   if xslope == yslope == 0 then error\n    args.\\line =        <[ H v cl ]>\n    \\line               : (v, l) ->\n        [ @_line ...@_slopeLengthToCoords v, l ]\n\n\n    # \\vector(xslope,yslope){length}\n    args.\\vector =      <[ H v cl ]>\n    \\vector             : (v, l) ->\n        [ @_vector ...@_slopeLengthToCoords v, l ]\n\n\n    # \\Line(x1,y1)(x2,y2)\n    args.\\Line =        <[ H v v ]>\n    \\Line               : (vs, ve) ->\n        [ @_line vs, ve ]\n\n\n    # extension - not in LaTeX (pict2e)\n    # \\Vector(x1,y1)(x2,y2)\n    args.\\Vector =      <[ H v v ]>\n    \\Vector             : (vs, ve) ->\n        [ @_vector vs, ve ]\n\n\n    # convert slope/length pair to a vector (x/y coordinates)\n    _slopeLengthToCoords: (v, l) ->\n        @g.error \"illegal slope (0,0)\" if v.x.value == v.y.value == 0\n        @g.error \"relative units not allowed for slope\" if v.x.unit != v.y.unit or v.x.unit != \"sp\"\n\n        linethickness = @g.length \\@wholewidth\n\n        zero = new @g.Length 0, l.unit\n\n        if v.x.px == 0\n            x = zero\n            y = l\n        else\n            x = l\n            y = x.mul Math.abs(v.y.ratio(v.x))\n\n        if v.x.cmp(zero) < 0\n            x = x.mul -1\n        if v.y.cmp(zero) < 0\n            y = y.mul -1\n\n        [ new Vector(zero, zero), new Vector(x, y) ]\n\n\n    # helper: draw line from vs to ve\n    # TODO: if vs is negative and ve positive, style/size/viewbox needs to be adapted!\n    _line: (vs, ve) ->\n        # TODO: em/ex should be supported!\n        @g.error \"relative units not allowed for line\" if vs.x.unit != vs.y.unit or vs.x.unit != \"sp\"\n        @g.error \"relative units not allowed for line\" if ve.x.unit != ve.y.unit or ve.x.unit != \"sp\"\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!.addTo svg\n\n        linethickness = @g.length \\@wholewidth\n        bbox = draw.line(vs.x.px, vs.y.px, ve.x.px, ve.y.px)\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"line: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        @g.create @g.inline, svg, \"picture\"\n\n\n    # helper: draw arrow from vs to ve\n    _vector: (vs, ve) ->\n        # TODO: vs not implemented! always 0\n        # TODO: em/ex should be supported!\n        @g.error \"relative units not allowed for vector\" if vs.x.unit != vs.y.unit or vs.x.unit != \"sp\"\n        @g.error \"relative units not allowed for vector\" if ve.x.unit != ve.y.unit or ve.x.unit != \"sp\"\n\n        linethickness = @g.length \\@wholewidth\n\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        draw = @g.SVG!\n\n        # arrow head length and width\n        hl = 6.5\n        hw = 3.9\n\n        # if the linethickness is less than 0.6pt, don't shrink the arrow head any further\n        max = new @g.Length 0.6, \"pt\"\n\n        if linethickness.cmp(max) < 0\n            hl = @g.round(hl * max.ratio linethickness)\n            hw = @g.round(hw * max.ratio linethickness)\n\n        hhl = linethickness.mul(hl/2)       # half the head length (the marker scales with stroke width)\n        al = ve.sub(vs).norm!               # arrow length\n\n        # if arrow head is longer than the arrow, shift start of the arrow\n        if al.cmp(hhl) < 0\n            s = ve.shift_start hhl\n        else\n            s = new Vector @g.Length.zero, @g.Length.zero\n\n        # shorten vector by half the arrow head length\n        ve = ve.shift_end hhl.mul -1\n\n        bbox = draw.line(s.x.px, s.y.px, ve.x.px, ve.y.px)\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   # marker width and height\n                   .marker 'end', hl, hw, (marker) ~>\n                        marker.path \"M0,0 \\\n                                     Q#{@g.round(2*hl/3)},#{@g.round(hw/2)} #{hl},#{@g.round(hw/2)} \\\n                                     Q#{@g.round(2*hl/3)},#{@g.round(hw/2)} 0,#{hw} \\\n                                     z\" #.fill \"\"\n                   .bbox!\n\n        bbox.x -= linethickness.px + hhl.px\n        bbox.y -= linethickness.px + hhl.px\n        bbox.width += linethickness.px + hhl.px * 2\n        bbox.height += linethickness.px + hhl.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"vector: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n        # size and position\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        draw.addTo svg\n        @g.create @g.inline, svg, \"picture\"\n\n\n\n    # \\oval[radius](width,height)[portion]\n    #   uses circular arcs of radius min(radius, width/2, height/2)\n    args.\\oval =        <[ H cl? v i? ]>\n    \\oval               : (maxrad, size, part) ->\n        linethickness = @g.length \\@wholewidth\n\n        if not maxrad\n            maxrad = new @g.Length 20, \"px\" # TODO: use \\maxovalrad, parse the length (if unitless, multiply with \\unitlength)\n\n        if not part\n            part = \"\"\n\n        # determine radius\n        if size.x.cmp(size.y) < 0\n            rad = size.x.div 2\n        else\n            rad = size.y.div 2\n\n        if maxrad.cmp(rad) < 0\n            rad = maxrad\n\n        draw = @g.SVG!\n        oval = draw.rect size.x.value, size.y.value\n                   .radius rad.value\n                   .move size.x.div(-2).value, size.y.div(-2).value\n                   .stroke {\n                       color: \"#000\"\n                       width: linethickness.value\n                   }\n                   .fill \"none\"\n\n\n        # initial rect\n        rect =\n            x: size.x.div(-2).sub linethickness\n            y: size.y.div(-2).sub linethickness\n            w: size.x.add linethickness.mul 2\n            h: size.y.add linethickness.mul 2\n\n\n        if part.includes 'l'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: size.y.div(-2).sub linethickness\n                w: size.x.div(2).add linethickness\n                h: size.y.add linethickness.mul 2\n\n\n        if part.includes 't'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: size.y.div(-2).sub linethickness\n                w: size.x.add linethickness.mul 2\n                h: size.y.div(2).add linethickness\n\n\n        if part.includes 'r'\n            rect = @_intersect rect,\n                x: @g.Length.zero\n                y: size.y.div(-2).sub linethickness\n                w: size.x.div(2).add linethickness\n                h: size.y.add linethickness.mul 2\n\n\n        if part.includes 'b'\n            rect = @_intersect rect,\n                x: size.x.div(-2).sub linethickness\n                y: @g.Length.zero\n                w: size.x.add linethickness.mul 2\n                h: size.y.div(2).add linethickness\n\n\n        bbox = oval.bbox!\n\n        bbox.x -= linethickness.px\n        bbox.y -= linethickness.px\n        bbox.width += linethickness.px * 2\n        bbox.height += linethickness.px * 2\n\n        if bbox.x > 0 or bbox.y > 0\n            console.error \"oval: bbox.x/y > 0!!\", bbox.x, bbox.y\n\n\n        clip = draw.clip!.add (draw.rect rect.w.value, rect.h.value\n                                   .move rect.x.value, rect.y.value)\n        clip.flip 'y', 0\n\n        oval.clipWith clip\n\n        # size and position\n        svg = @g.create @g.inline, undefined, \"picture-object\"\n        svg.setAttribute \"style\", \"left:#{@g.round bbox.x}px;bottom:#{@g.round bbox.y}px\"\n\n        draw.size \"#{@g.round bbox.width}px\", \"#{@g.round bbox.height}px\"\n            .viewbox @g.round(bbox.x), @g.round(bbox.y), @g.round(bbox.width), @g.round(bbox.height)\n\n        # last, put the origin into the lower left\n        draw.flip 'y', 0\n\n        draw.addTo svg\n\n        [ @g.create @g.inline, svg, \"picture\" ]\n\n\n    # return a new rectangle that is the result of intersecting the given two rectangles\n    _intersect: (r1, r2) ->\n        x: @g.Length.max(r1.x, r2.x)\n        y: @g.Length.max(r1.y, r2.y)\n        w: @g.Length.max(@g.Length.zero, @g.Length.min(r1.x.add(r1.w), r2.x.add(r2.w)).sub @g.Length.max(r1.x, r2.x))\n        h: @g.Length.max(@g.Length.zero, @g.Length.min(r1.y.add(r1.h), r2.y.add(r2.h)).sub @g.Length.max(r1.y, r2.y))\n\n\n    ####################\n    # lengths (scoped) #\n    ####################\n\n\n    args.\\newlength =   <[ HV m ]>\n    \\newlength          : (id) !-> @g.newLength id\n\n    args.\\setlength =   <[ HV m l ]>\n    \\setlength          : (id, l) !-> @g.setLength id, l\n\n    args.\\addtolength = <[ HV m l ]>\n    \\addtolength        : (id, l) !-> @g.setLength id, @g.length(id).add l\n\n\n    # settoheight     =\n    # settowidth      =\n    # settodepth      =\n\n\n    # get the natural size of a box\n    # width           =\n    # height          =\n    # depth           =\n    # totalheight     =\n\n\n\n    ##################################\n    # LaTeX counters (always global) #\n    ##################################\n\n\n    # \\newcounter{counter}[parent]\n    args.\\newcounter =  <[ HV i i? ]>\n    \\newcounter         : (c, p) !-> @g.newCounter c, p\n\n\n    # \\stepcounter{counter}\n    args.\\stepcounter = <[ HV i ]>\n    \\stepcounter        : (c) !-> @g.stepCounter c\n\n\n    # \\addtocounter{counter}{<expression>}\n    args.\\addtocounter = <[ HV i n ]>\n    \\addtocounter       : (c, n) !-> @g.setCounter c, @g.counter(c) + n\n\n\n    # \\setcounter{counter}{<expression>}\n    args.\\setcounter =  <[ HV i n ]>\n    \\setcounter         : (c, n) !-> @g.setCounter c, n\n\n\n    # \\refstepcounter{counter}\n    #       \\stepcounter{counter}, and (locally) define \\@currentlabel so that the next \\label\n    #       will reference the correct current representation of the value; return an empty node\n    #       for an <a href=...> target\n    args.\\refstepcounter = <[ H i ]>\n    \\refstepcounter     : (c) -> @g.stepCounter c; return [ @g.refCounter c ]\n\n\n    # formatting counters\n\n    args\n     ..\\alph =          \\\n     ..\\Alph =          \\\n     ..\\arabic =        \\\n     ..\\roman =         \\\n     ..\\Roman =         \\\n     ..\\fnsymbol =      <[ H i ]>\n\n    \\alph               : (c) -> [ @g[\\alph]     @g.counter c ]\n    \\Alph               : (c) -> [ @g[\\Alph]     @g.counter c ]\n    \\arabic             : (c) -> [ @g[\\arabic]   @g.counter c ]\n    \\roman              : (c) -> [ @g[\\roman]    @g.counter c ]\n    \\Roman              : (c) -> [ @g[\\Roman]    @g.counter c ]\n    \\fnsymbol           : (c) -> [ @g[\\fnsymbol] @g.counter c ]\n\n\n\n    ## not yet...\n\n    args.\\input =       <[ V g ]>\n    \\input              : (file) ->\n\n    args.\\include =     <[ V g ]>\n    \\include            : (file) ->\n\n\n    ############\n    # preamble #\n    ############\n\n    args.\\documentclass =  <[ P kv? k k? ]>\n    \\documentclass      : (options, documentclass, version) !->\n        @\\documentclass = !-> @g.error \"Two \\\\documentclass commands. The document may only declare one class.\"\n\n        # load and instantiate the documentclass\n        Class = builtin-documentclasses[documentclass]\n\n        if not Class\n            try\n                Export = require \"./documentclasses/#{documentclass}\"\n                Class := Export.default || Export[Object.getOwnPropertyNames(Export).0]\n            catch e\n                console.error \"error loading documentclass \\\"#{documentclass}\\\": #{e}\"\n                throw new Error \"error loading documentclass \\\"#{documentclass}\\\"\"\n\n        @g.documentClass = new Class @g, options\n        assignIn this, @g.documentClass\n        assign args, Class.args\n\n\n    args.\\usepackage    =  <[ P kv? csv k? ]>\n    \\usepackage         : (opts, packages, version) !->\n        options = Object.assign {}, @g.documentClass.options, opts\n\n        for pkg in packages\n            continue if providedPackages.includes pkg\n\n            # load and instantiate the package\n            Package = builtin-packages[pkg]\n\n            try\n                if not Package\n                    Export = require \"./packages/#{pkg}\"\n                    Package := Export.default || Export[Object.getOwnPropertyNames(Export).0]\n\n                assignIn this, new Package @g, options\n                assign args, Package.args\n                Package.symbols?.forEach (value, key) -> symbols.set key, value\n            catch e\n                # log error but continue anyway\n                console.error \"error loading package \\\"#{pkg}\\\": #{e}\"\n\n\n    args.\\includeonly   = <[ P csv ]>\n    \\includeonly        : (filelist) !->\n\n\n    args.\\makeatletter  = <[ P ]>\n    \\makeatletter       :!->\n\n    args.\\makeatother   = <[ P ]>\n    \\makeatother        :!->\n\n\n\n\n    ###########\n    # ignored #\n    ###########\n\n    args\n     ..\\pagestyle =     <[ HV i ]>\n    \\pagestyle          : (s) !->\n\n\n    args\n     ..\\linebreak =     <[ HV n? ]>\n     ..\\nolinebreak =   <[ HV n? ]>\n     ..\\fussy =         <[ HV ]>\n     ..\\sloppy =        <[ HV ]>\n\n\n    \\linebreak          : (o) !->\n    \\nolinebreak        : (o) !->\n\n    \\fussy              :!->\n    \\sloppy             :!->\n\n    # these make no sense without pagebreaks\n\n    args\n     ..\\pagebreak =     <[ HV n? ]>\n     ..\\nopagebreak =   <[ HV n? ]>\n     ..\\samepage =      <[ HV ]>\n     ..\\enlargethispage = <[ HV s l ]>\n     ..\\newpage =       <[ HV ]>\n     ..\\clearpage =     <[ HV ]>\n     ..\\cleardoublepage = <[ HV ]>\n     ..\\vfill =         <[ HV ]>\n     ..\\thispagestyle = <[ HV i ]>\n\n    \\pagebreak          : (o) !->\n    \\nopagebreak        : (o) !->\n    \\samepage           :!->\n    \\enlargethispage    : (s, l) !->\n    \\newpage            :!->\n    \\clearpage          :!->    # prints floats in LaTeX\n    \\cleardoublepage    :!->\n    \\vfill              :!->\n    \\thispagestyle      : (s) !->\n","import\n    './latex.ltx': { LaTeX }\n    './symbols': { diacritics, symbols }\n    './types': { makeLengthClass }\n\nMacros = LaTeX\n\nObject.defineProperty Array.prototype, 'top',\n    enumerable: false\n    configurable: true\n    get: -> @[* - 1]\n    set: (v) !-> @[* - 1] = v\n\n\nexport class Generator\n\n    ### public instance vars (vars beginning with \"_\" are meant to be private!)\n\n    documentClass: null     # name of the default document class until \\documentclass{}, then the actual class instance\n    documentTitle: null\n\n    # initialize only in CTOR, otherwise the objects end up in the prototype\n    _options: null\n    _macros: null\n\n    _stack: null\n    _groups: null\n\n    _continue: false\n\n    _labels: null\n    _refs: null\n\n    _counters: null\n    _resets: null\n\n    _marginpars: null\n\n    Length: null\n\n    reset: !->\n        @Length = makeLengthClass @\n\n        @documentClass = @_options.documentClass\n        @documentTitle = \"untitled\"\n\n        @_uid = 1\n\n        @_macros = {}\n        @_curArgs = []  # stack of argument declarations\n\n        # stack for local variables and attributes - entering a group adds another entry,\n        # leaving a group removes the top entry\n        @_stack = [\n            attrs: {}\n            align: null\n            currentlabel:\n                id: \"\"\n                label: document.createTextNode \"\"\n            lengths: new Map()\n        ]\n\n        # grouping stack, keeps track of difference between opening and closing brackets\n        @_groups = [ 0 ]\n\n        @_labels = new Map()\n        @_refs = new Map()\n\n        @_marginpars = []\n\n        @_counters = new Map()\n        @_resets = new Map()\n\n        @_continue = false\n\n        @newCounter \\enumi\n        @newCounter \\enumii\n        @newCounter \\enumiii\n        @newCounter \\enumiv\n\n        # do this after creating the sectioning counters because \\thepart etc. are already predefined\n        @_macros = new Macros @, @_options.CustomMacros\n\n\n    # helpers\n\n    nextId: ->\n        @_uid++\n\n    round: (num) ->\n        const factor = Math.pow 10, @_options.precision\n        Math.round(num * factor) / factor\n\n\n\n    # private static for easy access - but it means no parallel generator usage!\n    error = (e) !->\n        console.error e\n        throw new Error e\n\n    error: (e) !-> error e\n\n    setErrorFn: (e) !->\n        error := e\n\n\n    location: !-> error \"location function not set!\"\n\n\n\n    # set the title of the document, usually called by the \\maketitle macro\n    setTitle: (title) ->\n        @documentTitle = title.textContent\n\n\n\n    ### characters\n\n    hasSymbol: (name) ->\n        Macros.symbols.has name\n\n    symbol: (name) ->\n        @error \"no such symbol: #{name}\" if not @hasSymbol name\n        Macros.symbols.get name\n\n\n\n    ### macros\n\n    hasMacro: (name) ->\n        typeof @_macros[name] == \"function\"\n        and name !== \"constructor\"\n        and (@_macros.hasOwnProperty name or Macros.prototype.hasOwnProperty name)\n\n\n    isHmode:    (marco) -> Macros.args[marco]?.0 == \\H  or not Macros.args[marco]\n    isVmode:    (marco) -> Macros.args[marco]?.0 == \\V\n    isHVmode:   (marco) -> Macros.args[marco]?.0 == \\HV\n    isPreamble: (marco) -> Macros.args[marco]?.0 == \\P\n\n    macro: (name, args) ->\n        if symbols.has name\n            return [ @createText symbols.get name ]\n\n        @_macros[name]\n            .apply @_macros, args\n            ?.filter (x) -> x !~= undefined\n            .map (x) ~> if typeof x == 'string' or x instanceof String then @createText x else @addAttributes x\n\n\n    # macro arguments\n\n    beginArgs: (macro) !->\n        @_curArgs.push if Macros.args[macro]\n            then {\n                name: macro\n                args: that.slice(1)\n                parsed: []\n            } else {\n                args: []\n                parsed: []\n            }\n\n    # if next char matches the next arg of a branch, choose that branch\n    # return true if there was a matched branch, false otherwise\n    selectArgsBranch: (nextChar) ->\n        optArgs = <[ o? i? k? kv? n? l? c-ml? cl? ]>\n\n        if Array.isArray @_curArgs.top.args.0\n            # check which alternative branch to choose, discard the others only if it was a match\n            branches = @_curArgs.top.args.0\n            for b in branches\n                if (nextChar == '[' and b.0 in optArgs) or (nextChar == '{' and b.0 not in optArgs)\n                    @_curArgs.top.args.shift!           # remove all branches\n                    @_curArgs.top.args.unshift ...b     # prepend remaining args\n\n                    return true\n\n\n    # check the next argument type to parse, returns true if arg is the next expected argument\n    # if the next expected argument is an array, it is treated as a list of alternative next arguments\n    nextArg: (arg) ->\n        if @_curArgs.top.args.0 == arg\n            @_curArgs.top.args.shift!\n            true\n\n    argError: (m) ->\n        error \"macro \\\\#{@_curArgs.top.name}: #{m}\"\n\n    # add the result of a parsed argument\n    addParsedArg: (a) !->\n        @_curArgs.top.parsed.push a\n\n    # get the parsed arguments so far\n    parsedArgs: ->\n        @_curArgs.top.parsed\n\n    # execute macro with parsed arguments so far\n    preExecMacro: !->\n        @macro @_curArgs.top.name, @parsedArgs!\n\n    # remove arguments of a completely parsed macro from the stack\n    endArgs: !->\n        @_curArgs.pop!\n            ..args.length == 0 || error \"grammar error: arguments for #{..name} have not been parsed: #{..args}\"\n            return ..parsed\n\n\n    ### environments\n\n    begin: (env_id) !->\n        if not @hasMacro env_id\n            error \"unknown environment: #{env_id}\"\n\n        @startBalanced!\n        @enterGroup!\n        @beginArgs env_id\n\n\n    end: (id, end_id) ->\n        if id != end_id\n            error \"environment '#{id}' is missing its end, found '#{end_id}' instead\"\n\n        if @hasMacro \"end\" + id\n            end = @macro \"end\" + id\n\n        @exitGroup!\n        @isBalanced! or error \"#{id}: groups need to be balanced in environments!\"\n        @endBalanced!\n\n        end\n\n\n\n    ### groups\n\n    # start a new group\n    enterGroup: (copyAttrs = false) !->\n        # shallow copy of the contents of top is enough because we don't change the elements, only the array and the maps\n        @_stack.push {\n            attrs: if copyAttrs then Object.assign {}, @_stack.top.attrs else {}\n            align: null                                                 # alignment is set only per level where it was changed\n            currentlabel: Object.assign {}, @_stack.top.currentlabel\n            lengths: new Map(@_stack.top.lengths)\n        }\n        ++@_groups.top\n\n    # end the last group - throws if there was no group to end\n    exitGroup: !->\n        --@_groups.top >= 0 || error \"there is no group to end here\"\n        @_stack.pop!\n\n    # start a new level of grouping\n    startBalanced: !->\n        @_groups.push 0\n\n    # exit a level of grouping and return the levels of balancing still left\n    endBalanced: ->\n        @_groups.pop!\n        @_groups.length\n\n    # check if the current level of grouping is balanced\n    isBalanced: ->\n        @_groups.top == 0\n\n\n    ### attributes - in HTML, those are CSS classes\n\n    continue: !->\n        @_continue = @location!.end.offset\n\n    break: !->\n        # only record the break if it came from a position AFTER the continue\n        if @location!.end.offset > @_continue\n            @_continue = false\n\n\n    # alignment\n\n    setAlignment: (align) !->\n        @_stack.top.align = align\n\n    alignment: ->\n        @_stack.top.align\n\n\n    # font attributes\n\n    setFontFamily: (family) !->\n        @_stack.top.attrs.fontFamily = family\n\n    setFontWeight: (weight) !->\n        @_stack.top.attrs.fontWeight = weight\n\n    setFontShape: (shape) !->\n        if shape == \"em\"\n            if @_activeAttributeValue(\"fontShape\") == \"it\"\n                shape = \"up\"\n            else\n                shape = \"it\"\n\n        @_stack.top.attrs.fontShape = shape\n\n    setFontSize: (size) !->\n        @_stack.top.attrs.fontSize = size\n\n    setTextDecoration: (decoration) !->\n        @_stack.top.attrs.textDecoration = decoration\n\n\n    # get all inline attributes of the current group\n    _inlineAttributes: ->\n        cur = @_stack.top.attrs\n        [cur.fontFamily, cur.fontWeight, cur.fontShape, cur.fontSize, cur.textDecoration].join(' ').replace(/\\s+/g, ' ').trim!\n\n    # get the currently active value for a specific attribute, also taking into account inheritance from parent groups\n    # return the empty string if the attribute was never set\n    _activeAttributeValue: (attr) ->\n        # from top to bottom until the first value is found\n        for level from @_stack.length-1 to 0 by -1\n            if @_stack[level].attrs[attr]\n                return that\n\n\n\n\n    ### sectioning\n\n    startsection: (sec, level, star, toc, ttl) ->\n        # call before the arguments are parsed to refstep the counter\n        if toc ~= ttl ~= undefined\n            if not star and @counter(\"secnumdepth\") >= level\n                @stepCounter sec\n                @refCounter sec, \"sec-\" + @nextId!\n\n            return\n\n        # number the section?\n        if not star and @counter(\"secnumdepth\") >= level\n            if sec == \\chapter\n                chaphead = @create @block, @macro(\\chaptername) ++ (@createText @symbol \\space) ++ @macro(\\the + sec)\n                el = @create @[sec], [chaphead, ttl]\n            else\n                el = @create @[sec], @macro(\\the + sec) ++ (@createText @symbol \\quad) ++ ttl   # in LaTeX: \\@seccntformat\n\n            # take the id from currentlabel.id\n            el.id? = @_stack.top.currentlabel.id\n        else\n            el = @create @[sec], ttl\n\n        # entry in the TOC required?\n        # if not star and @counter(\"tocdepth\")\n        #     TODO\n\n        el\n\n    ### lists\n\n    startlist: ->\n        @stepCounter \\@listdepth\n        if @counter(\\@listdepth) > 6\n            error \"too deeply nested\"\n\n        true\n\n    endlist: !->\n        @setCounter \\@listdepth, @counter(\\@listdepth) - 1\n        @continue!\n\n\n\n    ### lengths\n\n\n    newLength: (l) !->\n        error \"length #{l} already defined!\" if @hasLength l\n        @_stack.top.lengths.set l, @Length.zero\n\n    hasLength: (l) ->\n        @_stack.top.lengths.has l\n\n    setLength: (id, length) !->\n        error \"no such length: #{id}\" if not @hasLength id\n        # console.log \"set length:\", id, length\n        @_stack.top.lengths.set id, length\n\n    length: (l) ->\n        error \"no such length: #{l}\" if not @hasLength l\n        # console.log \"get length: #{l} -> #{}\"\n        @_stack.top.lengths.get l\n\n    theLength: (id) ->\n        l = @create @inline, undefined, \"the\"\n        l.setAttribute \"display-var\", id\n        l\n\n\n\n\n\n    ### LaTeX counters (global)\n\n    newCounter: (c, parent) !->\n        error \"counter #{c} already defined!\" if @hasCounter c\n\n        @_counters.set c, 0\n        @_resets.set c, []\n\n        if parent\n            @addToReset c, parent\n\n        error \"macro \\\\the#{c} already defined!\" if @hasMacro(\\the + c)\n        @_macros[\\the + c] = -> [ @g.arabic @g.counter c ]\n\n\n    hasCounter: (c) ->\n        @_counters.has c\n\n    setCounter: (c, v) !->\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_counters.set c, v\n\n    stepCounter: (c) !->\n        @setCounter c, @counter(c) + 1\n        @clearCounter c\n\n    counter: (c) ->\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_counters.get c\n\n    refCounter: (c, id) ->\n        # currentlabel is local, the counter is global\n        # we need to store the id of the element as well as the counter (\\@currentlabel)\n        # if no id is given, create a new element to link to\n        if not id\n            id = c + \"-\" + @nextId!\n            el = @create @anchor id\n\n        # currentlabel stores the id of the anchor to link to, as well as the label to display in a \\ref{}\n        @_stack.top.currentlabel =\n            id: id\n            label: @createFragment [\n                ...if @hasMacro(\\p@ + c) then @macro(\\p@ + c) else []\n                ...@macro(\\the + c)\n            ]\n\n        return el\n\n\n    addToReset: (c, parent) !->\n        error \"no such counter: #{parent}\" if not @hasCounter parent\n        error \"no such counter: #{c}\" if not @hasCounter c\n        @_resets.get parent .push c\n\n    # reset all descendants of c to 0\n    clearCounter: (c) !->\n        for r in @_resets.get c\n            @clearCounter r\n            @setCounter r, 0\n\n\n    # formatting counters\n\n    alph: (num) -> String.fromCharCode(96 + num)\n\n    Alph: (num) -> String.fromCharCode(64 + num)\n\n    arabic: (num) -> String(num)\n\n    roman: (num) ->\n        lookup =\n            * \\m,  1000\n            * \\cm, 900\n            * \\d,  500\n            * \\cd, 400\n            * \\c,  100\n            * \\xc, 90\n            * \\l,  50\n            * \\xl, 40\n            * \\x,  10\n            * \\ix, 9\n            * \\v,  5\n            * \\iv, 4\n            * \\i,  1\n\n        _roman num, lookup\n\n    Roman: (num) ->\n        lookup =\n            * \\M,  1000\n            * \\CM, 900\n            * \\D,  500\n            * \\CD, 400\n            * \\C,  100\n            * \\XC, 90\n            * \\L,  50\n            * \\XL, 40\n            * \\X,  10\n            * \\IX, 9\n            * \\V,  5\n            * \\IV, 4\n            * \\I,  1\n\n        _roman num, lookup\n\n\n    _roman = (num, lookup) ->\n        roman = \"\"\n\n        for i in lookup\n            while num >= i[1]\n                roman += i[0]\n                num -= i[1]\n\n        return roman\n\n    fnsymbol: (num) ->\n        switch num\n        |   1   => @symbol \\textasteriskcentered\n        |   2   => @symbol \\textdagger\n        |   3   => @symbol \\textdaggerdbl\n        |   4   => @symbol \\textsection\n        |   5   => @symbol \\textparagraph\n        |   6   => @symbol \\textbardbl\n        |   7   => @symbol(\\textasteriskcentered) + @symbol \\textasteriskcentered\n        |   8   => @symbol(\\textdagger) + @symbol \\textdagger\n        |   9   => @symbol(\\textdaggerdbl) + @symbol \\textdaggerdbl\n        |   _   => error \"fnsymbol value must be between 1 and 9\"\n\n\n    ### label, ref\n\n    # labels are possible for: parts, chapters, all sections, \\items, footnotes, minipage-footnotes, tables, figures\n    setLabel: (label) !->\n        error \"label #{label} already defined!\" if @_labels.has label\n\n        if not @_stack.top.currentlabel.id\n            console.warn \"warning: no \\\\@currentlabel available for label #{label}!\"\n\n        @_labels.set label, @_stack.top.currentlabel\n\n        # fill forward references\n        if @_refs.has label\n            for r in @_refs.get label\n                while r.firstChild\n                    r.removeChild r.firstChild\n\n                r.appendChild @_stack.top.currentlabel.label.cloneNode true\n                r.setAttribute \"href\", \"#\" + @_stack.top.currentlabel.id\n\n            @_refs.delete label\n\n    # keep a reference to each ref element if no label is known yet, then as we go along, fill it with labels\n    ref: (label) ->\n        # href is the element id, content is \\the<counter>\n        if @_labels.get label\n            return @create @link(\"#\" + that.id), that.label.cloneNode true\n\n        el = @create (@link \"#\"), @createText \"??\"\n\n        if not @_refs.has label\n            @_refs.set label, [el]\n        else\n            @_refs.get label .push el\n\n        el\n\n\n    logUndefinedRefs: !->\n        return if @_refs.size == 0\n\n        keys = @_refs.keys!\n        while not (ref = keys.next!).done\n            console.warn \"warning: reference '#{ref.value}' undefined\"\n\n        console.warn \"There were undefined references.\"\n\n\n    ### marginpar\n\n    marginpar: (txt) ->\n        id = @nextId!\n\n        marginPar = @create @block, [@create(@inline, null, \"mpbaseline\"), txt]\n        marginPar.id = id\n\n        @_marginpars.push marginPar\n\n        marginRef = @create @inline, null, \"mpbaseline\"\n        marginRef.id = \"marginref-\" + id\n\n        marginRef\n","var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n","const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n","// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n","// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n","export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n","export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n","import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesnt have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n","import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n","// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n","\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n","import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n","import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[name] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n","import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n","import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n","import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n","import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n","import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n","import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n","import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n","import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n","\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n","import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n","import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n","import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n","import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n","import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n","import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n","import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n","import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n","import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n","import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n","import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n","import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n","import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n","import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n","import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (let l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n","import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n","import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n","export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n","import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n","import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n","import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n","import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n","import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n","import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n","import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n","import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n","import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n","import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n","import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n","import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n","/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Point from './types/Point.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray,\r\n  Point\r\n])\r\n\r\nmakeMorphable()\r\n","/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  // don't expand the token\n  // used in \\noexpand\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.noexpand = void 0;\n    this.treatAsRelax = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text) {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error position based on passed-in Token or ParseNode.\n  constructor(message, // The error message\n  token) {\n    this.position = void 0;\n    var error = \"KaTeX parse error: \" + message;\n    var start;\n    var loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      var input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      var end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      var left;\n\n      if (start > 15) {\n        left = \"…\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      var right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"…\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n\n\n    var self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n    self.position = start;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nvar uppercase = /([A-Z])/g;\n\nvar hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nvar getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nvar isCharacterBox = function isCharacterBox(group) {\n  var baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative).\n */\n\nvar protocolFromUrl = function protocolFromUrl(url) {\n  var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n  return protocol != null ? protocol[1] : \"_relative\";\n};\nvar utils = {\n  contains,\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl\n};\n\n/* eslint no-console:0 */\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.output = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.minRuleThickness = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.trust = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    this.globalGroup = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.output = utils.deflt(options.output, \"htmlAndMathml\");\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.minRuleThickness = Math.max(0, utils.deflt(options.minRuleThickness, 0));\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.trust = utils.deflt(options.trust, false);\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n    this.globalGroup = utils.deflt(options.globalGroup, false);\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    var strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n      return false;\n    }\n  }\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n\n\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      context.protocol = utils.protocolFromUrl(context.url);\n    }\n\n    var trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n\n}\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7; // Instances of the different styles\n\nvar styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\nvar Style$1 = {\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n};\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f] // Combining Diacritical marks\n  ]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // Armenian\n  name: 'armenian',\n  blocks: [[0x0530, 0x058F]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900–097F)\n  // Bengali (0980–09FF)\n  // Gurmukhi (0A00–0A7F)\n  // Gujarati (0A80–0AFF)\n  // Oriya (0B00–0B7F)\n  // Tamil (0B80–0BFF)\n  // Telugu (0C00–0C7F)\n  // Kannada (0C80–0CFF)\n  // Malayalam (0D00–0D7F)\n  // Sinhala (0D80–0DFF)\n  // Thai (0E00–0E7F)\n  // Lao (0E80–0EFF)\n  // Tibetan (0F00–0FFF)\n  // Myanmar (1000–109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60] // Fullwidth punctuation\n  // TODO: add halfwidth Katakana and Romanji glyphs\n  ]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (var i = 0; i < scriptData.length; i++) {\n    var script = scriptData[i];\n\n    for (var _i = 0; _i < script.blocks.length; _i++) {\n      var block = script.blocks[_i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nvar allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (var i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * This file provides support to domTree.js and delimiter.js.\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nvar hLinePad = 80; // padding above a sqrt viniculum. Prevents image cropping.\n// The viniculum of a \\sqrt can be made thicker by a KaTeX rendering option.\n// Think of variable extraViniculum as two detours in the SVG path.\n// The detour begins at the lower left of the area labeled extraViniculum below.\n// The detour proceeds one extraViniculum distance up and slightly to the right,\n// displacing the radiused corner between surd and viniculum. The radius is\n// traversed as usual, then the detour resumes. It goes right, to the end of\n// the very long viniculumn, then down one extraViniculum distance,\n// after which it resumes regular path geometry for the radical.\n\n/*                                                  viniculum\n                                                   /\n         /▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒←extraViniculum\n        / █████████████████████←0.04em (40 unit) std viniculum thickness\n       / /\n      / /\n     / /\\\n    / / surd\n*/\n\nvar sqrtMain = function sqrtMain(extraViniculum, hLinePad) {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  return \"M95,\" + (622 + extraViniculum + hLinePad) + \"\\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\\nc69,-144,104.5,-217.7,106.5,-221\\nl\" + extraViniculum / 2.075 + \" -\" + extraViniculum + \"\\nc5.3,-9.3,12,-14,20,-14\\nH400000v\" + (40 + extraViniculum) + \"H845.2724\\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\\nM\" + (834 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize1 = function sqrtSize1(extraViniculum, hLinePad) {\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  return \"M263,\" + (601 + extraViniculum + hLinePad) + \"c0.7,0,18,39.7,52,119\\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\\nc340,-704.7,510.7,-1060.3,512,-1067\\nl\" + extraViniculum / 2.084 + \" -\" + extraViniculum + \"\\nc4.7,-7.3,11,-11,19,-11\\nH40000v\" + (40 + extraViniculum) + \"H1012.3\\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\\nM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize2 = function sqrtSize2(extraViniculum, hLinePad) {\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  return \"M983 \" + (10 + extraViniculum + hLinePad) + \"\\nl\" + extraViniculum / 3.13 + \" -\" + extraViniculum + \"\\nc4,-6.7,10,-10,18,-10 H400000v\" + (40 + extraViniculum) + \"\\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\\nM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize3 = function sqrtSize3(extraViniculum, hLinePad) {\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  return \"M424,\" + (2398 + extraViniculum + hLinePad) + \"\\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\\nl\" + extraViniculum / 4.223 + \" -\" + extraViniculum + \"c4,-6.7,10,-10,18,-10 H400000\\nv\" + (40 + extraViniculum) + \"H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\\nc-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M\" + (1001 + extraViniculum) + \" \" + hLinePad + \"\\nh400000v\" + (40 + extraViniculum) + \"h-400000z\";\n};\n\nvar sqrtSize4 = function sqrtSize4(extraViniculum, hLinePad) {\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  return \"M473,\" + (2713 + extraViniculum + hLinePad) + \"\\nc339.3,-1799.3,509.3,-2700,510,-2702 l\" + extraViniculum / 5.298 + \" -\" + extraViniculum + \"\\nc3.3,-7.3,9.3,-11,18,-11 H400000v\" + (40 + extraViniculum) + \"H1017.7\\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\\n606zM\" + (1001 + extraViniculum) + \" \" + hLinePad + \"h400000v\" + (40 + extraViniculum) + \"H1017.7z\";\n};\n\nvar phasePath = function phasePath(y) {\n  var x = y / 2; // x coordinate at top of angle\n\n  return \"M400000 \" + y + \" H0 L\" + x + \" 0 l65 45 L145 \" + (y - 80) + \" H400000z\";\n};\n\nvar sqrtTall = function sqrtTall(extraViniculum, hLinePad, viewBoxHeight) {\n  // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n  // One path edge has a variable length. It runs vertically from the viniculumn\n  // to a point near (14 units) the bottom of the surd. The viniculum\n  // is normally 40 units thick. So the length of the line in question is:\n  var vertSegment = viewBoxHeight - 54 - hLinePad - extraViniculum;\n  return \"M702 \" + (extraViniculum + hLinePad) + \"H400000\" + (40 + extraViniculum) + \"\\nH742v\" + vertSegment + \"l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\\n219 661 l218 661zM702 \" + hLinePad + \"H400000v\" + (40 + extraViniculum) + \"H742z\";\n};\n\nvar sqrtPath = function sqrtPath(size, extraViniculum, viewBoxHeight) {\n  extraViniculum = 1000 * extraViniculum; // Convert from document ems to viewBox.\n\n  var path = \"\";\n\n  switch (size) {\n    case \"sqrtMain\":\n      path = sqrtMain(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize1\":\n      path = sqrtSize1(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize2\":\n      path = sqrtSize2(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize3\":\n      path = sqrtSize3(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize4\":\n      path = sqrtSize4(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtTall\":\n      path = sqrtTall(extraViniculum, hLinePad, viewBoxHeight);\n  }\n\n  return path;\n};\nvar innerPath = function innerPath(name, height) {\n  // The inner part of stretchy tall delimiters\n  switch (name) {\n    case \"\\u239c\":\n      return \"M291 0 H417 V\" + height + \" H291z M291 0 H417 V\" + height + \" H291z\";\n\n    case \"\\u2223\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\";\n\n    case \"\\u2225\":\n      return \"M145 0 H188 V\" + height + \" H145z M145 0 H188 V\" + height + \" H145z\" + (\"M367 0 H410 V\" + height + \" H367z M367 0 H410 V\" + height + \" H367z\");\n\n    case \"\\u239f\":\n      return \"M457 0 H583 V\" + height + \" H457z M457 0 H583 V\" + height + \" H457z\";\n\n    case \"\\u23a2\":\n      return \"M319 0 H403 V\" + height + \" H319z M319 0 H403 V\" + height + \" H319z\";\n\n    case \"\\u23a5\":\n      return \"M263 0 H347 V\" + height + \" H263z M263 0 H347 V\" + height + \" H263z\";\n\n    case \"\\u23aa\":\n      return \"M384 0 H504 V\" + height + \" H384z M384 0 H504 V\" + height + \" H384z\";\n\n    case \"\\u23d0\":\n      return \"M312 0 H355 V\" + height + \" H312z M312 0 H355 V\" + height + \" H312z\";\n\n    case \"\\u2016\":\n      return \"M257 0 H300 V\" + height + \" H257z M257 0 H300 V\" + height + \" H257z\" + (\"M478 0 H521 V\" + height + \" H478z M478 0 H521 V\" + height + \" H478z\");\n\n    default:\n      return \"\";\n  }\n};\nvar path = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n  leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n  leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n  leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n  leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n  leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n  leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n  leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n  longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n  midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n  midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n  oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n  oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n  oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n  oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n  rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n  rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n  rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n  rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n  rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n  rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n  rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n  rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n  rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n  righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n  rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n  rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n  twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n  tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n  tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n  widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n  rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n  shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n  shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    var frag = document.createDocumentFragment();\n\n    for (var i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    var markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    var toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nvar toNode = function toNode(tagName) {\n  var node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (var i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nvar toMarkup = function toMarkup(tagName) {\n  var markup = \"<\" + tagName; // Add the class\n\n  if (this.classes.length) {\n    markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n  }\n\n  var styles = \"\"; // Add the styles, after hyphenation\n\n  for (var style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n    }\n  }\n\n  if (styles) {\n    markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n  } // Add the attributes\n\n\n  for (var attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (var i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += \"</\" + tagName + \">\";\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\n/**\n * This node represents an image embed (<img>) element.\n */\n\nclass Img {\n  constructor(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    var node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<img  src='\" + this.src + \" 'alt='\" + this.alt + \"' \"; // Add the styles, after hyphenation\n\n    var styles = \"\";\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    markup += \"'/>\";\n    return markup;\n  }\n\n}\nvar iCombinations = {\n  'î': '\\u0131\\u0302',\n  'ï': '\\u0131\\u0308',\n  'í': '\\u0131\\u0301',\n  // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n  'ì': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    var script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[îïíì]/.test(this.text)) {\n      // add ī when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    var node = document.createTextNode(this.text);\n    var span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (var style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\"; // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for \\sqrt, \\phase, & tall delims\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return \"<path d='\" + this.alternate + \"'/>\";\n    } else {\n      return \"<path d='\" + path[this.pathName] + \"'/>\";\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    var svgNS = \"http://www.w3.org/2000/svg\";\n    var node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    var markup = \"<line\";\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n  }\n}\n\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\nvar fontMetricsData = {\n  \"AMS-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Fraktur-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.44444, 0, 0, 0.575],\n    \"49\": [0, 0.44444, 0, 0, 0.575],\n    \"50\": [0, 0.44444, 0, 0, 0.575],\n    \"51\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"52\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"53\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0.19444, 0.44444, 0, 0, 0.575],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333],\n    \"57649\": [0, 0.44444, 0, 0, 0.39352],\n    \"57911\": [0.19444, 0.44444, 0, 0, 0.43889]\n  },\n  \"Math-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    \"57649\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"57911\": [0.19444, 0.43056, 0, 0.08334, 0.38403]\n  },\n  \"SansSerif-Bold\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212],\n    \"160\": [0, 0, 0, 0, 0.25]\n  },\n  \"Size1-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n};\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2],\n  // The width of separator lines in {array} environments. From\n  // `\\showthe\\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.\n  arrayRuleWidth: [0.04, 0.04, 0.04],\n  // Two values from LaTeX source2e:\n  fboxsep: [0.3, 0.3, 0.3],\n  //        3 pt / ptPerEm\n  fboxrule: [0.04, 0.04, 0.04] // 0.4 pt / ptPerEm\n\n}; // This map contains a mapping from font name and character code to character\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nvar extraCharacterMap = {\n  // Latin-1\n  'Å': 'A',\n  'Ç': 'C',\n  'Ð': 'D',\n  'Þ': 'o',\n  'å': 'a',\n  'ç': 'c',\n  'ð': 'd',\n  'þ': 'o',\n  // Cyrillic\n  'А': 'A',\n  'Б': 'B',\n  'В': 'B',\n  'Г': 'F',\n  'Д': 'A',\n  'Е': 'E',\n  'Ж': 'K',\n  'З': '3',\n  'И': 'N',\n  'Й': 'N',\n  'К': 'K',\n  'Л': 'N',\n  'М': 'M',\n  'Н': 'H',\n  'О': 'O',\n  'П': 'N',\n  'Р': 'P',\n  'С': 'C',\n  'Т': 'T',\n  'У': 'y',\n  'Ф': 'O',\n  'Х': 'X',\n  'Ц': 'U',\n  'Ч': 'h',\n  'Ш': 'W',\n  'Щ': 'W',\n  'Ъ': 'B',\n  'Ы': 'X',\n  'Ь': 'B',\n  'Э': '3',\n  'Ю': 'X',\n  'Я': 'R',\n  'а': 'a',\n  'б': 'b',\n  'в': 'a',\n  'г': 'r',\n  'д': 'y',\n  'е': 'e',\n  'ж': 'm',\n  'з': 'e',\n  'и': 'n',\n  'й': 'n',\n  'к': 'n',\n  'л': 'n',\n  'м': 'm',\n  'н': 'n',\n  'о': 'o',\n  'п': 'n',\n  'р': 'p',\n  'с': 'c',\n  'т': 'o',\n  'у': 'y',\n  'ф': 'b',\n  'х': 'x',\n  'ц': 'n',\n  'ч': 'n',\n  'ш': 'w',\n  'щ': 'w',\n  'ъ': 'a',\n  'ы': 'm',\n  'ь': 'a',\n  'э': 'e',\n  'ю': 'm',\n  'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  fontMetricsData[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!fontMetricsData[font]) {\n    throw new Error(\"Font metrics not found for font: \" + font + \".\");\n  }\n\n  var ch = character.charCodeAt(0);\n  var metrics = fontMetricsData[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = fontMetricsData[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nvar fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  var sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (var key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nvar ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nvar NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nvar symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nvar math = \"math\";\nvar text$1 = \"text\"; // fonts:\n\nvar main = \"main\";\nvar ams = \"ams\"; // groups:\n\nvar accent = \"accent-token\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text$1, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text$1, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(math, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a7\", \"\\\\S\");\ndefineSymbol(math, main, textord, \"\\u00b6\", \"\\\\P\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b6\", \"\\\\P\"); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\", true);\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceeded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text$1, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f0\", \"\\u00f0\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text$1, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text$1, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\@ulcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\@urcorner\", true);\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\@llcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\@lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, main, rel, \"\\u22b6\", \"\\\\origof\", true); // not in font\n\ndefineSymbol(math, main, rel, \"\\u22b7\", \"\\\\imageof\", true); // not in font\n\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text$1, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\", true);\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(text$1, main, textord, \"[\", \"\\\\lbrack\", true);\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(text$1, main, textord, \"]\", \"\\\\rbrack\", true);\ndefineSymbol(math, main, open, \"(\", \"\\\\lparen\", true);\ndefineSymbol(math, main, close, \")\", \"\\\\rparen\", true);\ndefineSymbol(text$1, main, textord, \"<\", \"\\\\textless\", true); // in T1 fontenc\n\ndefineSymbol(text$1, main, textord, \">\", \"\\\\textgreater\", true); // in T1 fontenc\n\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text$1, main, textord, \"|\", \"\\\\textbar\", true); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text$1, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(text$1, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text$1, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text$1, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true);\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\"); // \\imath and \\jmath should be invariant to \\mathrm, \\mathbf, etc., so use PUA\n\ndefineSymbol(math, main, mathord, \"\\ue131\", \"\\\\@imath\");\ndefineSymbol(math, main, mathord, \"\\ue237\", \"\\\\@jmath\");\ndefineSymbol(math, main, textord, \"\\u0131\", \"\\u0131\");\ndefineSymbol(math, main, textord, \"\\u0237\", \"\\u0237\");\ndefineSymbol(text$1, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text$1, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text$1, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text$1, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(text$1, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(text$1, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text$1, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(text$1, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(text$1, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(text$1, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(text$1, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(text$1, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(text$1, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(text$1, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(text$1, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(text$1, main, accent, \"\\u00a8\", '\\\\\"'); // diaresis\n\ndefineSymbol(text$1, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(text$1, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nvar ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"--\", true);\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"---\", true);\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"`\", true);\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"'\", true);\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"``\", true);\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"''\", true);\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Regular defines this character \"163\".\n\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, textord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text$1, main, textord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, ams, textord, \"\\u2720\", \"\\\\maltese\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nvar mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (var i = 0; i < mathTextSymbols.length; i++) {\n  var ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nvar textSymbols = \"0123456789!@*()-=+\\\";:?/.,\";\n\nfor (var _i = 0; _i < textSymbols.length; _i++) {\n  var _ch = textSymbols.charAt(_i);\n\n  defineSymbol(text$1, main, textord, _ch, _ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (var _i2 = 0; _i2 < letters.length; _i2++) {\n  var _ch2 = letters.charAt(_i2);\n\n  defineSymbol(math, main, mathord, _ch2, _ch2);\n  defineSymbol(text$1, main, textord, _ch2, _ch2);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(text$1, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(text$1, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(text$1, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(text$1, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(text$1, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(text$1, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(text$1, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(text$1, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nvar wideChar = \"\";\n\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n  var _ch3 = letters.charAt(_i3); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, _ch3, wideChar);\n  defineSymbol(text$1, main, textord, _ch3, wideChar);\n\n  if (_i3 < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text$1, main, textord, _ch3, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n\n    defineSymbol(math, main, mathord, _ch3, wideChar);\n    defineSymbol(text$1, main, textord, _ch3, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(text$1, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n  var _ch4 = _i4.toString();\n\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, _ch4, wideChar);\n  defineSymbol(text$1, main, textord, _ch4, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nvar extraLatin = \"\\u00c7\\u00d0\\u00de\\u00e7\\u00fe\";\n\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n  var _ch5 = extraLatin.charAt(_i5);\n\n  defineSymbol(math, main, mathord, _ch5, _ch5);\n  defineSymbol(text$1, main, textord, _ch5, _ch5);\n}\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathnormal\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // a-z monospace\n];\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"] // 0-9 monospace\n];\nvar wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  var H = wideChar.charCodeAt(0); // high surrogate\n\n  var L = wideChar.charCodeAt(1); // low surrogate\n\n  var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    var i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n\n    return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400–1D7FF.\n    throw new ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\nvar sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9] // size11: [24.88, 20.74, 17.28] \\HUGE\n];\nvar sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this.minRuleThickness = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this.minRuleThickness = data.minRuleThickness;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    var data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize,\n      minRuleThickness: this.minRuleThickness\n    };\n\n    for (var key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    var wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    var size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nvar ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nvar relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nvar calculateSize = function calculateSize(sizeValue, options) {\n  var scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    var unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n\n/* eslint no-console:0 */\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (symbols[mode][value] && symbols[mode][value].replace) {\n    value = symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nvar makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  var lookup = lookupSymbol(value, fontName, mode);\n  var metrics = lookup.metrics;\n  value = lookup.value;\n  var symbolNode;\n\n  if (metrics) {\n    var italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics \" + (\"for '\" + value + \"' in style '\" + fontName + \"' and mode '\" + mode + \"'\"));\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    var color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\n\n\nvar mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nvar boldsymbol = function boldsymbol(value, mode, options, classes, type) {\n  if (type !== \"textord\" && lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nvar makeOrd = function makeOrd(group, options, type) {\n  var mode = group.mode;\n  var text = group.text;\n  var classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  var isFont = mode === \"math\" || mode === \"text\" && options.font;\n  var fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    var [wideFontName, wideFontClass] = wideCharacterFont(text, mode);\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    var fontName;\n    var fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\") {\n      var fontData = boldsymbol(text, mode, options, classes, type);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      var parts = [];\n\n      for (var i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    return makeSymbol(text, \"Math-Italic\", mode, options, classes.concat([\"mathnormal\"]));\n  } else if (type === \"textord\") {\n    var font = symbols[mode][text] && symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n\n      return makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n\n      return makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nvar canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  } // If prev and next both are just \"mbin\"s or \"mord\"s we don't combine them\n  // so that the proper spacing can be preserved.\n\n\n  if (prev.classes.length === 1) {\n    var cls = prev.classes[0];\n\n    if (cls === \"mbin\" || cls === \"mord\") {\n      return false;\n    }\n  }\n\n  for (var style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (var _style in next.style) {\n    if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consecutive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nvar tryCombineChars = chars => {\n  for (var i = 0; i < chars.length - 1; i++) {\n    var prev = chars[i];\n    var next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  var height = 0;\n  var depth = 0;\n  var maxFontSize = 0;\n\n  for (var i = 0; i < elem.children.length; i++) {\n    var child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nvar makeSpan = function makeSpan(classes, children, options, style) {\n  var span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nvar makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n  var line = makeSpan([className], [], options);\n  line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nvar makeAnchor = function makeAnchor(href, classes, children, options) {\n  var anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nvar makeFragment = function makeFragment(children) {\n  var fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nvar wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    var oldChildren = params.children;\n    var children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n\n    var currPos = _depth;\n\n    for (var i = 1; i < oldChildren.length; i++) {\n      var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth: _depth\n    };\n  }\n\n  var depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    var bottom = params.positionData;\n\n    for (var _i = 0; _i < params.children.length; _i++) {\n      var child = params.children[_i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    var firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nvar makeVList = function makeVList(params, options) {\n  var {\n    children,\n    depth\n  } = getVListChildrenAndDepth(params); // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n  var pstrutSize = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n\n    if (child.type === \"elem\") {\n      var elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  var pstrut = makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  var realChildren = [];\n  var minPos = depth;\n  var maxPos = depth;\n  var currPos = depth;\n\n  for (var _i2 = 0; _i2 < children.length; _i2++) {\n    var _child = children[_i2];\n\n    if (_child.type === \"kern\") {\n      currPos += _child.size;\n    } else {\n      var _elem = _child.elem;\n      var classes = _child.wrapperClasses || [];\n      var style = _child.wrapperStyle || {};\n      var childWrap = makeSpan(classes, [pstrut, _elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - _elem.depth + \"em\";\n\n      if (_child.marginLeft) {\n        childWrap.style.marginLeft = _child.marginLeft;\n      }\n\n      if (_child.marginRight) {\n        childWrap.style.marginRight = _child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += _elem.height + _elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  var vlist = makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  var rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    var emptySpan = makeSpan([], []);\n    var depthStrut = makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    var topStrut = makeSpan([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  var vtable = makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nvar makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  var rule = makeSpan([\"mspace\"], [], options);\n  var size = calculateSize(measurement, options);\n  rule.style.marginRight = size + \"em\";\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  var baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  var fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return baseFontName + \"-\" + fontStylesName;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nvar fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathnormal\": {\n    variant: \"italic\",\n    fontName: \"Math-Italic\"\n  },\n  // \"boldsymbol\" is missing because they require the use of multiple fonts:\n  // Math-BoldItalic and Main-Bold.  This is handled by a special case in\n  // makeOrd which ends up calling boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nvar svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  var [pathName, width, height] = svgData[value];\n  var path = new PathNode(pathName);\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\nvar buildCommon = {\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n};\n\n/**\n * Describes spaces between different classes of atoms.\n */\nvar thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nvar mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nvar thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nvar spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nvar tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n\n/** Context provided to function handlers for error messages. */\n// Note: reverse the order of the return type union will cause a flow error.\n// See https://github.com/facebook/flow/issues/3663.\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nvar _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of functions\n  var data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    allowedInArgument: !!props.allowedInArgument,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    primitive: !!props.primitive,\n    handler: handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  var {\n    type,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref2;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n}\nvar normalizeArgument = function normalizeArgument(arg) {\n  return arg.type === \"ordgroup\" && arg.body.length === 1 ? arg.body[0] : arg;\n}; // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nvar ordargument = function ordargument(arg) {\n  return arg.type === \"ordgroup\" ? arg.body : [arg];\n};\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\nvar makeSpan$1 = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nvar binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nvar binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nvar styleMap = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\nvar DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  var groups = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    var output = buildGroup(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      var children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // Combine consecutive domTree.symbolNodes into a single symbolNode.\n\n\n  buildCommon.tryCombineChars(groups); // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  var glueOptions = options;\n\n  if (expression.length === 1) {\n    var node = expression[0];\n\n    if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  var dummyPrev = makeSpan$1([surrounding[0] || \"leftmost\"], [], options);\n  var dummyNext = makeSpan$1([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  var isRoot = isRealGroup === \"root\";\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = prev.classes[0];\n    var type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    var prevType = getTypeOfDomTree(prev);\n    var type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    var space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext, isRoot);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nvar traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next, isRoot) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  var i = 0;\n\n  for (; i < nodes.length; i++) {\n    var node = nodes[i];\n    var partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      // $FlowFixMe: make nodes a $ReadOnlyArray by returning a new array\n      traverseNonSpaceNodes(partialGroup.children, callback, prev, null, isRoot);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    var nonspace = !node.hasClass(\"mspace\");\n\n    if (nonspace) {\n      var result = callback(node, prev.node);\n\n      if (result) {\n        if (prev.insertAfter) {\n          prev.insertAfter(result);\n        } else {\n          // insert at front\n          nodes.unshift(result);\n          i++;\n        }\n      }\n    }\n\n    if (nonspace) {\n      prev.node = node;\n    } else if (isRoot && node.hasClass(\"newline\")) {\n      prev.node = makeSpan$1([\"leftmost\"]); // treat like beginning of line\n    }\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nvar checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor || node instanceof Span && node.hasClass(\"enclosing\")) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nvar getOutermostNode = function getOutermostNode(node, side) {\n  var partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    var children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return makeSpan$1(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nvar buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return makeSpan$1();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);\n      var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  var body = makeSpan$1([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n\n  var strut = makeSpan$1([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  var tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  var expression = buildExpression(tree, options, \"root\");\n  var eqnNum;\n\n  if (expression.length === 2 && expression[1].hasClass(\"tag\")) {\n    // An environment with automatic equation numbers, e.g. {gather}.\n    eqnNum = expression.pop();\n  }\n\n  var children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  var parts = [];\n\n  for (var i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      var nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  var tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  } else if (eqnNum) {\n    children.push(eqnNum);\n  }\n\n  var htmlNode = makeSpan$1([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    var strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children, classes) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.classes = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n    this.classes = classes || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    if (this.classes.length > 0) {\n      node.className = createClass(this.classes);\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    var markup = \"<\" + this.type; // Add the attributes\n\n    for (var attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    if (this.classes.length > 0) {\n      markup += \" class =\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return \"<mtext>\" + this.character + \"</mtext>\";\n    } else {\n      return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n};\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function makeText(text, mode, options) {\n  if (symbols[mode][text] && symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nvar makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nvar getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  var font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  var mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return group.type === \"textord\" ? \"bold\" : \"bold-italic\";\n  } else if (font === \"mathbf\") {\n    return \"bold\";\n  } else if (font === \"mathbb\") {\n    return \"double-struck\";\n  } else if (font === \"mathfrak\") {\n    return \"fraktur\";\n  } else if (font === \"mathscr\" || font === \"mathcal\") {\n    // MathML makes no distinction between script and caligrahpic\n    return \"script\";\n  } else if (font === \"mathsf\") {\n    return \"sans-serif\";\n  } else if (font === \"mathtt\") {\n    return \"monospace\";\n  }\n\n  var text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  var fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nvar buildExpression$1 = function buildExpression(expression, options, isOrdgroup) {\n  if (expression.length === 1) {\n    var group = buildGroup$1(expression[0], options);\n\n    if (isOrdgroup && group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n\n    return [group];\n  }\n\n  var groups = [];\n  var lastGroup;\n\n  for (var i = 0; i < expression.length; i++) {\n    var _group = buildGroup$1(expression[i], options);\n\n    if (_group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (_group.type === 'mtext' && lastGroup.type === 'mtext' && _group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (_group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(..._group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (_group.type === 'mi' && _group.children.length === 1 && lastGroup.type === 'mn') {\n        var child = _group.children[0];\n\n        if (child instanceof TextNode && child.text === '.') {\n          lastGroup.children.push(..._group.children);\n          continue;\n        }\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        var lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (_group.type === 'mo' || _group.type === 'mi' || _group.type === 'mn')) {\n          var _child = _group.children[0];\n\n          if (_child instanceof TextNode && _child.text.length > 0) {\n            // Overlay with combining character long solidus\n            _child.text = _child.text.slice(0, 1) + \"\\u0338\" + _child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(_group);\n    lastGroup = _group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nvar buildExpressionRow = function buildExpressionRow(expression, options, isOrdgroup) {\n  return makeRow(buildExpression$1(expression, options, isOrdgroup));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nvar buildGroup$1 = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    // $FlowFixMe\n    var result = _mathmlGroupBuilders[group.type](group, options); // $FlowFixMe\n\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options, isDisplayMode, forMathmlOnly) {\n  var expression = buildExpression$1(tree, options); // TODO: Make a pass thru the MathML similar to buildHTML.traverseNonSpaceNodes\n  // and add spacing nodes. This is necessary only adjacent to math operators\n  // like \\sin or \\lim or to subsup elements that contain math operators.\n  // MathML takes care of the other spacing issues.\n  // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  var wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  var math = new mathMLTree.MathNode(\"math\", [semantics]);\n  math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\");\n\n  if (isDisplayMode) {\n    math.setAttribute(\"display\", \"block\");\n  } // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n\n\n  var wrapperClass = forMathmlOnly ? \"katex\" : \"katex-mathml\"; // $FlowFixMe\n\n  return buildCommon.makeSpan([wrapperClass], [math]);\n}\n\nvar optionsFromSettings = function optionsFromSettings(settings) {\n  return new Options({\n    style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,\n    maxSize: settings.maxSize,\n    minRuleThickness: settings.minRuleThickness\n  });\n};\n\nvar displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    var classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nvar buildTree = function buildTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var katexNode;\n\n  if (settings.output === \"mathml\") {\n    return buildMathML(tree, expression, options, settings.displayMode, true);\n  } else if (settings.output === \"html\") {\n    var htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  } else {\n    var mathMLNode = buildMathML(tree, expression, options, settings.displayMode, false);\n\n    var _htmlNode = buildHTML(tree, options);\n\n    katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, _htmlNode]);\n  }\n\n  return displayWrap(katexNode, settings);\n};\nvar buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  var options = optionsFromSettings(settings);\n  var htmlNode = buildHTML(tree, options);\n  var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\nvar stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"ˇ\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\",\n  // None better available.\n  \"\\\\cdrightarrow\": \"\\u2192\",\n  \"\\\\cdleftarrow\": \"\\u2190\",\n  \"\\\\cdlongequal\": \"=\"\n};\n\nvar mathMLnode = function mathMLnode(label) {\n  var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.replace(/^\\\\/, '')])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nvar katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  \"\\\\cdrightarrow\": [[\"rightarrow\"], 3.0, 522, \"xMaxYMin\"],\n  // CD minwwidth2.5pc\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  \"\\\\cdleftarrow\": [[\"leftarrow\"], 3.0, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  \"\\\\cdlongequal\": [[\"longequal\"], 3.0, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nvar svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    var viewBoxWidth = 400000; // default\n\n    var label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      // $FlowFixMe\n      var grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      var numChars = groupLength(grp.base);\n      var viewBoxHeight;\n      var pathName;\n\n      var _height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          _height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          _height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      var path = new PathNode(pathName);\n      var svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": _height + \"em\",\n        \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height: _height\n      };\n    } else {\n      var spans = [];\n      var data = katexImagesData[label];\n      var [paths, _minWidth, _viewBoxHeight] = data;\n\n      var _height2 = _viewBoxHeight / 1000;\n\n      var numSvgChildren = paths.length;\n      var widthClasses;\n      var aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        var align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n      }\n\n      for (var i = 0; i < numSvgChildren; i++) {\n        var _path = new PathNode(paths[i]);\n\n        var _svgNode = new SvgNode([_path], {\n          \"width\": \"400em\",\n          \"height\": _height2 + \"em\",\n          \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n\n        var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span: _span,\n            minWidth: _minWidth,\n            height: _height2\n          };\n        } else {\n          _span.style.height = _height2 + \"em\";\n          spans.push(_span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth: _minWidth,\n        height: _height2\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  var {\n    span,\n    minWidth,\n    height\n  } = buildSvgSpan_(); // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nvar encloseSpan = function encloseSpan(inner, label, topPad, bottomPad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, \\fbox, or \\angl\n  var img;\n  var totalHeight = inner.height + inner.depth + topPad + bottomPad;\n\n  if (/fbox|color|angl/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      var color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    var lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    var svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\nvar stretchy = {\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n};\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  if (!node || node.type !== type) {\n    throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n  } // $FlowFixMe, >=0.125\n\n\n  return node;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  var typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nvar htmlBuilder = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  var base;\n  var group;\n  var supSubGroup;\n\n  if (grp && grp.type === \"supsub\") {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(grp.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    grp.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup(grp, options)); // reset original base\n\n    grp.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  var body = buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  var mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  var skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    var baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    var baseGroup = buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  var clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  var accentBody;\n\n  if (!group.isStretchy) {\n    var accent;\n    var width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeOrd({\n        mode: group.mode,\n        text: group.label\n      }, options, \"textord\");\n      accent = assertSymbolDomNode(accent); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    var accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    var left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: \"calc(100% - \" + 2 * skew + \"em)\",\n          marginLeft: 2 * skew + \"em\"\n        } : undefined\n      }]\n    }, options);\n  }\n\n  var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nvar mathmlBuilder = (group, options) => {\n  var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  var node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => \"\\\\\" + accent).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    var base = normalizeArgument(args[0]);\n    var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: true,\n    // unless in strict mode\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var base = args[0];\n    var mode = context.parser.mode;\n\n    if (mode === \"math\") {\n      context.parser.settings.reportNonstrict(\"mathVsTextAccents\", \"LaTeX's accent \" + context.funcName + \" works only in text mode\");\n      mode = \"text\";\n    }\n\n    return {\n      type: \"accent\",\n      mode: mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    var innerGroup = buildGroup(group.base, options);\n    var accentBody = stretchy.svgSpan(group, options);\n    var kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var accentNode = stretchy.mathMLnode(group.label);\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n\n// Helper function\nvar paddedNode = group => {\n  var node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\", // The next 3 functions are here only to support the {CD} environment.\n  \"\\\\\\\\cdrightarrow\", \"\\\\\\\\cdleftarrow\", \"\\\\\\\\cdlongequal\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    var style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildCommon.wrapFragment(buildGroup(group.body, newOptions, options), options);\n    var arrowPrefix = group.label.slice(0, 2) === \"\\\\x\" ? \"x\" : \"cd\";\n    upperGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    var lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(arrowPrefix + \"-arrow-pad\");\n    }\n\n    var arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    var vlist;\n\n    if (lowerGroup) {\n      var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var arrowNode = stretchy.mathMLnode(group.label);\n    arrowNode.setAttribute(\"minsize\", group.label.charAt(0) === \"x\" ? \"1.75em\" : \"3.0em\");\n    var node;\n\n    if (group.body) {\n      var upperNode = paddedNode(buildGroup$1(group.body, options));\n\n      if (group.below) {\n        var lowerNode = paddedNode(buildGroup$1(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      var _lowerNode = paddedNode(buildGroup$1(group.below, options));\n\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, _lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n\nvar cdArrowFunctionName = {\n  \">\": \"\\\\\\\\cdrightarrow\",\n  \"<\": \"\\\\\\\\cdleftarrow\",\n  \"=\": \"\\\\\\\\cdlongequal\",\n  \"A\": \"\\\\uparrow\",\n  \"V\": \"\\\\downarrow\",\n  \"|\": \"\\\\Vert\",\n  \".\": \"no arrow\"\n};\n\nvar newCell = () => {\n  // Create an empty cell, to be filled below with parse nodes.\n  // The parseTree from this module must be constructed like the\n  // one created by parseArray(), so an empty CD cell must\n  // be a ParseNode<\"styling\">. And CD is always displaystyle.\n  // So these values are fixed and flow can do implicit typing.\n  return {\n    type: \"styling\",\n    body: [],\n    mode: \"math\",\n    style: \"display\"\n  };\n};\n\nvar isStartOfArrow = node => {\n  return node.type === \"textord\" && node.text === \"@\";\n};\n\nvar isLabelEnd = (node, endChar) => {\n  return (node.type === \"mathord\" || node.type === \"atom\") && node.text === endChar;\n};\n\nfunction cdArrow(arrowChar, labels, parser) {\n  // Return a parse tree of an arrow and its labels.\n  // This acts in a way similar to a macro expansion.\n  var funcName = cdArrowFunctionName[arrowChar];\n\n  switch (funcName) {\n    case \"\\\\\\\\cdrightarrow\":\n    case \"\\\\\\\\cdleftarrow\":\n      return parser.callFunction(funcName, [labels[0]], [labels[1]]);\n\n    case \"\\\\uparrow\":\n    case \"\\\\downarrow\":\n      {\n        var leftLabel = parser.callFunction(\"\\\\\\\\cdleft\", [labels[0]], []);\n        var bareArrow = {\n          type: \"atom\",\n          text: funcName,\n          mode: \"math\",\n          family: \"rel\"\n        };\n        var sizedArrow = parser.callFunction(\"\\\\Big\", [bareArrow], []);\n        var rightLabel = parser.callFunction(\"\\\\\\\\cdright\", [labels[1]], []);\n        var arrowGroup = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: [leftLabel, sizedArrow, rightLabel]\n        };\n        return parser.callFunction(\"\\\\\\\\cdparent\", [arrowGroup], []);\n      }\n\n    case \"\\\\\\\\cdlongequal\":\n      return parser.callFunction(\"\\\\\\\\cdlongequal\", [], []);\n\n    case \"\\\\Vert\":\n      {\n        var arrow = {\n          type: \"textord\",\n          text: \"\\\\Vert\",\n          mode: \"math\"\n        };\n        return parser.callFunction(\"\\\\Big\", [arrow], []);\n      }\n\n    default:\n      return {\n        type: \"textord\",\n        text: \" \",\n        mode: \"math\"\n      };\n  }\n}\n\nfunction parseCD(parser) {\n  // Get the array's parse nodes with \\\\ temporarily mapped to \\cr.\n  var parsedRows = [];\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  parser.gullet.beginGroup();\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Get the parse nodes for the next row.\n    parsedRows.push(parser.parseExpression(false, \"\\\\\\\\\"));\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    var next = parser.fetch().text;\n\n    if (next === \"&\" || next === \"\\\\\\\\\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      if (parsedRows[parsedRows.length - 1].length === 0) {\n        parsedRows.pop(); // final row ended in \\\\\n      }\n\n      break;\n    } else {\n      throw new ParseError(\"Expected \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  }\n\n  var row = [];\n  var body = [row]; // Loop thru the parse nodes. Collect them into cells and arrows.\n\n  for (var i = 0; i < parsedRows.length; i++) {\n    // Start a new row.\n    var rowNodes = parsedRows[i]; // Create the first cell.\n\n    var cell = newCell();\n\n    for (var j = 0; j < rowNodes.length; j++) {\n      if (!isStartOfArrow(rowNodes[j])) {\n        // If a parseNode is not an arrow, it goes into a cell.\n        cell.body.push(rowNodes[j]);\n      } else {\n        // Parse node j is an \"@\", the start of an arrow.\n        // Before starting on the arrow, push the cell into `row`.\n        row.push(cell); // Now collect parseNodes into an arrow.\n        // The character after \"@\" defines the arrow type.\n\n        j += 1;\n        var arrowChar = assertSymbolNodeType(rowNodes[j]).text; // Create two empty label nodes. We may or may not use them.\n\n        var labels = new Array(2);\n        labels[0] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        };\n        labels[1] = {\n          type: \"ordgroup\",\n          mode: \"math\",\n          body: []\n        }; // Process the arrow.\n\n        if (\"=|.\".indexOf(arrowChar) > -1) ; else if (\"<>AV\".indexOf(arrowChar) > -1) {\n          // Four arrows, `@>>>`, `@<<<`, `@AAA`, and `@VVV`, each take\n          // two optional labels. E.g. the right-point arrow syntax is\n          // really:  @>{optional label}>{optional label}>\n          // Collect parseNodes into labels.\n          for (var labelNum = 0; labelNum < 2; labelNum++) {\n            var inLabel = true;\n\n            for (var k = j + 1; k < rowNodes.length; k++) {\n              if (isLabelEnd(rowNodes[k], arrowChar)) {\n                inLabel = false;\n                j = k;\n                break;\n              }\n\n              if (isStartOfArrow(rowNodes[k])) {\n                throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[k]);\n              }\n\n              labels[labelNum].body.push(rowNodes[k]);\n            }\n\n            if (inLabel) {\n              // isLabelEnd never returned a true.\n              throw new ParseError(\"Missing a \" + arrowChar + \" character to complete a CD arrow.\", rowNodes[j]);\n            }\n          }\n        } else {\n          throw new ParseError(\"Expected one of \\\"<>AV=|.\\\" after @\", rowNodes[j]);\n        } // Now join the arrow to its labels.\n\n\n        var arrow = cdArrow(arrowChar, labels, parser); // Wrap the arrow in  ParseNode<\"styling\">.\n        // This is done to match parseArray() behavior.\n\n        var wrappedArrow = {\n          type: \"styling\",\n          body: [arrow],\n          mode: \"math\",\n          style: \"display\" // CD is always displaystyle.\n\n        };\n        row.push(wrappedArrow); // In CD's syntax, cells are implicit. That is, everything that\n        // is not an arrow gets collected into a cell. So create an empty\n        // cell now. It will collect upcoming parseNodes.\n\n        cell = newCell();\n      }\n    }\n\n    if (i % 2 === 0) {\n      // Even-numbered rows consist of: cell, arrow, cell, arrow, ... cell\n      // The last cell is not yet pushed into `row`, so:\n      row.push(cell);\n    } else {\n      // Odd-numbered rows consist of: vert arrow, empty cell, ... vert arrow\n      // Remove the empty cell that was placed at the beginning of `row`.\n      row.shift();\n    }\n\n    row = [];\n    body.push(row);\n  } // End row group\n\n\n  parser.gullet.endGroup(); // End array group defining \\\\\n\n  parser.gullet.endGroup(); // define column separation.\n\n  var cols = new Array(body[0].length).fill({\n    type: \"align\",\n    align: \"c\",\n    pregap: 0.25,\n    // CD package sets \\enskip between columns.\n    postgap: 0.25 // So pre and post each get half an \\enskip, i.e. 0.25em.\n\n  });\n  return {\n    type: \"array\",\n    mode: \"math\",\n    body,\n    arraystretch: 1,\n    addJot: true,\n    rowGaps: [null],\n    cols,\n    colSeparationType: \"CD\",\n    hLinesBeforeRow: new Array(body.length + 1).fill([])\n  };\n} // The functions below are not available for general use.\n// They are here only for internal use by the {CD} environment in placing labels\n// next to vertical arrows.\n// We don't need any such functions for horizontal arrows because we can reuse\n// the functionality that already exists for extensible arrows.\n\ndefineFunction({\n  type: \"cdlabel\",\n  names: [\"\\\\\\\\cdleft\", \"\\\\\\\\cdright\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"cdlabel\",\n      mode: parser.mode,\n      side: funcName.slice(4),\n      label: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = options.havingStyle(options.style.sup());\n    var label = buildCommon.wrapFragment(buildGroup(group.label, newOptions, options), options);\n    label.classes.push(\"cd-label-\" + group.side);\n    label.style.bottom = 0.8 - label.depth + \"em\"; // Zero out label height & depth, so vertical align of arrow is set\n    // by the arrow height, not by the label.\n\n    label.height = 0;\n    label.depth = 0;\n    return label;\n  },\n\n  mathmlBuilder(group, options) {\n    var label = new mathMLTree.MathNode(\"mrow\", [buildGroup$1(group.label, options)]);\n    label = new mathMLTree.MathNode(\"mpadded\", [label]);\n    label.setAttribute(\"width\", \"0\");\n\n    if (group.side === \"left\") {\n      label.setAttribute(\"lspace\", \"-1width\");\n    } // We have to guess at vertical alignment. We know the arrow is 1.8em tall,\n    // But we don't know the height or depth of the label.\n\n\n    label.setAttribute(\"voffset\", \"0.7em\");\n    label = new mathMLTree.MathNode(\"mstyle\", [label]);\n    label.setAttribute(\"displaystyle\", \"false\");\n    label.setAttribute(\"scriptlevel\", \"1\");\n    return label;\n  }\n\n});\ndefineFunction({\n  type: \"cdlabelparent\",\n  names: [\"\\\\\\\\cdparent\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"cdlabelparent\",\n      mode: parser.mode,\n      fragment: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Wrap the vertical arrow and its labels.\n    // The parent gets position: relative. The child gets position: absolute.\n    // So CSS can locate the label correctly.\n    var parent = buildCommon.wrapFragment(buildGroup(group.fragment, options), options);\n    parent.classes.push(\"cd-vert-arrow\");\n    return parent;\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", [buildGroup$1(group.fragment, options)]);\n  }\n\n});\n\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var arg = assertNodeType(args[0], \"ordgroup\");\n    var group = arg.body;\n    var number = \"\";\n\n    for (var i = 0; i < group.length; i++) {\n      var node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    var code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new ParseError(\"\\\\@char has non-numeric argument \" + number);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n\n});\n\nvar htmlBuilder$1 = (group, options) => {\n  var elements = buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nvar mathmlBuilder$1 = (group, options) => {\n  var inner = buildExpression$1(group.body, options.withColor(group.color));\n  var node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser,\n      breakOnTokenText\n    } = _ref2;\n    var color = assertNodeType(args[0], \"color-token\").color; // Set macro \\current@color in current namespace to store the current\n    // color, mimicking the behavior of color.sty.\n    // This is currently used just to correctly color a \\right\n    // that follows a \\color command.\n\n    parser.gullet.macros.set(\"\\\\current@color\", color); // Parse out the implicit body that should be colored.\n\n    var body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\\\\\\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var size = optArgs[0];\n    var newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\");\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    var span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n\n});\n\nvar globalMap = {\n  \"\\\\global\": \"\\\\global\",\n  \"\\\\long\": \"\\\\\\\\globallong\",\n  \"\\\\\\\\globallong\": \"\\\\\\\\globallong\",\n  \"\\\\def\": \"\\\\gdef\",\n  \"\\\\gdef\": \"\\\\gdef\",\n  \"\\\\edef\": \"\\\\xdef\",\n  \"\\\\xdef\": \"\\\\xdef\",\n  \"\\\\let\": \"\\\\\\\\globallet\",\n  \"\\\\futurelet\": \"\\\\\\\\globalfuture\"\n};\n\nvar checkControlSequence = tok => {\n  var name = tok.text;\n\n  if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n    throw new ParseError(\"Expected a control sequence\", tok);\n  }\n\n  return name;\n};\n\nvar getRHS = parser => {\n  var tok = parser.gullet.popToken();\n\n  if (tok.text === \"=\") {\n    // consume optional equals\n    tok = parser.gullet.popToken();\n\n    if (tok.text === \" \") {\n      // consume one optional space\n      tok = parser.gullet.popToken();\n    }\n  }\n\n  return tok;\n};\n\nvar letCommand = (parser, name, tok, global) => {\n  var macro = parser.gullet.macros.get(tok.text);\n\n  if (macro == null) {\n    // don't expand it later even if a macro with the same name is defined\n    // e.g., \\let\\foo=\\frac \\def\\frac{\\relax} \\frac12\n    tok.noexpand = true;\n    macro = {\n      tokens: [tok],\n      numArgs: 0,\n      // reproduce the same behavior in expansion\n      unexpandable: !parser.gullet.isExpandable(tok.text)\n    };\n  }\n\n  parser.gullet.macros.set(name, macro, global);\n}; // <assignment> -> <non-macro assignment>|<macro assignment>\n// <non-macro assignment> -> <simple assignment>|\\global<non-macro assignment>\n// <macro assignment> -> <definition>|<prefix><macro assignment>\n// <prefix> -> \\global|\\long|\\outer\n\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\global\", \"\\\\long\", \"\\\\\\\\globallong\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    parser.consumeSpaces();\n    var token = parser.fetch();\n\n    if (globalMap[token.text]) {\n      // KaTeX doesn't have \\par, so ignore \\long\n      if (funcName === \"\\\\global\" || funcName === \"\\\\\\\\globallong\") {\n        token.text = globalMap[token.text];\n      }\n\n      return assertNodeType(parser.parseFunction(), \"internal\");\n    }\n\n    throw new ParseError(\"Invalid token after macro prefix\", token);\n  }\n\n}); // Basic support for macro definitions: \\def, \\gdef, \\edef, \\xdef\n// <definition> -> <def><control sequence><definition text>\n// <def> -> \\def|\\gdef|\\edef|\\xdef\n// <definition text> -> <parameter text><left brace><balanced text><right brace>\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\def\", \"\\\\gdef\", \"\\\\edef\", \"\\\\xdef\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref2) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var tok = parser.gullet.popToken();\n    var name = tok.text;\n\n    if (/^(?:[\\\\{}$&#^_]|EOF)$/.test(name)) {\n      throw new ParseError(\"Expected a control sequence\", tok);\n    }\n\n    var numArgs = 0;\n    var insert;\n    var delimiters = [[]]; // <parameter text> contains no braces\n\n    while (parser.gullet.future().text !== \"{\") {\n      tok = parser.gullet.popToken();\n\n      if (tok.text === \"#\") {\n        // If the very last character of the <parameter text> is #, so that\n        // this # is immediately followed by {, TeX will behave as if the {\n        // had been inserted at the right end of both the parameter text\n        // and the replacement text.\n        if (parser.gullet.future().text === \"{\") {\n          insert = parser.gullet.future();\n          delimiters[numArgs].push(\"{\");\n          break;\n        } // A parameter, the first appearance of # must be followed by 1,\n        // the next by 2, and so on; up to nine #’s are allowed\n\n\n        tok = parser.gullet.popToken();\n\n        if (!/^[1-9]$/.test(tok.text)) {\n          throw new ParseError(\"Invalid argument number \\\"\" + tok.text + \"\\\"\");\n        }\n\n        if (parseInt(tok.text) !== numArgs + 1) {\n          throw new ParseError(\"Argument number \\\"\" + tok.text + \"\\\" out of order\");\n        }\n\n        numArgs++;\n        delimiters.push([]);\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Expected a macro definition\");\n      } else {\n        delimiters[numArgs].push(tok.text);\n      }\n    } // replacement text, enclosed in '{' and '}' and properly nested\n\n\n    var {\n      tokens\n    } = parser.gullet.consumeArg();\n\n    if (insert) {\n      tokens.unshift(insert);\n    }\n\n    if (funcName === \"\\\\edef\" || funcName === \"\\\\xdef\") {\n      tokens = parser.gullet.expandTokens(tokens);\n      tokens.reverse(); // to fit in with stack order\n    } // Final arg is the expansion of the macro\n\n\n    parser.gullet.macros.set(name, {\n      tokens,\n      numArgs,\n      delimiters\n    }, funcName === globalMap[funcName]);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // <simple assignment> -> <let assignment>\n// <let assignment> -> \\futurelet<control sequence><token><token>\n//     | \\let<control sequence><equals><one optional space><token>\n// <equals> -> <optional spaces>|<optional spaces>=\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\let\", \"\\\\\\\\globallet\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var name = checkControlSequence(parser.gullet.popToken());\n    parser.gullet.consumeSpaces();\n    var tok = getRHS(parser);\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globallet\");\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n}); // ref: https://www.tug.org/TUGboat/tb09-3/tb22bechtolsheim.pdf\n\ndefineFunction({\n  type: \"internal\",\n  names: [\"\\\\futurelet\", \"\\\\\\\\globalfuture\" // can’t be entered directly\n  ],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var name = checkControlSequence(parser.gullet.popToken());\n    var middle = parser.gullet.popToken();\n    var tok = parser.gullet.popToken();\n    letCommand(parser, name, tok, funcName === \"\\\\\\\\globalfuture\");\n    parser.gullet.pushToken(tok);\n    parser.gullet.pushToken(middle);\n    return {\n      type: \"internal\",\n      mode: parser.mode\n    };\n  }\n\n});\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function getMetrics(symbol, font, mode) {\n  var replace = symbols.math[symbol] && symbols.math[symbol].replace;\n  var metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nvar styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  var newOptions = options.havingBaseStyle(toStyle);\n  var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n  var newOptions = options.havingBaseStyle(style);\n  var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nvar makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  var span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nvar mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nvar makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  var inner = mathrmSize(delim, size, mode, options);\n  var span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), Style$1.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, Style$1.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make a span from a font glyph with the given offset and in the given font.\n * This is used in makeStackedDelim to make the stacking pieces for the delimiter.\n */\n\n\nvar makeGlyphSpan = function makeGlyphSpan(symbol, font, mode) {\n  var sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  var corner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: corner\n  };\n};\n\nvar makeInner = function makeInner(ch, height, options) {\n  // Create a span with inline SVG for the inner part of a tall stacked delimiter.\n  var width = fontMetricsData['Size4-Regular'][ch.charCodeAt(0)] ? fontMetricsData['Size4-Regular'][ch.charCodeAt(0)][4].toFixed(3) : fontMetricsData['Size1-Regular'][ch.charCodeAt(0)][4].toFixed(3);\n  var path = new PathNode(\"inner\", innerPath(ch, Math.round(1000 * height)));\n  var svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + Math.round(1000 * height),\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  var span = buildCommon.makeSvgSpan([], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return {\n    type: \"elem\",\n    elem: span\n  };\n}; // Helpers for makeStackedDelim\n\n\nvar lapInEms = 0.008;\nvar lap = {\n  type: \"kern\",\n  size: -1 * lapInEms\n};\nvar verts = [\"|\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\vert\"];\nvar doubleVerts = [\"\\\\|\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\Vert\"];\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\nvar makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  var top;\n  var middle;\n  var repeat;\n  var bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  var font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (utils.contains(verts, delim)) {\n    repeat = \"\\u2223\";\n  } else if (utils.contains(doubleVerts, delim)) {\n    repeat = \"\\u2225\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  var topMetrics = getMetrics(top, font, mode);\n  var topHeightTotal = topMetrics.height + topMetrics.depth;\n  var repeatMetrics = getMetrics(repeat, font, mode);\n  var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  var bottomMetrics = getMetrics(bottom, font, mode);\n  var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  var middleHeightTotal = 0;\n  var middleFactor = 1;\n\n  if (middle !== null) {\n    var middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  var repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))); // Compute the total height of the delimiter including all the symbols\n\n  var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  var axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  var depth = realHeightTotal / 2 - axisHeight; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the pieces of the stacked delimiter\n\n  var stack = []; // Add the bottom symbol\n\n  stack.push(makeGlyphSpan(bottom, font, mode));\n  stack.push(lap); // overlap\n\n  if (middle === null) {\n    // The middle section will be an SVG. Make it an extra 0.016em tall.\n    // We'll overlap by 0.008em at top and bottom.\n    var innerHeight = realHeightTotal - topHeightTotal - bottomHeightTotal + 2 * lapInEms;\n    stack.push(makeInner(repeat, innerHeight, options));\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    var _innerHeight = (realHeightTotal - topHeightTotal - bottomHeightTotal - middleHeightTotal) / 2 + 2 * lapInEms;\n\n    stack.push(makeInner(repeat, _innerHeight, options)); // Now insert the middle of the brace.\n\n    stack.push(lap);\n    stack.push(makeGlyphSpan(middle, font, mode));\n    stack.push(lap);\n    stack.push(makeInner(repeat, _innerHeight, options));\n  } // Add the top symbol\n\n\n  stack.push(lap);\n  stack.push(makeGlyphSpan(top, font, mode)); // Finally, build the vlist\n\n  var newOptions = options.havingBaseStyle(Style$1.TEXT);\n  var inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: stack\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), Style$1.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, extraViniculum, options) {\n  var path = sqrtPath(sqrtName, extraViniculum, viewBoxHeight);\n  var pathNode = new PathNode(sqrtName, path);\n  var svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  var newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  var sizeMultiplier = newOptions.sizeMultiplier; // default\n  // The standard sqrt SVGs each have a 0.04em thick viniculum.\n  // If Settings.minRuleThickness is larger than that, we add extraViniculum.\n\n  var extraViniculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness); // Create a span containing an SVG image of a sqrt symbol.\n\n  var span;\n  var spanHeight = 0;\n  var texHeight = 0;\n  var viewBoxHeight = 0;\n  var advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    // 1000 unit normal glyph height.\n    viewBoxHeight = 1000 + 1000 * extraViniculum + vbPad;\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + extraViniculum + emPad) / sizeMultiplier;\n    texHeight = (1.00 + extraViniculum) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = (sizeToMaxHeight[delim.size] + extraViniculum) / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + extraViniculum + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + extraViniculum + emPad;\n    texHeight = height + extraViniculum;\n    viewBoxHeight = Math.floor(1000 * height + extraViniculum) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraViniculum) * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nvar stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nvar makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nvar stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nvar stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nvar delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  var start = Math.min(2, 3 - options.style.size);\n\n  for (var i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    var metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    var heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      var newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nvar makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  var sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  var delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  var delimiterFactor = 901;\n  var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  var totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nvar delimiter = {\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  sizeToMaxHeight: sizeToMaxHeight,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n};\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nvar delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  var symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else if (symDelim) {\n    throw new ParseError(\"Invalid delimiter '\" + symDelim.text + \"' after '\" + context.funcName + \"'\", delim);\n  } else {\n    throw new ParseError(\"Invalid delimiter type '\" + delim.type + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"primitive\"]\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    var children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    node.setAttribute(\"stretchy\", \"true\");\n    node.setAttribute(\"minsize\", delimiter.sizeToMaxHeight[group.size] + \"em\");\n    node.setAttribute(\"maxsize\", delimiter.sizeToMaxHeight[group.size] + \"em\");\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    var color = context.parser.gullet.macros.get(\"\\\\current@color\");\n\n    if (color && typeof color !== \"string\") {\n      throw new ParseError(\"\\\\current@color set to non-string in \\\\right\");\n    }\n\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text,\n      color // undefined if not set via \\color\n\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n    var parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    var body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    var right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim,\n      rightColor: right.color\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    var inner = buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    var innerHeight = 0;\n    var innerDepth = 0;\n    var hadMiddle = false; // Calculate its height and depth\n\n    for (var i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    var leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (var _i = 1; _i < inner.length; _i++) {\n        var middleDelim = inner[_i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        var isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    var rightDelim; // Same for the right delimiter, but using color specified by \\color\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      var colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    var inner = buildExpression$1(group.body, options);\n\n    if (group.left !== \".\") {\n      var leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      var rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n\n      if (group.rightColor) {\n        rightNode.setAttribute(\"mathcolor\", group.rightColor);\n      }\n\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (context, args) => {\n    var delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      var isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will strech a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    var textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    var middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nvar htmlBuilder$2 = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox, \\phase\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  var inner = buildCommon.wrapFragment(buildGroup(group.body, options), options);\n  var label = group.label.substr(1);\n  var scale = options.sizeMultiplier;\n  var img;\n  var imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  var isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else if (label === \"phase\") {\n    // Set a couple of dimensions from the steinmetz package.\n    var lineWeight = calculateSize({\n      number: 0.6,\n      unit: \"pt\"\n    }, options);\n    var clearance = calculateSize({\n      number: 0.35,\n      unit: \"ex\"\n    }, options); // Prevent size changes like \\Huge from affecting line thickness\n\n    var newOptions = options.havingBaseSizing();\n    scale = scale / newOptions.sizeMultiplier;\n    var angleHeight = inner.height + inner.depth + lineWeight + clearance; // Reserve a left pad for the angle.\n\n    inner.style.paddingLeft = angleHeight / 2 + lineWeight + \"em\"; // Create an SVG\n\n    var viewBoxHeight = Math.floor(1000 * angleHeight * scale);\n    var path = phasePath(viewBoxHeight);\n    var svgNode = new SvgNode([new PathNode(\"phase\", path)], {\n      \"width\": \"400em\",\n      \"height\": viewBoxHeight / 1000 + \"em\",\n      \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n      \"preserveAspectRatio\": \"xMinYMin slice\"\n    }); // Wrap it in a span with overflow: hidden.\n\n    img = buildCommon.makeSvgSpan([\"hide-tail\"], [svgNode], options);\n    img.style.height = angleHeight + \"em\";\n    imgShift = inner.depth + lineWeight + clearance;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else if (label === \"angl\") {\n      inner.classes.push(\"anglpad\");\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    var topPad = 0;\n    var bottomPad = 0;\n    var ruleThickness = 0; // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      ruleThickness = Math.max(options.fontMetrics().fboxrule, // default\n      options.minRuleThickness // User override.\n      );\n      topPad = options.fontMetrics().fboxsep + (label === \"colorbox\" ? 0 : ruleThickness);\n      bottomPad = topPad;\n    } else if (label === \"angl\") {\n      ruleThickness = Math.max(options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n      topPad = 4 * ruleThickness; // gap = 3 × line, plus the line itself.\n\n      bottomPad = Math.max(0, 0.25 - inner.depth);\n    } else {\n      topPad = isSingleChar ? 0.2 : 0;\n      bottomPad = topPad;\n    }\n\n    img = stretchy.encloseSpan(inner, label, topPad, bottomPad, options);\n\n    if (/fbox|boxed|fcolorbox/.test(label)) {\n      img.style.borderStyle = \"solid\";\n      img.style.borderWidth = ruleThickness + \"em\";\n    } else if (label === \"angl\" && ruleThickness !== 0.049) {\n      img.style.borderTopWidth = ruleThickness + \"em\";\n      img.style.borderRightWidth = ruleThickness + \"em\";\n    }\n\n    imgShift = inner.depth + bottomPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  var vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    var classes = /cancel|phase/.test(label) ? [\"svg-align\"] : [];\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: classes\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nvar mathmlBuilder$2 = (group, options) => {\n  var fboxsep = 0;\n  var node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildGroup$1(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\phase\":\n      node.setAttribute(\"notation\", \"phasorangle\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\angl\":\n      node.setAttribute(\"notation\", \"actuarial\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;\n      node.setAttribute(\"width\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"height\", \"+\" + 2 * fboxsep + \"pt\");\n      node.setAttribute(\"lspace\", fboxsep + \"pt\"); //\n\n      node.setAttribute(\"voffset\", fboxsep + \"pt\");\n\n      if (group.label === \"\\\\fcolorbox\") {\n        var thk = Math.max(options.fontMetrics().fboxrule, // default\n        options.minRuleThickness // user override\n        );\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var color = assertNodeType(args[0], \"color-token\").color;\n    var body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var borderColor = assertNodeType(args[0], \"color-token\").color;\n    var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    var body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser\n    } = _ref3;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\phase\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    var body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\angl\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: false\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser\n    } = _ref5;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\angl\",\n      body: args[0]\n    };\n  }\n\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\nfunction defineEnvironment(_ref) {\n  var {\n    type,\n    names,\n    props,\n    handler,\n    htmlBuilder,\n    mathmlBuilder\n  } = _ref;\n  // Set default values of environments.\n  var data = {\n    type,\n    numArgs: props.numArgs || 0,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (var i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\n// Helper functions\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  var hlineInfo = [];\n  parser.consumeSpaces();\n  var nxt = parser.fetch().text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  return hlineInfo;\n}\n\nvar validateAmsEnvironmentContext = context => {\n  var settings = context.parser.settings;\n\n  if (!settings.displayMode) {\n    throw new ParseError(\"{\" + context.envName + \"} can be used only in\" + \" display mode.\");\n  }\n};\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  var {\n    hskipBeforeAndAfter,\n    addJot,\n    cols,\n    arraystretch,\n    colSeparationType,\n    addEqnNum,\n    singleRow,\n    emptySingleRow,\n    maxNumCols,\n    leqno\n  } = _ref;\n  parser.gullet.beginGroup();\n\n  if (!singleRow) {\n    // \\cr is equivalent to \\\\ without the optional size argument (see below)\n    // TODO: provide helpful error when \\cr is used outside array environment\n    parser.gullet.macros.set(\"\\\\cr\", \"\\\\\\\\\\\\relax\");\n  } // Get current arraystretch if it's not set by the environment\n\n\n  if (!arraystretch) {\n    var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n      }\n    }\n  } // Start group for first cell\n\n\n  parser.gullet.beginGroup();\n  var row = [];\n  var body = [row];\n  var rowGaps = [];\n  var hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Parse each cell in its own group (namespace)\n    var cell = parser.parseExpression(false, singleRow ? \"\\\\end\" : \"\\\\\\\\\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    var next = parser.fetch().text;\n\n    if (next === \"&\") {\n      if (maxNumCols && row.length === maxNumCols) {\n        if (singleRow || colSeparationType) {\n          // {equation} or {split}\n          throw new ParseError(\"Too many tab characters: &\", parser.nextToken);\n        } else {\n          // {array} environment\n          parser.settings.reportNonstrict(\"textEnv\", \"Too few columns \" + \"specified in the {array} column argument.\");\n        }\n      }\n\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.  However, AMS environments keep the\n      // empty row if it's the only one.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0 && (body.length > 1 || !emptySingleRow)) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\\\\\\") {\n      parser.consume();\n      var size = void 0; // \\def\\Let@{\\let\\\\\\math@cr}\n      // \\def\\math@cr{...\\math@cr@}\n      // \\def\\math@cr@{\\new@ifnextchar[\\math@cr@@{\\math@cr@@[\\z@]}}\n      // \\def\\math@cr@@[#1]{...\\math@cr@@@...}\n      // \\def\\math@cr@@@{\\cr}\n\n      if (parser.gullet.future().text !== \" \") {\n        size = parser.parseSizeGroup(true);\n      }\n\n      rowGaps.push(size ? size.value : null); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  } // End cell group\n\n\n  parser.gullet.endGroup(); // End array group defining \\cr\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType,\n    addEqnNum,\n    leqno\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nvar htmlBuilder$3 = function htmlBuilder(group, options) {\n  var r;\n  var c;\n  var nr = group.body.length;\n  var hLinesBeforeRow = group.hLinesBeforeRow;\n  var nc = 0;\n  var body = new Array(nr);\n  var hlines = [];\n  var ruleThickness = Math.max( // From LaTeX \\showthe\\arrayrulewidth. Equals 0.04 em.\n  options.fontMetrics().arrayRuleWidth, options.minRuleThickness // User override.\n  ); // Horizontal spacing\n\n  var pt = 1 / options.fontMetrics().ptPerEm;\n  var arraycolsep = 5 * pt; // default value, i.e. \\arraycolsep in article.cls\n\n  if (group.colSeparationType && group.colSeparationType === \"small\") {\n    // We're in a {smallmatrix}. Default column space is \\thickspace,\n    // i.e. 5/18em = 0.2778em, per amsmath.dtx for {smallmatrix}.\n    // But that needs adjustment because LaTeX applies \\scriptstyle to the\n    // entire array, including the colspace, but this function applies\n    // \\scriptstyle only inside each element.\n    var localMultiplier = options.havingStyle(Style$1.SCRIPT).sizeMultiplier;\n    arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);\n  } // Vertical spacing\n\n\n  var baselineskip = group.colSeparationType === \"CD\" ? calculateSize({\n    number: 3,\n    unit: \"ex\"\n  }, options) : 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  var jot = 3 * pt;\n  var arrayskip = group.arraystretch * baselineskip;\n  var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  var totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (var i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    var inrow = group.body[r];\n    var height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    var depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    var outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      var elt = buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    var rowGap = group.rowGaps[r];\n    var gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  var colDescriptions = group.cols || [];\n  var cols = [];\n  var colSep;\n  var colDescrNum;\n  var eqnNumSpans = [];\n\n  if (group.addEqnNum) {\n    // An environment with automatic equation numbers.\n    // Create node(s) that will trigger CSS counter increment.\n    for (r = 0; r < nr; ++r) {\n      var rw = body[r];\n      var shift = rw.pos - offset;\n      var eqnTag = buildCommon.makeSpan([\"eqn-num\"], [], options);\n      eqnTag.depth = rw.depth;\n      eqnTag.height = rw.height;\n      eqnNumSpans.push({\n        type: \"elem\",\n        elem: eqnTag,\n        shift\n      });\n    }\n  }\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    var colDescr = colDescriptions[colDescrNum] || {};\n    var firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\" || colDescr.separator === \":\") {\n        var lineType = colDescr.separator === \"|\" ? \"solid\" : \"dashed\";\n        var separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.borderRightWidth = ruleThickness + \"em\";\n        separator.style.borderRightStyle = lineType;\n        separator.style.margin = \"0 -\" + ruleThickness / 2 + \"em\";\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else {\n        throw new ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    var sepwidth = void 0;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    var col = [];\n\n    for (r = 0; r < nr; ++r) {\n      var row = body[r];\n      var elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      var _shift = row.pos - offset;\n\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: _shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    var line = buildCommon.makeLineSpan(\"hline\", options, ruleThickness);\n    var dashes = buildCommon.makeLineSpan(\"hdashline\", options, ruleThickness);\n    var vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      var hline = hlines.pop();\n      var lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  if (!group.addEqnNum) {\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n  } else {\n    var eqnNumCol = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: eqnNumSpans\n    }, options);\n    eqnNumCol = buildCommon.makeSpan([\"tag\"], [eqnNumCol], options);\n    return buildCommon.makeFragment([body, eqnNumCol]);\n  }\n};\n\nvar alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nvar mathmlBuilder$3 = function mathmlBuilder(group, options) {\n  var tbl = [];\n  var glue = new mathMLTree.MathNode(\"mtd\", [], [\"mtr-glue\"]);\n  var tag = new mathMLTree.MathNode(\"mtd\", [], [\"mml-eqn-num\"]);\n\n  for (var i = 0; i < group.body.length; i++) {\n    var rw = group.body[i];\n    var row = [];\n\n    for (var j = 0; j < rw.length; j++) {\n      row.push(new mathMLTree.MathNode(\"mtd\", [buildGroup$1(rw[j], options)]));\n    }\n\n    if (group.addEqnNum) {\n      row.unshift(glue);\n      row.push(glue);\n\n      if (group.leqno) {\n        row.unshift(tag);\n      } else {\n        row.push(tag);\n      }\n    }\n\n    tbl.push(new mathMLTree.MathNode(\"mtr\", row));\n  }\n\n  var table = new mathMLTree.MathNode(\"mtable\", tbl); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found emprically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hines.\n\n  var gap = group.arraystretch === 0.5 ? 0.1 // {smallmatrix}, {subarray}\n  : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", gap.toFixed(4) + \"em\"); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  var menclose = \"\";\n  var align = \"\";\n\n  if (group.cols && group.cols.length > 0) {\n    // Find column alignment, column spacing, and  vertical lines.\n    var cols = group.cols;\n    var columnLines = \"\";\n    var prevTypeWasAlign = false;\n    var iStart = 0;\n    var iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (var _i = iStart; _i < iEnd; _i++) {\n      if (cols[_i].type === \"align\") {\n        align += alignMap[cols[_i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[_i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[_i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    var _cols = group.cols || [];\n\n    var spacing = \"\";\n\n    for (var _i2 = 1; _i2 < _cols.length; _i2++) {\n      spacing += _i2 % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\" || group.colSeparationType === \"gather\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else if (group.colSeparationType === \"small\") {\n    table.setAttribute(\"columnspacing\", \"0.2778em\");\n  } else if (group.colSeparationType === \"CD\") {\n    table.setAttribute(\"columnspacing\", \"0.5em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  var rowLines = \"\";\n  var hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (var _i3 = 1; _i3 < hlines.length - 1; _i3++) {\n    rowLines += hlines[_i3].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[_i3][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose !== \"\") {\n    table = new mathMLTree.MathNode(\"menclose\", [table]);\n    table.setAttribute(\"notation\", menclose.trim());\n  }\n\n  if (group.arraystretch && group.arraystretch < 1) {\n    // A small array. Wrap in scriptstyle so row gap is not too large.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table;\n}; // Convenience function for align, align*, aligned, alignat, alignat*, alignedat.\n\n\nvar alignedHandler = function alignedHandler(context, args) {\n  if (context.envName.indexOf(\"ed\") === -1) {\n    validateAmsEnvironmentContext(context);\n  }\n\n  var cols = [];\n  var separationType = context.envName.indexOf(\"at\") > -1 ? \"alignat\" : \"align\";\n  var res = parseArray(context.parser, {\n    cols,\n    addJot: true,\n    addEqnNum: context.envName === \"align\" || context.envName === \"alignat\",\n    emptySingleRow: true,\n    colSeparationType: separationType,\n    maxNumCols: context.envName === \"split\" ? 2 : undefined,\n    leqno: context.parser.settings.leqno\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  var numMaths;\n  var numCols = 0;\n  var emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n\n  if (args[0] && args[0].type === \"ordgroup\") {\n    var arg0 = \"\";\n\n    for (var i = 0; i < args[0].body.length; i++) {\n      var textord = assertNodeType(args[0].body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  var isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (var _i4 = 1; _i4 < row.length; _i4 += 2) {\n      // Modify ordgroup node within styling node\n      var styling = assertNodeType(row[_i4], \"styling\");\n      var ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      var curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (var _i5 = 0; _i5 < numCols; ++_i5) {\n    var align = \"r\";\n    var pregap = 0;\n\n    if (_i5 % 2 === 1) {\n      align = \"l\";\n    } else if (_i5 > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[_i5] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    var res = {\n      cols,\n      hskipBeforeAndAfter: true,\n      // \\@preamble in lttab.dtx\n      maxNumCols: cols.length\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n// The mathtools package adds starred versions of the same environments.\n// These have an optional argument to choose left|center|right justification.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\", \"matrix*\", \"pmatrix*\", \"bmatrix*\", \"Bmatrix*\", \"vmatrix*\", \"Vmatrix*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName.replace(\"*\", \"\")]; // \\hskip -\\arraycolsep in amsmath\n\n    var colAlign = \"c\";\n    var payload = {\n      hskipBeforeAndAfter: false,\n      cols: [{\n        type: \"align\",\n        align: colAlign\n      }]\n    };\n\n    if (context.envName.charAt(context.envName.length - 1) === \"*\") {\n      // It's one of the mathtools starred functions.\n      // Parse the optional alignment argument.\n      var parser = context.parser;\n      parser.consumeSpaces();\n\n      if (parser.fetch().text === \"[\") {\n        parser.consume();\n        parser.consumeSpaces();\n        colAlign = parser.fetch().text;\n\n        if (\"lcr\".indexOf(colAlign) === -1) {\n          throw new ParseError(\"Expected l or c or r\", parser.nextToken);\n        }\n\n        parser.consume();\n        parser.consumeSpaces();\n        parser.expect(\"]\");\n        parser.consume();\n        payload.cols = [{\n          type: \"align\",\n          align: colAlign\n        }];\n      }\n    }\n\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName)); // Populate cols with the correct number of column alignment specs.\n\n    var numCols = Math.max(0, ...res.body.map(row => row.length));\n    res.cols = new Array(numCols).fill({\n      type: \"align\",\n      align: colAlign\n    });\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1],\n      rightColor: undefined // \\right uninfluenced by \\color in array\n\n    } : res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 0.5\n    };\n    var res = parseArray(context.parser, payload, \"script\");\n    res.colSeparationType = \"small\";\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    var symNode = checkSymbolNodeType(args[0]);\n    var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    var cols = colalign.map(function (nde) {\n      var node = assertSymbolNodeType(nde);\n      var ca = node.text; // {subarray} only recognizes \"l\" & \"c\"\n\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n\n    if (cols.length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    var res = {\n      cols,\n      hskipBeforeAndAfter: false,\n      arraystretch: 0.5\n    };\n    res = parseArray(context.parser, res, \"script\");\n\n    if (res.body.length > 0 && res.body[0].length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n// {rcases} is another mathtools environment. It's brace is on the right side.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\", \"rcases\", \"drcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    var payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: context.envName.indexOf(\"r\") > -1 ? \".\" : \"\\\\{\",\n      right: context.envName.indexOf(\"r\") > -1 ? \"\\\\}\" : \".\",\n      rightColor: undefined\n    };\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // In the align environment, one uses ampersands, &, to specify number of\n// columns in each row, and to locate spacing between each column.\n// align gets automatic numbering. align* and aligned do not.\n// The alignedat environment can be used in math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"align\", \"align*\", \"aligned\", \"split\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\", \"gather\", \"gather*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    if (utils.contains([\"gather\", \"gather*\"], context.envName)) {\n      validateAmsEnvironmentContext(context);\n    }\n\n    var res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true,\n      colSeparationType: \"gather\",\n      addEqnNum: context.envName === \"gather\",\n      emptySingleRow: true,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignat\", \"alignat*\", \"alignedat\"],\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"equation\", \"equation*\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    var res = {\n      addEqnNum: context.envName === \"equation\",\n      emptySingleRow: true,\n      singleRow: true,\n      maxNumCols: 1,\n      leqno: context.parser.settings.leqno\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"CD\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    validateAmsEnvironmentContext(context);\n    return parseCD(context.parser);\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new ParseError(context.funcName + \" valid only within array environment\");\n  }\n\n});\n\nvar environments = _environments;\n\n// defineEnvironment definitions.\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    var envName = \"\";\n\n    for (var i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!environments.hasOwnProperty(envName)) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      var env = environments[envName];\n      var {\n        args: _args,\n        optArgs\n      } = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n      var context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      var result = env.handler(context, _args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      var endNameToken = parser.nextToken;\n      var end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n      } // $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n\nvar makeSpan$2 = buildCommon.makeSpan;\n\nfunction htmlBuilder$4(group, options) {\n  var elements = buildExpression(group.body, options, true);\n  return makeSpan$2([group.mclass], elements, options);\n}\n\nfunction mathmlBuilder$4(group, options) {\n  var node;\n  var inner = buildExpression$1(group.body, options);\n\n  if (group.mclass === \"minner\") {\n    return mathMLTree.newDocumentFragment(inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mi\";\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mo\";\n    } else {\n      node = new mathMLTree.MathNode(\"mo\", inner);\n    } // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n\n\n    if (group.mclass === \"mbin\") {\n      node.attributes.lspace = \"0.22em\"; // medium space\n\n      node.attributes.rspace = \"0.22em\";\n    } else if (group.mclass === \"mpunct\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0.17em\"; // thinspace\n    } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0em\";\n    } // MathML <mo> default space is 5/18 em, so <mrel> needs no action.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo\n\n  }\n\n  return node;\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      // TODO(kevinb): don't prefix with 'm'\n      body: ordargument(body),\n      isCharacterBox: utils.isCharacterBox(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\nvar binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    var {\n      parser\n    } = _ref2;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: ordargument(args[1]),\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    var baseArg = args[1];\n    var shiftedArg = args[0];\n    var mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    var baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    var supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub],\n      isCharacterBox: utils.isCharacterBox(supsub)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\nvar htmlBuilder$5 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nvar mathmlBuilder$5 = (group, options) => {\n  var font = group.font;\n  var newOptions = options.withFont(font);\n  return buildGroup$1(group.body, newOptions);\n};\n\nvar fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = normalizeArgument(args[0]);\n    var func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    var isCharacterBox = utils.isCharacterBox(body); // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }],\n      isCharacterBox: isCharacterBox\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\", \"\\\\cal\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser,\n      funcName,\n      breakOnTokenText\n    } = _ref3;\n    var {\n      mode\n    } = parser;\n    var body = parser.parseExpression(true, breakOnTokenText);\n    var style = \"math\" + funcName.slice(1);\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\n\nvar adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  var style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;\n  } else if (size === \"text\" && style.size === Style$1.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = Style$1.TEXT;\n  } else if (size === \"script\") {\n    style = Style$1.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = Style$1.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nvar htmlBuilder$6 = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  var style = adjustStyle(group.size, options.style);\n  var nstyle = style.fracNum();\n  var dstyle = style.fracDen();\n  var newOptions;\n  newOptions = options.havingStyle(nstyle);\n  var numerm = buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  var denomm = buildGroup(group.denom, newOptions, options);\n  var rule;\n  var ruleWidth;\n  var ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  var numShift;\n  var clearance;\n  var denomShift;\n\n  if (style.size === Style$1.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  var frac;\n\n  if (!rule) {\n    // Rule 15c\n    var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    var axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    var midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  var delimSize;\n\n  if (style.size === Style$1.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else if (style.size === Style$1.SCRIPTSCRIPT.size) {\n    delimSize = options.havingStyle(Style$1.SCRIPT).fontMetrics().delim2;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  var leftDelim;\n  var rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar mathmlBuilder$6 = (group, options) => {\n  var node = new mathMLTree.MathNode(\"mfrac\", [buildGroup$1(group.numer, options), buildGroup$1(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    var ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  var style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    var isDisplay = style.size === Style$1.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    var withDelims = [];\n\n    if (group.leftDelim != null) {\n      var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\" // ditto\n  ],\n  props: {\n    numArgs: 2,\n    allowedInArgument: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: false,\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\"],\n  props: {\n    numArgs: 2\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref2;\n    var numer = args[0];\n    var denom = args[1];\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: true,\n      numer,\n      denom,\n      hasBarLine: true,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"display\",\n      barSize: null\n    };\n  }\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref3;\n    var replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n  var delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    allowedInArgument: true,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref4, args) {\n    var {\n      parser\n    } = _ref4;\n    var numer = args[4];\n    var denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    var leftNode = normalizeArgument(args[0]);\n    var leftDelim = leftNode.type === \"atom\" && leftNode.family === \"open\" ? delimFromValue(leftNode.text) : null;\n    var rightNode = normalizeArgument(args[1]);\n    var rightDelim = rightNode.type === \"atom\" && rightNode.family === \"close\" ? delimFromValue(rightNode.text) : null;\n    var barNode = assertNodeType(args[2], \"size\");\n    var hasBarLine;\n    var barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    var size = \"auto\";\n    var styl = args[3];\n\n    if (styl.type === \"ordgroup\") {\n      if (styl.body.length > 0) {\n        var textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(styl, \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref5, args) {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref5;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref6, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref6;\n    var numer = args[0];\n    var barSize = assert(assertNodeType(args[1], \"infix\").size);\n    var denom = args[2];\n    var hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nvar htmlBuilder$7 = (grp, options) => {\n  var style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  var supSubGroup;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = grp.sup ? buildGroup(grp.sup, options.havingStyle(style.sup()), options) : buildGroup(grp.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(grp.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  var body = buildGroup(group.base, options.havingBaseStyle(Style$1.DISPLAY)); // Create the stretchy element\n\n  var braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n  // This first vlist contains the content and the brace:   equation\n\n  var vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n    //    equation           eqn                 eqn\n    var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar mathmlBuilder$7 = (group, options) => {\n  var accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildGroup$1(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[1];\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\href\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\href\");\n    }\n\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    var math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\url\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\url\");\n    }\n\n    var chars = [];\n\n    for (var i = 0; i < href.length; i++) {\n      var c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    var body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n\n// In LaTeX, \\vcenter can act only on a box, as in\n// \\vcenter{\\hbox{$\\frac{a+b}{\\dfrac{c}{d}}$}}\n// This function by itself doesn't do anything but prevent a soft line break.\n\ndefineFunction({\n  type: \"hbox\",\n  names: [\"\\\\hbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"hbox\",\n      mode: parser.mode,\n      body: ordargument(args[0])\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var elements = buildExpression(group.body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n\n  mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mrow\", buildExpression$1(group.body, options));\n  }\n\n});\n\ndefineFunction({\n  type: \"html\",\n  names: [\"\\\\htmlClass\", \"\\\\htmlId\", \"\\\\htmlStyle\", \"\\\\htmlData\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"raw\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName,\n      token\n    } = _ref;\n    var value = assertNodeType(args[0], \"raw\").string;\n    var body = args[1];\n\n    if (parser.settings.strict) {\n      parser.settings.reportNonstrict(\"htmlExtension\", \"HTML extension is disabled on strict mode\");\n    }\n\n    var trustContext;\n    var attributes = {};\n\n    switch (funcName) {\n      case \"\\\\htmlClass\":\n        attributes.class = value;\n        trustContext = {\n          command: \"\\\\htmlClass\",\n          class: value\n        };\n        break;\n\n      case \"\\\\htmlId\":\n        attributes.id = value;\n        trustContext = {\n          command: \"\\\\htmlId\",\n          id: value\n        };\n        break;\n\n      case \"\\\\htmlStyle\":\n        attributes.style = value;\n        trustContext = {\n          command: \"\\\\htmlStyle\",\n          style: value\n        };\n        break;\n\n      case \"\\\\htmlData\":\n        {\n          var data = value.split(\",\");\n\n          for (var i = 0; i < data.length; i++) {\n            var keyVal = data[i].split(\"=\");\n\n            if (keyVal.length !== 2) {\n              throw new ParseError(\"Error parsing key-value for \\\\htmlData\");\n            }\n\n            attributes[\"data-\" + keyVal[0].trim()] = keyVal[1].trim();\n          }\n\n          trustContext = {\n            command: \"\\\\htmlData\",\n            attributes\n          };\n          break;\n        }\n\n      default:\n        throw new Error(\"Unrecognized html command\");\n    }\n\n    if (!parser.settings.isTrusted(trustContext)) {\n      return parser.formatUnsupportedCmd(funcName);\n    }\n\n    return {\n      type: \"html\",\n      mode: parser.mode,\n      attributes,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options, false);\n    var classes = [\"enclosing\"];\n\n    if (group.attributes.class) {\n      classes.push(...group.attributes.class.trim().split(/\\s+/));\n    }\n\n    var span = buildCommon.makeSpan(classes, elements, options);\n\n    for (var attr in group.attributes) {\n      if (attr !== \"class\" && group.attributes.hasOwnProperty(attr)) {\n        span.setAttribute(attr, group.attributes[attr]);\n      }\n    }\n\n    return span;\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.body, options);\n  }\n});\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n\nvar sizeData = function sizeData(str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return {\n      number: +str,\n      unit: \"bp\"\n    };\n  } else {\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n\n    return data;\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var width = {\n      number: 0,\n      unit: \"em\"\n    };\n    var height = {\n      number: 0.9,\n      unit: \"em\"\n    }; // sorta character sized.\n\n    var totalheight = {\n      number: 0,\n      unit: \"em\"\n    };\n    var alt = \"\";\n\n    if (optArgs[0]) {\n      var attributeStr = assertNodeType(optArgs[0], \"raw\").string; // Parser.js does not parse key/value pairs. We get a string.\n\n      var attributes = attributeStr.split(\",\");\n\n      for (var i = 0; i < attributes.length; i++) {\n        var keyVal = attributes[i].split(\"=\");\n\n        if (keyVal.length === 2) {\n          var str = keyVal[1].trim();\n\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break;\n\n            case \"width\":\n              width = sizeData(str);\n              break;\n\n            case \"height\":\n              height = sizeData(str);\n              break;\n\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break;\n\n            default:\n              throw new ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\");\n          }\n        }\n      }\n    }\n\n    var src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, '');\n      alt = alt.substring(0, alt.lastIndexOf('.'));\n    }\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\includegraphics\",\n      url: src\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\includegraphics\");\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = Number(depth.toFixed(2));\n    }\n\n    var width = 0;\n\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, options);\n    }\n\n    var style = {\n      height: height + depth + \"em\"\n    };\n\n    if (width > 0) {\n      style.width = width + \"em\";\n    }\n\n    if (depth > 0) {\n      style.verticalAlign = -depth + \"em\";\n    }\n\n    var node = new Img(group.src, group.alt, style);\n    node.height = height;\n    node.depth = depth;\n    return node;\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mglyph\", []);\n    node.setAttribute(\"alt\", group.alt);\n    var height = calculateSize(group.height, options);\n    var depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = depth.toFixed(2);\n      node.setAttribute(\"valign\", \"-\" + depth + \"em\");\n    }\n\n    node.setAttribute(\"height\", height + depth + \"em\");\n\n    if (group.width.number > 0) {\n      var width = calculateSize(group.width, options);\n      node.setAttribute(\"width\", width + \"em\");\n    }\n\n    node.setAttribute(\"src\", group.src);\n    return node;\n  }\n});\n\n// Horizontal spacing commands\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    primitive: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      var muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options)]);\n    }\n\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    var node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n    // This code resolved issue #1153\n\n    var strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n    // This code resolves issue #1234\n\n    node = buildCommon.makeSpan([\"thinbox\"], [node], options);\n    return buildCommon.makeSpan([\"mord\", \"vbox\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(_ref, args) {\n    var {\n      funcName,\n      parser\n    } = _ref;\n    var outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    var body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new ParseError(\"Mismatched \" + context.funcName);\n  }\n\n});\n\nvar chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case Style$1.DISPLAY.size:\n      return group.display;\n\n    case Style$1.TEXT.size:\n      return group.text;\n\n    case Style$1.SCRIPT.size:\n      return group.script;\n\n    case Style$1.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4,\n    primitive: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    var elements = buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n\n// For an operator with limits, assemble the base, sup, and sub into a span.\nvar assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {\n  base = buildCommon.makeSpan([], [base]);\n  var subIsSingleCharacter = subGroup && utils.isCharacterBox(subGroup);\n  var sub;\n  var sup; // We manually have to handle the superscripts and subscripts. This,\n  // aside from the kern calculations, is copied from supsub.\n\n  if (supGroup) {\n    var elem = buildGroup(supGroup, options.havingStyle(style.sup()), options);\n    sup = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n    };\n  }\n\n  if (subGroup) {\n    var _elem = buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n    sub = {\n      elem: _elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n    };\n  } // Build the final group as a vlist of the possible subscript, base,\n  // and possible superscript.\n\n\n  var finalGroup;\n\n  if (sup && sub) {\n    var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else if (sub) {\n    var top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: top,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }]\n    }, options);\n  } else if (sup) {\n    var _bottom = base.depth + baseShift;\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: _bottom,\n      children: [{\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else {\n    // This case probably shouldn't occur (this would mean the\n    // supsub was sending us a group with no superscript or\n    // subscript) but be safe.\n    return base;\n  }\n\n  var parts = [finalGroup];\n\n  if (sub && slant !== 0 && !subIsSingleCharacter) {\n    // A negative margin-left was applied to the lower limit.\n    // Avoid an overlap by placing a spacer on the left on the group.\n    var spacer = buildCommon.makeSpan([\"mspace\"], [], options);\n    spacer.style.marginRight = slant + \"em\";\n    parts.unshift(spacer);\n  }\n\n  return buildCommon.makeSpan([\"mop\", \"op-limits\"], parts, options);\n};\n\n// Limits, symbols\n// Most operators have a large successor symbol, but these don't.\nvar noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nvar htmlBuilder$8 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  var style = options.style;\n  var large = false;\n\n  if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  var base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    var stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1);\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      var italic = base.italic;\n      var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options);\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    var inner = buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], inner, options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    var output = [];\n\n    for (var i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode, options));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  var baseShift = 0;\n  var slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nvar mathmlBuilder$8 = (group, options) => {\n  var node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression$1(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    var operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mrow\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nvar singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1,\n    primitive: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    var {\n      parser,\n      funcName\n    } = _ref3;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    var {\n      parser,\n      funcName\n    } = _ref4;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    var {\n      parser,\n      funcName\n    } = _ref5;\n    var fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n});\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\nvar builtinMacros = {};\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n\ndefineMacro(\"\\\\noexpand\", function (context) {\n  // The expansion is the token itself; but that token is interpreted\n  // as if its meaning were ‘\\relax’ if it is a control sequence that\n  // would ordinarily be expanded by TeX’s expansion rules.\n  var t = context.popToken();\n\n  if (context.isExpandable(t.text)) {\n    t.noexpand = true;\n    t.treatAsRelax = true;\n  }\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n});\ndefineMacro(\"\\\\expandafter\", function (context) {\n  // TeX first reads the token that comes immediately after \\expandafter,\n  // without expanding it; let’s call this token t. Then TeX reads the\n  // token that comes after t (and possibly more tokens, if that token\n  // has an argument), replacing it by its expansion. Finally TeX puts\n  // t back in front of that expansion.\n  var t = context.popToken();\n  context.expandOnce(true); // expand only an expandable token\n\n  return {\n    tokens: [t],\n    numArgs: 0\n  };\n}); // LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  var args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol that isn't a space, consuming any spaces but not consuming the\n// first nonspace character.  If that nonspace character matches #1, then\n// the macro expands to #2; otherwise, it expands to #3.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  var args = context.consumeArgs(3); // symbol, if, else\n\n  context.consumeSpaces();\n  var nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  var args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nvar digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  var token = context.popToken();\n  var base;\n  var number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n    }\n\n    var digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return \"\\\\@char{\" + number + \"}\";\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nvar newcommand = (context, existsOK, nonexistsOK) => {\n  var arg = context.consumeArg().tokens;\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  var name = arg[0].text;\n  var exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n  }\n\n  var numArgs = 0;\n  arg = context.consumeArg().tokens;\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    var argText = '';\n    var token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new ParseError(\"Invalid number of arguments: \" + argText);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArg().tokens;\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true)); // terminal (console) tools\n\ndefineMacro(\"\\\\message\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.log(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\errmessage\", context => {\n  var arg = context.consumeArgs(1)[0]; // eslint-disable-next-line no-console\n\n  console.error(arg.reverse().map(token => token.text).join(\"\"));\n  return '';\n});\ndefineMacro(\"\\\\show\", context => {\n  var tok = context.popToken();\n  var name = tok.text; // eslint-disable-next-line no-console\n\n  console.log(tok, context.macros.get(name), functions[name], symbols.math[name], symbols.text[name]);\n  return '';\n}); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def~{\\nobreakspace{}}\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"~\", \"\\\\nobreakspace\");\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\"); // Characters omitted from Unicode range 1D400–1D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\mathstrut from the TeXbook, p 360\n\ndefineMacro(\"\\\\mathstrut\", \"\\\\vphantom{(}\"); // \\underbar from TeXbook p 353\n\ndefineMacro(\"\\\\underbar\", \"\\\\underline{\\\\text{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); // The KaTeX fonts have corners at codepoints that don't match Unicode.\n// For MathML purposes, use the Unicode code point.\n\ndefineMacro(\"\\\\ulcorner\", \"\\\\html@mathml{\\\\@ulcorner}{\\\\mathop{\\\\char\\\"231c}}\");\ndefineMacro(\"\\\\urcorner\", \"\\\\html@mathml{\\\\@urcorner}{\\\\mathop{\\\\char\\\"231d}}\");\ndefineMacro(\"\\\\llcorner\", \"\\\\html@mathml{\\\\@llcorner}{\\\\mathop{\\\\char\\\"231e}}\");\ndefineMacro(\"\\\\lrcorner\", \"\\\\html@mathml{\\\\@lrcorner}{\\\\mathop{\\\\char\\\"231f}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); //\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\n\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nvar dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  var thedots = '\\\\dotso';\n  var next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in symbols.math) {\n    if (utils.contains(['bin', 'rel'], symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nvar spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  var next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  var next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// The version in ambsy.sty works by typesetting three copies of the argument\n// with small offsets. We use two copies. We omit the vertical offset because\n// of rendering problems that makeVList encounters in Safari.\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\" + \"\\\\@binrel{#1}{\\\\mathrlap{#1}\\\\kern0.5px#1}}\" + \"{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\expandafter\\let\\expandafter\\@normalcr\n//     \\csname\\expandafter\\@gobble\\string\\\\ \\endcsname\n// \\DeclareRobustCommand\\newline{\\@normalcr\\relax}\n\ndefineMacro(\"\\\\newline\", \"\\\\\\\\\\\\relax\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered in \\normalsize\n// \\scriptstyle, which has a scale factor of 0.7 (see Options.js).\n\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptstyle A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // ≔\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // ≕\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"); //////////////////////////////////////////////////////////////////////\n// From amsopn.sty\n\ndefineMacro(\"\\\\injlim\", \"\\\\DOTSB\\\\operatorname*{inj\\\\,lim}\");\ndefineMacro(\"\\\\projlim\", \"\\\\DOTSB\\\\operatorname*{proj\\\\,lim}\");\ndefineMacro(\"\\\\varlimsup\", \"\\\\DOTSB\\\\operatorname*{\\\\overline{lim}}\");\ndefineMacro(\"\\\\varliminf\", \"\\\\DOTSB\\\\operatorname*{\\\\underline{lim}}\");\ndefineMacro(\"\\\\varinjlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underrightarrow{lim}}\");\ndefineMacro(\"\\\\varprojlim\", \"\\\\DOTSB\\\\operatorname*{\\\\underleftarrow{lim}}\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{∤}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{∦}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{⊊}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{⫋}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{⊋}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{⫌}\");\ndefineMacro(\"\\\\imath\", \"\\\\html@mathml{\\\\@imath}{\\u0131}\");\ndefineMacro(\"\\\\jmath\", \"\\\\html@mathml{\\\\@jmath}{\\u0237}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n// The stmaryrd function `\\minuso` provides a \"Plimsoll\" symbol that\n// superimposes the characters \\circ and \\mathminus. Used in chemistry.\n\ndefineMacro(\"\\\\minuso\", \"\\\\mathbin{\\\\html@mathml{\" + \"{\\\\mathrlap{\\\\mathchoice{\\\\kern{0.145em}}{\\\\kern{0.145em}}\" + \"{\\\\kern{0.1015em}}{\\\\kern{0.0725em}}\\\\circ}{-}}}\" + \"{\\\\char`⦵}}\");\ndefineMacro(\"⦵\", \"\\\\minuso\"); //////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"); //////////////////////////////////////////////////////////////////////\n// braket.sty\n// http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/braket/braket.pdf\n\ndefineMacro(\"\\\\bra\", \"\\\\mathinner{\\\\langle{#1}|}\");\ndefineMacro(\"\\\\ket\", \"\\\\mathinner{|{#1}\\\\rangle}\");\ndefineMacro(\"\\\\braket\", \"\\\\mathinner{\\\\langle{#1}\\\\rangle}\");\ndefineMacro(\"\\\\Bra\", \"\\\\left\\\\langle#1\\\\right|\");\ndefineMacro(\"\\\\Ket\", \"\\\\left|#1\\\\right\\\\rangle\"); //////////////////////////////////////////////////////////////////////\n// actuarialangle.dtx\n\ndefineMacro(\"\\\\angln\", \"{\\\\angl n}\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{#1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\n// affect super/subscripting.\nvar htmlBuilder$9 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  var supGroup;\n  var subGroup;\n  var hasLimits = false;\n  var group;\n\n  if (grp.type === \"supsub\") {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = grp.sup;\n    subGroup = grp.sub;\n    group = assertNodeType(grp.base, \"operatorname\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"operatorname\");\n  }\n\n  var base;\n\n  if (group.body.length > 0) {\n    var body = group.body.map(child => {\n      // $FlowFixMe: Check if the node has a string `text` property.\n      var childText = child.text;\n\n      if (typeof childText === \"string\") {\n        return {\n          type: \"textord\",\n          mode: child.mode,\n          text: childText\n        };\n      } else {\n        return child;\n      }\n    }); // Consolidate function names into symbol characters.\n\n    var expression = buildExpression(body, options.withFont(\"mathrm\"), true);\n\n    for (var i = 0; i < expression.length; i++) {\n      var child = expression[i];\n\n      if (child instanceof SymbolNode) {\n        // Per amsopn package,\n        // change minus to hyphen and \\ast to asterisk\n        child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n      }\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], expression, options);\n  } else {\n    base = buildCommon.makeSpan([\"mop\"], [], options);\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);\n  } else {\n    return base;\n  }\n};\n\nvar mathmlBuilder$9 = (group, options) => {\n  // The steps taken here are similar to the html version.\n  var expression = buildExpression$1(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n  var isAllString = true; // default\n\n  for (var i = 0; i < expression.length; i++) {\n    var node = expression[i];\n\n    if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) {\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mspace\":\n        case \"mtext\":\n          break;\n        // Do nothing yet.\n\n        case \"mo\":\n          {\n            var child = node.children[0];\n\n            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n              child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n            } else {\n              isAllString = false;\n            }\n\n            break;\n          }\n\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    var word = expression.map(node => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  }\n\n  var identifier = new mathMLTree.MathNode(\"mi\", expression);\n  identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n  // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n  var operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n  if (group.parentIsSupSub) {\n    return new mathMLTree.MathNode(\"mrow\", [identifier, operator]);\n  } else {\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n}; // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname@\", \"\\\\operatornamewithlimits\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: funcName === \"\\\\operatornamewithlimits\",\n      limits: false,\n      parentIsSupSub: false\n    };\n  },\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: mathmlBuilder$9\n});\ndefineMacro(\"\\\\operatorname\", \"\\\\@ifstar\\\\operatornamewithlimits\\\\operatorname@\");\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options, true);\n  }\n\n});\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    var line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: defaultRuleThickness\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      parser\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var elements = buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    var {\n      parser\n    } = _ref2;\n    var body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    var {\n      parser\n    } = _ref3;\n    var body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options.withPhantom())]);\n    var fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var inner = buildExpression$1(ordargument(group.body), options);\n    var phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    var node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    var amount = assertNodeType(args[0], \"size\").value;\n    var body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup(group.body, options);\n    var dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n    var dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var shift = optArgs[0];\n    var width = assertNodeType(args[0], \"size\");\n    var height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    var width = calculateSize(group.width, options);\n    var height = calculateSize(group.height, options);\n    var shift = group.shift ? calculateSize(group.shift, options) : 0;\n    var color = options.color && options.getColor() || \"black\";\n    var rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", width + \"em\");\n    rule.setAttribute(\"height\", height + \"em\");\n    var wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift + \"em\");\n    } else {\n      wrapper.setAttribute(\"height\", shift + \"em\");\n      wrapper.setAttribute(\"depth\", \"+\" + -shift + \"em\");\n    }\n\n    wrapper.setAttribute(\"voffset\", shift + \"em\");\n    return wrapper;\n  }\n\n});\n\nfunction sizingGroup(value, options, baseOptions) {\n  var inner = buildExpression(value, options, false);\n  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (var i = 0; i < inner.length; i++) {\n    var pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nvar htmlBuilder$a = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  var newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    var body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$a,\n  mathmlBuilder: (group, options) => {\n    var newOptions = options.havingSize(group.size);\n    var inner = buildExpression$1(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    var {\n      parser\n    } = _ref;\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      var letter = \"\";\n\n      for (var i = 0; i < tbArg.body.length; ++i) {\n        var node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    var node = buildCommon.makeSpan([], [buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (var _i = 0; _i < node.children.length; _i++) {\n          node.children[_i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    var smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    var node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    var {\n      parser\n    } = _ref;\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n    var phi = theta;\n\n    if (options.style.id < Style$1.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    var lineClearance = theta + phi / 4;\n    var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    var {\n      span: img,\n      ruleWidth,\n      advanceWidth\n    } = delimiter.sqrtImage(minDelimiterHeight, options);\n    var delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    var body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      var newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);\n      var rootm = buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      var toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      var rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var {\n      body,\n      index\n    } = group;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildGroup$1(body, options), buildGroup$1(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildGroup$1(body, options)]);\n  }\n\n});\n\nvar styleMap$1 = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    primitive: true\n  },\n\n  handler(_ref, args) {\n    var {\n      breakOnTokenText,\n      funcName,\n      parser\n    } = _ref;\n    // parse out the implicit body\n    var body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    var style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    var newStyle = styleMap$1[group.style];\n    var newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    var newStyle = styleMap$1[group.style];\n    var newOptions = options.havingStyle(newStyle);\n    var inner = buildExpression$1(group.body, newOptions);\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n    var styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    var attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  var base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    var delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? htmlBuilder$8 : null;\n  } else if (base.type === \"operatorname\") {\n    var _delegate = base.alwaysHandleSupSub && (options.style.size === Style$1.DISPLAY.size || base.limits);\n\n    return _delegate ? htmlBuilder$9 : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    var isSup = !group.sub;\n    return isSup === base.isOver ? htmlBuilder$7 : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    var builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    var {\n      base: valueBase,\n      sup: valueSup,\n      sub: valueSub\n    } = group;\n    var base = buildGroup(valueBase, options);\n    var supm;\n    var subm;\n    var metrics = options.fontMetrics(); // Rule 18a\n\n    var supShift = 0;\n    var subShift = 0;\n    var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      var newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      var _newOptions = options.havingStyle(options.style.sub());\n\n      subm = buildGroup(valueSub, _newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    var minSupShift;\n\n    if (options.style === Style$1.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    var multiplier = options.sizeMultiplier;\n    var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    var marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    var supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      var ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      var maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      var vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      var _vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: _vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver;\n    var isSup;\n\n    if (group.base && group.base.type === \"horizBrace\") {\n      isSup = !!group.sup;\n\n      if (isSup === group.base.isOver) {\n        isBrace = true;\n        isOver = group.base.isOver;\n      }\n    }\n\n    if (group.base && (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n    }\n\n    var children = [buildGroup$1(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildGroup$1(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildGroup$1(group.sup, options));\n    }\n\n    var nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      var base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      var _base = group.base;\n\n      if (_base && _base.type === \"op\" && _base.limits && (options.style === Style$1.DISPLAY || _base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else if (_base && _base.type === \"operatorname\" && _base.alwaysHandleSupSub && (_base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      var _base2 = group.base;\n\n      if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === Style$1.DISPLAY) {\n        nodeType = \"munderover\";\n      } else if (_base2 && _base2.type === \"operatorname\" && _base2.alwaysHandleSupSub && (options.style === Style$1.DISPLAY || _base2.limits)) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    return new mathMLTree.MathNode(nodeType, children);\n  }\n\n});\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      var variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\nvar defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    var variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    var text = makeText(group.text, group.mode, options);\n    var variant = getVariant(group, options) || \"normal\";\n    var node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n\nvar cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nvar regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      var className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        var ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    var node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n    }\n\n    return node;\n  }\n\n});\n\nvar pad = () => {\n  var padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n\nvar textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nvar textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nvar textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nvar optionsWithFont = (group, options) => {\n  var font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    allowedInArgument: true,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser,\n      funcName\n    } = _ref;\n    var body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    var inner = buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildGroup(group.body, options); // Create the line to go below the body\n\n    var line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    var vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    var node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"vcenter\",\n  names: [\"\\\\vcenter\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"original\"],\n    // In LaTeX, \\vcenter can act only on a box.\n    allowedInText: false\n  },\n\n  handler(_ref, args) {\n    var {\n      parser\n    } = _ref;\n    return {\n      type: \"vcenter\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    var body = buildGroup(group.body, options);\n    var axisHeight = options.fontMetrics().axisHeight;\n    var dy = 0.5 * (body.height - axisHeight - (body.depth + axisHeight));\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // There is no way to do this in MathML.\n    // Write a class as a breadcrumb in case some post-processor wants\n    // to perform a vcenter adjustment.\n    return new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)], [\"vcenter\"]);\n  }\n\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    var text = makeVerb(group);\n    var body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    var newOptions = options.havingStyle(options.style.text());\n\n    for (var i = 0; i < text.length; i++) {\n      var c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    var text = new mathMLTree.TextNode(makeVerb(group));\n    var node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nvar makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n\n/** Include this to ensure that all functions are defined. */\nvar functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more whitespace characters\n * - matches a backslash followed by one or more letters then whitespace\n * - matches a backslash followed by any BMP character\n * Capturing groups:\n *   [1] regular whitespace\n *   [2] backslash followed by whitespace\n *   [3] anything else, which may include:\n *     [4] left character of \\verb*\n *     [5] left character of \\verb\n *     [6] backslash followed by word, excluding any trailing whitespace\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"(\" + controlWordRegexString + \")\" + spaceRegexString + \"*\";\nvar controlSpaceRegexString = \"\\\\\\\\(\\n|[ \\r\\t]+\\n?)[ \\r\\t]*\";\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\ncontrolSpaceRegexString + \"|\") + // \\whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\4\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\5\" + ( // \\verb unstarred\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // Category codes. The lexer only supports comment characters (14) for now.\n  // MacroExpander additionally distinguishes active (13).\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14,\n      // comment character\n      \"~\": 13 // active character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    var input = this.input;\n    var pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    var match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    var text = match[6] || match[3] || (match[2] ? \"\\\\ \" : \" \");\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      var nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    var undefs = this.undefStack.pop();\n\n    for (var undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (var i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      var top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  }\n\n}\n\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(builtinMacros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Find an macro argument without expanding tokens and append the array of\n   * tokens to the token stack. Uses Token as a container for the result.\n   */\n\n\n  scanArgument(isOptional) {\n    var start;\n    var end;\n    var tokens;\n\n    if (isOptional) {\n      this.consumeSpaces(); // \\@ifnextchar gobbles any space following it\n\n      if (this.future().text !== \"[\") {\n        return null;\n      }\n\n      start = this.popToken(); // don't include [ in tokens\n\n      ({\n        tokens,\n        end\n      } = this.consumeArg([\"]\"]));\n    } else {\n      ({\n        tokens,\n        start,\n        end\n      } = this.consumeArg());\n    } // indicate the end of an argument\n\n\n    this.pushToken(new Token(\"EOF\", end.loc));\n    this.pushTokens(tokens);\n    return start.range(end, \"\");\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      var token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume an argument from the token stream, and return the resulting array\n   * of tokens and start/end token.\n   */\n\n\n  consumeArg(delims) {\n    // The argument for a delimited parameter is the shortest (possibly\n    // empty) sequence of tokens with properly nested {...} groups that is\n    // followed ... by this particular list of non-parameter tokens.\n    // The argument for an undelimited parameter is the next nonblank\n    // token, unless that token is ‘{’, when the argument will be the\n    // entire {...} group that follows.\n    var tokens = [];\n    var isDelimited = delims && delims.length > 0;\n\n    if (!isDelimited) {\n      // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n      //  put spaces between the arguments (e.g., ‘\\row x n’), because\n      //  TeX doesn’t use single spaces as undelimited arguments.\"\n      this.consumeSpaces();\n    }\n\n    var start = this.future();\n    var tok;\n    var depth = 0;\n    var match = 0;\n\n    do {\n      tok = this.popToken();\n      tokens.push(tok);\n\n      if (tok.text === \"{\") {\n        ++depth;\n      } else if (tok.text === \"}\") {\n        --depth;\n\n        if (depth === -1) {\n          throw new ParseError(\"Extra }\", tok);\n        }\n      } else if (tok.text === \"EOF\") {\n        throw new ParseError(\"Unexpected end of input in a macro argument\" + \", expected '\" + (delims && isDelimited ? delims[match] : \"}\") + \"'\", tok);\n      }\n\n      if (delims && isDelimited) {\n        if ((depth === 0 || depth === 1 && delims[match] === \"{\") && tok.text === delims[match]) {\n          ++match;\n\n          if (match === delims.length) {\n            // don't include delims in tokens\n            tokens.splice(-match, match);\n            break;\n          }\n        } else {\n          match = 0;\n        }\n      }\n    } while (depth !== 0 || isDelimited); // If the argument found ... has the form ‘{<nested tokens>}’,\n    // ... the outermost braces enclosing the argument are removed\n\n\n    if (start.text === \"{\" && tokens[tokens.length - 1].text === \"}\") {\n      tokens.pop();\n      tokens.shift();\n    }\n\n    tokens.reverse(); // to fit in with stack order\n\n    return {\n      tokens,\n      start,\n      end: tok\n    };\n  }\n  /**\n   * Consume the specified number of (delimited) arguments from the token\n   * stream and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs, delimiters) {\n    if (delimiters) {\n      if (delimiters.length !== numArgs + 1) {\n        throw new ParseError(\"The length of delimiters doesn't match the number of args!\");\n      }\n\n      var delims = delimiters[0];\n\n      for (var i = 0; i < delims.length; i++) {\n        var tok = this.popToken();\n\n        if (delims[i] !== tok.text) {\n          throw new ParseError(\"Use of the macro doesn't match its definition\", tok);\n        }\n      }\n    }\n\n    var args = [];\n\n    for (var _i = 0; _i < numArgs; _i++) {\n      args.push(this.consumeArg(delimiters && delimiters[_i + 1]).tokens);\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * If expandableOnly, only expandable tokens are expanded and\n   * an undefined control sequence results in an error.\n   */\n\n\n  expandOnce(expandableOnly) {\n    var topToken = this.popToken();\n    var name = topToken.text;\n    var expansion = !topToken.noexpand ? this._getExpansion(name) : null;\n\n    if (expansion == null || expandableOnly && expansion.unexpandable) {\n      if (expandableOnly && expansion == null && name[0] === \"\\\\\" && !this.isDefined(name)) {\n        throw new ParseError(\"Undefined control sequence: \" + name);\n      }\n\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    var tokens = expansion.tokens;\n    var args = this.consumeArgs(expansion.numArgs, expansion.delimiters);\n\n    if (expansion.numArgs) {\n      // paste arguments in place of the placeholders\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (var i = tokens.length - 1; i >= 0; --i) {\n        var tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## → #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      var expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        // the token after \\noexpand is interpreted as if its meaning\n        // were ‘\\relax’\n        if (expanded.text === \"\\\\relax\" || expanded.treatAsRelax) {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    return this.macros.has(name) ? this.expandTokens([new Token(name)]) : undefined;\n  }\n  /**\n   * Fully expand the given token stream and return the resulting list of tokens\n   */\n\n\n  expandTokens(tokens) {\n    var output = [];\n    var oldStackLength = this.stack.length;\n    this.pushTokens(tokens);\n\n    while (this.stack.length > oldStackLength) {\n      var expanded = this.expandOnce(true); // expand only expandable tokens\n      // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        if (expanded.treatAsRelax) {\n          // the expansion of \\noexpand is the token itself\n          expanded.noexpand = false;\n          expanded.treatAsRelax = false;\n        }\n\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    var tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    var definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    } // If a single character has an associated catcode other than 13\n    // (active character), then don't expand it.\n\n\n    if (name.length === 1) {\n      var catcode = this.lexer.catcodes[name];\n\n      if (catcode != null && catcode !== 13) {\n        return;\n      }\n    }\n\n    var expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      var numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        var stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      var bodyLexer = new Lexer(expansion, this.settings);\n      var tokens = [];\n      var tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      var expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || functions.hasOwnProperty(name) || symbols.math.hasOwnProperty(name) || symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n  /**\n   * Determine whether a command is expandable.\n   */\n\n\n  isExpandable(name) {\n    var macro = this.macros.get(name);\n    return macro != null ? typeof macro === \"string\" || typeof macro === \"function\" || !macro.unexpandable : functions.hasOwnProperty(name) && !functions[name].primitive;\n  }\n\n}\n\n/* eslint no-constant-condition:0 */\n\nvar unicodeAccents = {\n  \"́\": {\n    \"text\": \"\\\\'\",\n    \"math\": \"\\\\acute\"\n  },\n  \"̀\": {\n    \"text\": \"\\\\`\",\n    \"math\": \"\\\\grave\"\n  },\n  \"̈\": {\n    \"text\": \"\\\\\\\"\",\n    \"math\": \"\\\\ddot\"\n  },\n  \"̃\": {\n    \"text\": \"\\\\~\",\n    \"math\": \"\\\\tilde\"\n  },\n  \"̄\": {\n    \"text\": \"\\\\=\",\n    \"math\": \"\\\\bar\"\n  },\n  \"̆\": {\n    \"text\": \"\\\\u\",\n    \"math\": \"\\\\breve\"\n  },\n  \"̌\": {\n    \"text\": \"\\\\v\",\n    \"math\": \"\\\\check\"\n  },\n  \"̂\": {\n    \"text\": \"\\\\^\",\n    \"math\": \"\\\\hat\"\n  },\n  \"̇\": {\n    \"text\": \"\\\\.\",\n    \"math\": \"\\\\dot\"\n  },\n  \"̊\": {\n    \"text\": \"\\\\r\",\n    \"math\": \"\\\\mathring\"\n  },\n  \"̋\": {\n    \"text\": \"\\\\H\"\n  }\n};\nvar unicodeSymbols = {\n  \"á\": \"á\",\n  \"à\": \"à\",\n  \"ä\": \"ä\",\n  \"ǟ\": \"ǟ\",\n  \"ã\": \"ã\",\n  \"ā\": \"ā\",\n  \"ă\": \"ă\",\n  \"ắ\": \"ắ\",\n  \"ằ\": \"ằ\",\n  \"ẵ\": \"ẵ\",\n  \"ǎ\": \"ǎ\",\n  \"â\": \"â\",\n  \"ấ\": \"ấ\",\n  \"ầ\": \"ầ\",\n  \"ẫ\": \"ẫ\",\n  \"ȧ\": \"ȧ\",\n  \"ǡ\": \"ǡ\",\n  \"å\": \"å\",\n  \"ǻ\": \"ǻ\",\n  \"ḃ\": \"ḃ\",\n  \"ć\": \"ć\",\n  \"č\": \"č\",\n  \"ĉ\": \"ĉ\",\n  \"ċ\": \"ċ\",\n  \"ď\": \"ď\",\n  \"ḋ\": \"ḋ\",\n  \"é\": \"é\",\n  \"è\": \"è\",\n  \"ë\": \"ë\",\n  \"ẽ\": \"ẽ\",\n  \"ē\": \"ē\",\n  \"ḗ\": \"ḗ\",\n  \"ḕ\": \"ḕ\",\n  \"ĕ\": \"ĕ\",\n  \"ě\": \"ě\",\n  \"ê\": \"ê\",\n  \"ế\": \"ế\",\n  \"ề\": \"ề\",\n  \"ễ\": \"ễ\",\n  \"ė\": \"ė\",\n  \"ḟ\": \"ḟ\",\n  \"ǵ\": \"ǵ\",\n  \"ḡ\": \"ḡ\",\n  \"ğ\": \"ğ\",\n  \"ǧ\": \"ǧ\",\n  \"ĝ\": \"ĝ\",\n  \"ġ\": \"ġ\",\n  \"ḧ\": \"ḧ\",\n  \"ȟ\": \"ȟ\",\n  \"ĥ\": \"ĥ\",\n  \"ḣ\": \"ḣ\",\n  \"í\": \"í\",\n  \"ì\": \"ì\",\n  \"ï\": \"ï\",\n  \"ḯ\": \"ḯ\",\n  \"ĩ\": \"ĩ\",\n  \"ī\": \"ī\",\n  \"ĭ\": \"ĭ\",\n  \"ǐ\": \"ǐ\",\n  \"î\": \"î\",\n  \"ǰ\": \"ǰ\",\n  \"ĵ\": \"ĵ\",\n  \"ḱ\": \"ḱ\",\n  \"ǩ\": \"ǩ\",\n  \"ĺ\": \"ĺ\",\n  \"ľ\": \"ľ\",\n  \"ḿ\": \"ḿ\",\n  \"ṁ\": \"ṁ\",\n  \"ń\": \"ń\",\n  \"ǹ\": \"ǹ\",\n  \"ñ\": \"ñ\",\n  \"ň\": \"ň\",\n  \"ṅ\": \"ṅ\",\n  \"ó\": \"ó\",\n  \"ò\": \"ò\",\n  \"ö\": \"ö\",\n  \"ȫ\": \"ȫ\",\n  \"õ\": \"õ\",\n  \"ṍ\": \"ṍ\",\n  \"ṏ\": \"ṏ\",\n  \"ȭ\": \"ȭ\",\n  \"ō\": \"ō\",\n  \"ṓ\": \"ṓ\",\n  \"ṑ\": \"ṑ\",\n  \"ŏ\": \"ŏ\",\n  \"ǒ\": \"ǒ\",\n  \"ô\": \"ô\",\n  \"ố\": \"ố\",\n  \"ồ\": \"ồ\",\n  \"ỗ\": \"ỗ\",\n  \"ȯ\": \"ȯ\",\n  \"ȱ\": \"ȱ\",\n  \"ő\": \"ő\",\n  \"ṕ\": \"ṕ\",\n  \"ṗ\": \"ṗ\",\n  \"ŕ\": \"ŕ\",\n  \"ř\": \"ř\",\n  \"ṙ\": \"ṙ\",\n  \"ś\": \"ś\",\n  \"ṥ\": \"ṥ\",\n  \"š\": \"š\",\n  \"ṧ\": \"ṧ\",\n  \"ŝ\": \"ŝ\",\n  \"ṡ\": \"ṡ\",\n  \"ẗ\": \"ẗ\",\n  \"ť\": \"ť\",\n  \"ṫ\": \"ṫ\",\n  \"ú\": \"ú\",\n  \"ù\": \"ù\",\n  \"ü\": \"ü\",\n  \"ǘ\": \"ǘ\",\n  \"ǜ\": \"ǜ\",\n  \"ǖ\": \"ǖ\",\n  \"ǚ\": \"ǚ\",\n  \"ũ\": \"ũ\",\n  \"ṹ\": \"ṹ\",\n  \"ū\": \"ū\",\n  \"ṻ\": \"ṻ\",\n  \"ŭ\": \"ŭ\",\n  \"ǔ\": \"ǔ\",\n  \"û\": \"û\",\n  \"ů\": \"ů\",\n  \"ű\": \"ű\",\n  \"ṽ\": \"ṽ\",\n  \"ẃ\": \"ẃ\",\n  \"ẁ\": \"ẁ\",\n  \"ẅ\": \"ẅ\",\n  \"ŵ\": \"ŵ\",\n  \"ẇ\": \"ẇ\",\n  \"ẘ\": \"ẘ\",\n  \"ẍ\": \"ẍ\",\n  \"ẋ\": \"ẋ\",\n  \"ý\": \"ý\",\n  \"ỳ\": \"ỳ\",\n  \"ÿ\": \"ÿ\",\n  \"ỹ\": \"ỹ\",\n  \"ȳ\": \"ȳ\",\n  \"ŷ\": \"ŷ\",\n  \"ẏ\": \"ẏ\",\n  \"ẙ\": \"ẙ\",\n  \"ź\": \"ź\",\n  \"ž\": \"ž\",\n  \"ẑ\": \"ẑ\",\n  \"ż\": \"ż\",\n  \"Á\": \"Á\",\n  \"À\": \"À\",\n  \"Ä\": \"Ä\",\n  \"Ǟ\": \"Ǟ\",\n  \"Ã\": \"Ã\",\n  \"Ā\": \"Ā\",\n  \"Ă\": \"Ă\",\n  \"Ắ\": \"Ắ\",\n  \"Ằ\": \"Ằ\",\n  \"Ẵ\": \"Ẵ\",\n  \"Ǎ\": \"Ǎ\",\n  \"Â\": \"Â\",\n  \"Ấ\": \"Ấ\",\n  \"Ầ\": \"Ầ\",\n  \"Ẫ\": \"Ẫ\",\n  \"Ȧ\": \"Ȧ\",\n  \"Ǡ\": \"Ǡ\",\n  \"Å\": \"Å\",\n  \"Ǻ\": \"Ǻ\",\n  \"Ḃ\": \"Ḃ\",\n  \"Ć\": \"Ć\",\n  \"Č\": \"Č\",\n  \"Ĉ\": \"Ĉ\",\n  \"Ċ\": \"Ċ\",\n  \"Ď\": \"Ď\",\n  \"Ḋ\": \"Ḋ\",\n  \"É\": \"É\",\n  \"È\": \"È\",\n  \"Ë\": \"Ë\",\n  \"Ẽ\": \"Ẽ\",\n  \"Ē\": \"Ē\",\n  \"Ḗ\": \"Ḗ\",\n  \"Ḕ\": \"Ḕ\",\n  \"Ĕ\": \"Ĕ\",\n  \"Ě\": \"Ě\",\n  \"Ê\": \"Ê\",\n  \"Ế\": \"Ế\",\n  \"Ề\": \"Ề\",\n  \"Ễ\": \"Ễ\",\n  \"Ė\": \"Ė\",\n  \"Ḟ\": \"Ḟ\",\n  \"Ǵ\": \"Ǵ\",\n  \"Ḡ\": \"Ḡ\",\n  \"Ğ\": \"Ğ\",\n  \"Ǧ\": \"Ǧ\",\n  \"Ĝ\": \"Ĝ\",\n  \"Ġ\": \"Ġ\",\n  \"Ḧ\": \"Ḧ\",\n  \"Ȟ\": \"Ȟ\",\n  \"Ĥ\": \"Ĥ\",\n  \"Ḣ\": \"Ḣ\",\n  \"Í\": \"Í\",\n  \"Ì\": \"Ì\",\n  \"Ï\": \"Ï\",\n  \"Ḯ\": \"Ḯ\",\n  \"Ĩ\": \"Ĩ\",\n  \"Ī\": \"Ī\",\n  \"Ĭ\": \"Ĭ\",\n  \"Ǐ\": \"Ǐ\",\n  \"Î\": \"Î\",\n  \"İ\": \"İ\",\n  \"Ĵ\": \"Ĵ\",\n  \"Ḱ\": \"Ḱ\",\n  \"Ǩ\": \"Ǩ\",\n  \"Ĺ\": \"Ĺ\",\n  \"Ľ\": \"Ľ\",\n  \"Ḿ\": \"Ḿ\",\n  \"Ṁ\": \"Ṁ\",\n  \"Ń\": \"Ń\",\n  \"Ǹ\": \"Ǹ\",\n  \"Ñ\": \"Ñ\",\n  \"Ň\": \"Ň\",\n  \"Ṅ\": \"Ṅ\",\n  \"Ó\": \"Ó\",\n  \"Ò\": \"Ò\",\n  \"Ö\": \"Ö\",\n  \"Ȫ\": \"Ȫ\",\n  \"Õ\": \"Õ\",\n  \"Ṍ\": \"Ṍ\",\n  \"Ṏ\": \"Ṏ\",\n  \"Ȭ\": \"Ȭ\",\n  \"Ō\": \"Ō\",\n  \"Ṓ\": \"Ṓ\",\n  \"Ṑ\": \"Ṑ\",\n  \"Ŏ\": \"Ŏ\",\n  \"Ǒ\": \"Ǒ\",\n  \"Ô\": \"Ô\",\n  \"Ố\": \"Ố\",\n  \"Ồ\": \"Ồ\",\n  \"Ỗ\": \"Ỗ\",\n  \"Ȯ\": \"Ȯ\",\n  \"Ȱ\": \"Ȱ\",\n  \"Ő\": \"Ő\",\n  \"Ṕ\": \"Ṕ\",\n  \"Ṗ\": \"Ṗ\",\n  \"Ŕ\": \"Ŕ\",\n  \"Ř\": \"Ř\",\n  \"Ṙ\": \"Ṙ\",\n  \"Ś\": \"Ś\",\n  \"Ṥ\": \"Ṥ\",\n  \"Š\": \"Š\",\n  \"Ṧ\": \"Ṧ\",\n  \"Ŝ\": \"Ŝ\",\n  \"Ṡ\": \"Ṡ\",\n  \"Ť\": \"Ť\",\n  \"Ṫ\": \"Ṫ\",\n  \"Ú\": \"Ú\",\n  \"Ù\": \"Ù\",\n  \"Ü\": \"Ü\",\n  \"Ǘ\": \"Ǘ\",\n  \"Ǜ\": \"Ǜ\",\n  \"Ǖ\": \"Ǖ\",\n  \"Ǚ\": \"Ǚ\",\n  \"Ũ\": \"Ũ\",\n  \"Ṹ\": \"Ṹ\",\n  \"Ū\": \"Ū\",\n  \"Ṻ\": \"Ṻ\",\n  \"Ŭ\": \"Ŭ\",\n  \"Ǔ\": \"Ǔ\",\n  \"Û\": \"Û\",\n  \"Ů\": \"Ů\",\n  \"Ű\": \"Ű\",\n  \"Ṽ\": \"Ṽ\",\n  \"Ẃ\": \"Ẃ\",\n  \"Ẁ\": \"Ẁ\",\n  \"Ẅ\": \"Ẅ\",\n  \"Ŵ\": \"Ŵ\",\n  \"Ẇ\": \"Ẇ\",\n  \"Ẍ\": \"Ẍ\",\n  \"Ẋ\": \"Ẋ\",\n  \"Ý\": \"Ý\",\n  \"Ỳ\": \"Ỳ\",\n  \"Ÿ\": \"Ÿ\",\n  \"Ỹ\": \"Ỹ\",\n  \"Ȳ\": \"Ȳ\",\n  \"Ŷ\": \"Ŷ\",\n  \"Ẏ\": \"Ẏ\",\n  \"Ź\": \"Ź\",\n  \"Ž\": \"Ž\",\n  \"Ẑ\": \"Ẑ\",\n  \"Ż\": \"Ż\",\n  \"ά\": \"ά\",\n  \"ὰ\": \"ὰ\",\n  \"ᾱ\": \"ᾱ\",\n  \"ᾰ\": \"ᾰ\",\n  \"έ\": \"έ\",\n  \"ὲ\": \"ὲ\",\n  \"ή\": \"ή\",\n  \"ὴ\": \"ὴ\",\n  \"ί\": \"ί\",\n  \"ὶ\": \"ὶ\",\n  \"ϊ\": \"ϊ\",\n  \"ΐ\": \"ΐ\",\n  \"ῒ\": \"ῒ\",\n  \"ῑ\": \"ῑ\",\n  \"ῐ\": \"ῐ\",\n  \"ό\": \"ό\",\n  \"ὸ\": \"ὸ\",\n  \"ύ\": \"ύ\",\n  \"ὺ\": \"ὺ\",\n  \"ϋ\": \"ϋ\",\n  \"ΰ\": \"ΰ\",\n  \"ῢ\": \"ῢ\",\n  \"ῡ\": \"ῡ\",\n  \"ῠ\": \"ῠ\",\n  \"ώ\": \"ώ\",\n  \"ὼ\": \"ὼ\",\n  \"Ύ\": \"Ύ\",\n  \"Ὺ\": \"Ὺ\",\n  \"Ϋ\": \"Ϋ\",\n  \"Ῡ\": \"Ῡ\",\n  \"Ῠ\": \"Ῠ\",\n  \"Ώ\": \"Ώ\",\n  \"Ὼ\": \"Ὼ\"\n};\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.fetch().text !== text) {\n      throw new ParseError(\"Expected '\" + text + \"', got '\" + this.fetch().text + \"'\", this.fetch());\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n\n\n  consume() {\n    this.nextToken = null;\n  }\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n\n\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n\n    return this.nextToken;\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    if (!this.settings.globalGroup) {\n      // Create a group namespace for the math expression.\n      // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n      this.gullet.beginGroup();\n    } // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    var parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\"); // End the group namespace for the expression\n\n    if (!this.settings.globalGroup) {\n      this.gullet.endGroup();\n    }\n\n    return parse;\n  }\n\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    var body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      var lex = this.fetch();\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n\n      var atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      } else if (atom.type === \"internal\") {\n        continue;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n      if (body[i].type === \"infix\") {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", body[i].token);\n        }\n\n        overIndex = i;\n        funcName = body[i].replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      var numerNode;\n      var denomNode;\n      var numerBody = body.slice(0, overIndex);\n      var denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      var node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  }\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n\n\n  handleSupSubscript(name) {\n    var symbolToken = this.fetch();\n    var symbol = symbolToken.text;\n    this.consume();\n    this.consumeSpaces(); // ignore spaces before sup/subscript argument\n\n    var group = this.parseGroup(name);\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  formatUnsupportedCmd(text) {\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    var textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    var colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseGroup(\"atom\", breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    var superscript;\n    var subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      var lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        if (base && base.type === \"op\") {\n          var limits = lex.text === \"\\\\limits\";\n          base.limits = limits;\n          base.alwaysHandleSupSub = true;\n        } else if (base && base.type === \"operatorname\") {\n          if (base.alwaysHandleSupSub) {\n            base.limits = lex.text === \"\\\\limits\";\n          }\n        } else {\n          throw new ParseError(\"Limit controls must follow a math operator\", lex);\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        var prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        var primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name) {\n    var token = this.fetch();\n    var func = token.text;\n    var funcData = functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    this.consume(); // consume command token\n\n    if (name && name !== \"atom\" && !funcData.allowedInArgument) {\n      throw new ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    var {\n      args,\n      optArgs\n    } = this.parseArguments(func, funcData);\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    var context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    var func = functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(\"No function handler for \" + name);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    var args = [];\n    var optArgs = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n      var argType = funcData.argTypes && funcData.argTypes[i];\n      var isOptional = i < funcData.numOptionalArgs;\n\n      if (funcData.primitive && argType == null || // \\sqrt expands into primitive if optional argument doesn't exist\n      funcData.type === \"sqrt\" && i === 1 && optArgs[0] == null) {\n        argType = \"primitive\";\n      }\n\n      var arg = this.parseGroupOfType(\"argument to '\" + func + \"'\", argType, isOptional);\n\n      if (isOptional) {\n        optArgs.push(arg);\n      } else if (arg != null) {\n        args.push(arg);\n      } else {\n        // should be unreachable\n        throw new ParseError(\"Null argument, please report this as a bug\");\n      }\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional) {\n    switch (type) {\n      case \"color\":\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional);\n\n      case \"math\":\n      case \"text\":\n        return this.parseArgumentGroup(optional, type);\n\n      case \"hbox\":\n        {\n          // hbox argument type wraps the argument in the equivalent of\n          // \\hbox, which is like \\text but switching to \\textstyle size.\n          var group = this.parseArgumentGroup(optional, \"text\");\n          return group != null ? {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            style: \"text\" // simulate \\textstyle\n\n          } : null;\n        }\n\n      case \"raw\":\n        {\n          var token = this.parseStringGroup(\"raw\", optional);\n          return token != null ? {\n            type: \"raw\",\n            mode: \"text\",\n            string: token.text\n          } : null;\n        }\n\n      case \"primitive\":\n        {\n          if (optional) {\n            throw new ParseError(\"A primitive argument cannot be optional\");\n          }\n\n          var _group = this.parseGroup(name);\n\n          if (_group == null) {\n            throw new ParseError(\"Expected group as \" + name, this.fetch());\n          }\n\n          return _group;\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseArgumentGroup(optional);\n\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n\n\n  consumeSpaces() {\n    while (this.fetch().text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\") {\n      str += nextToken.text;\n      this.consume();\n    }\n\n    this.consume(); // consume the end of the argument\n\n    argToken.text = str;\n    return argToken;\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName) {\n    var firstToken = this.fetch();\n    var lastToken = firstToken;\n    var str = \"\";\n    var nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    var res = this.parseStringGroup(\"color\", optional);\n\n    if (res == null) {\n      return null;\n    }\n\n    var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    var color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    var res;\n    var isBlank = false; // don't expand before parseStringGroup\n\n    this.gullet.consumeSpaces();\n\n    if (!optional && this.gullet.future().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    var data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n\n\n  parseUrlGroup(optional) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n\n    this.gullet.lexer.setCatcode(\"~\", 12); // other character\n\n    var res = this.parseStringGroup(\"url\", optional);\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n\n    this.gullet.lexer.setCatcode(\"~\", 13); // active character\n\n    if (res == null) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    var url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * Parses an argument with the mode specified.\n   */\n\n\n  parseArgumentGroup(optional, mode) {\n    var argToken = this.gullet.scanArgument(optional);\n\n    if (argToken == null) {\n      return null;\n    }\n\n    var outerMode = this.mode;\n\n    if (mode) {\n      // Switch to specified mode\n      this.switchMode(mode);\n    }\n\n    this.gullet.beginGroup();\n    var expression = this.parseExpression(false, \"EOF\"); // TODO: find an alternative way to denote the end\n\n    this.expect(\"EOF\"); // expect the end of the argument\n\n    this.gullet.endGroup();\n    var result = {\n      type: \"ordgroup\",\n      mode: this.mode,\n      loc: argToken.loc,\n      body: expression\n    };\n\n    if (mode) {\n      // Switch mode back\n      this.switchMode(outerMode);\n    }\n\n    return result;\n  }\n  /**\n   * Parses an ordinary group, which is either a single nucleus (like \"x\")\n   * or an expression in braces (like \"{x+y}\") or an implicit group, a group\n   * that starts at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  breakOnTokenText) {\n    var firstToken = this.fetch();\n    var text = firstToken.text;\n    var result; // Try to parse an open brace or \\begingroup\n\n    if (text === \"{\" || text === \"\\\\begingroup\") {\n      this.consume();\n      var groupEnd = text === \"{\" ? \"}\" : \"\\\\endgroup\";\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      var expression = this.parseExpression(false, groupEnd);\n      var lastToken = this.fetch();\n      this.expect(groupEnd); // Check that we got a matching closing brace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    var n = group.length - 1;\n\n    for (var i = 0; i < n; ++i) {\n      var a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      var v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n\n\n  parseSymbol() {\n    var nucleus = this.fetch();\n    var text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      var arg = text.slice(5);\n      var star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    var match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    var symbol;\n\n    if (symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n      }\n\n      var group = symbols[this.mode][text].group;\n      var loc = SourceLocation.range(nucleus);\n      var s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        var family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      } // $FlowFixMe\n\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n        }\n      } // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.  Setting `mode: this.mode` is\n      // another natural choice (the user requested math mode), but\n      // this makes it more difficult for getCharacterMetrics() to\n      // distinguish Unicode characters without metrics and those for\n      // which we want to simulate the letter M.\n\n\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (var i = 0; i < match[0].length; i++) {\n        var accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n        }\n\n        var command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          // $FlowFixMe\n          base: symbol\n        };\n      }\n    } // $FlowFixMe\n\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  var parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  var tree = parser.parse(); // Prevent a color definition from persisting between calls to katex.render().\n\n  delete parser.gullet.macros.current[\"\\\\current@color\"];\n  delete parser.gullet.macros.current[\"\\\\color\"]; // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* eslint no-console:0 */\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  var node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function render() {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nvar renderToString = function renderToString(expression, options) {\n  var markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nvar generateParseTree = function generateParseTree(expression, options) {\n  var settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nvar renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n\n  var node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", \"color:\" + options.errorColor);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nvar renderToDomTree = function renderToDomTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nvar renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  var settings = new Settings(options);\n\n  try {\n    var tree = parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nvar katex = {\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.13.13\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span,\n    Anchor,\n    SymbolNode,\n    SvgNode,\n    PathNode,\n    LineNode\n  }\n};\n\nexport default katex;\n","/**\n * @constructor\n * @param {!{patterns: !Object, leftmin: !number, rightmin: !number}} language The language pattern file. Compatible with Hyphenator.js.\n */\nfunction Hypher(language) {\n    var exceptions = [],\n        i = 0;\n    /**\n     * @type {!Hypher.TrieNode}\n     */\n    this.trie = this.createTrie(language['patterns']);\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.leftMin = language['leftmin'];\n\n    /**\n     * @type {!number}\n     * @const\n     */\n    this.rightMin = language['rightmin'];\n\n    /**\n     * @type {!Object.<string, !Array.<string>>}\n     */\n    this.exceptions = {};\n\n    if (language['exceptions']) {\n        exceptions = language['exceptions'].split(/,\\s?/g);\n\n        for (; i < exceptions.length; i += 1) {\n            this.exceptions[exceptions[i].replace(/\\u2027/g, '').toLowerCase()] = new RegExp('(' + exceptions[i].split('\\u2027').join(')(') + ')', 'i');\n        }\n    }\n}\n\n/**\n * @typedef {{_points: !Array.<number>}}\n */\nHypher.TrieNode;\n\n/**\n * Creates a trie from a language pattern.\n * @private\n * @param {!Object} patternObject An object with language patterns.\n * @return {!Hypher.TrieNode} An object trie.\n */\nHypher.prototype.createTrie = function (patternObject) {\n    var size = 0,\n        i = 0,\n        c = 0,\n        p = 0,\n        chars = null,\n        points = null,\n        codePoint = null,\n        t = null,\n        tree = {\n            _points: []\n        },\n        patterns;\n\n    for (size in patternObject) {\n        if (patternObject.hasOwnProperty(size)) {\n            patterns = patternObject[size].match(new RegExp('.{1,' + (+size) + '}', 'g'));\n\n            for (i = 0; i < patterns.length; i += 1) {\n                chars = patterns[i].replace(/[0-9]/g, '').split('');\n                points = patterns[i].split(/\\D/);\n                t = tree;\n\n                for (c = 0; c < chars.length; c += 1) {\n                    codePoint = chars[c].charCodeAt(0);\n\n                    if (!t[codePoint]) {\n                        t[codePoint] = {};\n                    }\n                    t = t[codePoint];\n                }\n\n                t._points = [];\n\n                for (p = 0; p < points.length; p += 1) {\n                    t._points[p] = points[p] || 0;\n                }\n            }\n        }\n    }\n    return tree;\n};\n\n/**\n * Hyphenates a text.\n *\n * @param {!string} str The text to hyphenate.\n * @return {!string} The same text with soft hyphens inserted in the right positions.\n */\nHypher.prototype.hyphenateText = function (str, minLength) {\n    minLength = minLength || 4;\n\n    // Regexp(\"\\b\", \"g\") splits on word boundaries,\n    // compound separators and ZWNJ so we don't need\n    // any special cases for those characters. Unfortunately\n    // it does not support unicode word boundaries, so\n    // we implement it manually.\n    var words = str.split(/([a-zA-Z0-9_\\u0027\\u00AD\\u00DF-\\u00EA\\u00EB\\u00EC-\\u00EF\\u00F1-\\u00F6\\u00F8-\\u00FD\\u0101\\u0103\\u0105\\u0107\\u0109\\u010D\\u010F\\u0111\\u0113\\u0117\\u0119\\u011B\\u011D\\u011F\\u0123\\u0125\\u012B\\u012F\\u0131\\u0135\\u0137\\u013C\\u013E\\u0142\\u0144\\u0146\\u0148\\u0151\\u0153\\u0155\\u0159\\u015B\\u015D\\u015F\\u0161\\u0165\\u016B\\u016D\\u016F\\u0171\\u0173\\u017A\\u017C\\u017E\\u017F\\u0219\\u021B\\u02BC\\u0390\\u03AC-\\u03CE\\u03F2\\u0401\\u0410-\\u044F\\u0451\\u0454\\u0456\\u0457\\u045E\\u0491\\u0531-\\u0556\\u0561-\\u0587\\u0902\\u0903\\u0905-\\u090B\\u090E-\\u0910\\u0912\\u0914-\\u0928\\u092A-\\u0939\\u093E-\\u0943\\u0946-\\u0948\\u094A-\\u094D\\u0982\\u0983\\u0985-\\u098B\\u098F\\u0990\\u0994-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BE-\\u09C3\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u0A02\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A14-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A82\\u0A83\\u0A85-\\u0A8B\\u0A8F\\u0A90\\u0A94-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABE-\\u0AC3\\u0AC7\\u0AC8\\u0ACB-\\u0ACD\\u0B02\\u0B03\\u0B05-\\u0B0B\\u0B0F\\u0B10\\u0B14-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3E-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B57\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C02\\u0C03\\u0C05-\\u0C0B\\u0C0E-\\u0C10\\u0C12\\u0C14-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C43\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C82\\u0C83\\u0C85-\\u0C8B\\u0C8E-\\u0C90\\u0C92\\u0C94-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC3\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u1F00-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB2-\\u1FB4\\u1FB6\\u1FB7\\u1FBD\\u1FBF\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD2\\u1FD3\\u1FD6\\u1FD7\\u1FE2-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u200D\\u2019]+)/gi);\n\n    for (var i = 0; i < words.length; i += 1) {\n        if (words[i].indexOf('/') !== -1) {\n            // Don't insert a zero width space if the slash is at the beginning or end\n            // of the text, or right after or before a space.\n            if (i !== 0 && i !== words.length - 1 && !(/\\s+\\/|\\/\\s+/.test(words[i]))) {\n                words[i] += '\\u200B';\n            }\n        } else if (words[i].length > minLength) {\n            words[i] = this.hyphenate(words[i]).join('\\u00AD');\n        }\n    }\n    return words.join('');\n};\n\n/**\n * Hyphenates a word.\n *\n * @param {!string} word The word to hyphenate\n * @return {!Array.<!string>} An array of word fragments indicating valid hyphenation points.\n */\nHypher.prototype.hyphenate = function (word) {\n    var characters,\n        characterPoints = [],\n        originalCharacters,\n        i,\n        j,\n        k,\n        node,\n        points = [],\n        wordLength,\n        lowerCaseWord = word.toLowerCase(),\n        nodePoints,\n        nodePointsLength,\n        m = Math.max,\n        trie = this.trie,\n        result = [''];\n\n    if (this.exceptions.hasOwnProperty(lowerCaseWord)) {\n        return word.match(this.exceptions[lowerCaseWord]).slice(1);\n    }\n\n    if (word.indexOf('\\u00AD') !== -1) {\n        return [word];\n    }\n\n    word = '_' + word + '_';\n\n    characters = word.toLowerCase().split('');\n    originalCharacters = word.split('');\n    wordLength = characters.length;\n\n    for (i = 0; i < wordLength; i += 1) {\n        points[i] = 0;\n        characterPoints[i] = characters[i].charCodeAt(0);\n    }\n\n    for (i = 0; i < wordLength; i += 1) {\n        node = trie;\n        for (j = i; j < wordLength; j += 1) {\n            node = node[characterPoints[j]];\n\n            if (node) {\n                nodePoints = node._points;\n                if (nodePoints) {\n                    for (k = 0, nodePointsLength = nodePoints.length; k < nodePointsLength; k += 1) {\n                        points[i + k] = m(points[i + k], nodePoints[k]);\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    for (i = 1; i < wordLength - 1; i += 1) {\n        if (i > this.leftMin && i < (wordLength - this.rightMin) && points[i] % 2) {\n            result.push(originalCharacters[i]);\n        } else {\n            result[result.length - 1] += originalCharacters[i];\n        }\n    }\n\n    return result;\n};\n\nmodule.exports = Hypher;\n","// The en-US hyphenation patterns are retrieved from\n// http://tug_org/svn/texhyphen/trunk/collaboration/repository/hyphenator/\nmodule.exports = {\n\t'id': ['en-us', 'en'],\n\t'leftmin': 2,\n\t'rightmin': 3,\n\t'patterns': {\n\t\t3 : \"x1qei2e1je1f1to2tlou2w3c1tue1q4tvtw41tyo1q4tz4tcd2yd1wd1v1du1ta4eu1pas4y1droo2d1psw24sv1dod1m1fad1j1su4fdo2n4fh1fi4fm4fn1fopd42ft3fu1fy1ga2sss1ru5jd5cd1bg3bgd44uk2ok1cyo5jgl2g1m4pf4pg1gog3p1gr1soc1qgs2oi2g3w1gysk21coc5nh1bck1h1fh1h4hk1zo1ci4zms2hh1w2ch5zl2idc3c2us2igi3hi3j4ik1cab1vsa22btr1w4bp2io2ipu3u4irbk4b1j1va2ze2bf4oar1p4nz4zbi1u2iv4iy5ja1jeza1y1wk1bk3fkh4k1ikk4k1lk1mk5tk1w2ldr1mn1t2lfr1lr3j4ljl1l2lm2lp4ltn1rrh4v4yn1q1ly1maw1brg2r1fwi24ao2mhw4kr1cw5p4mkm1m1mo4wtwy4x1ar1ba2nn5mx1ex1h4mtx3i1muqu2p3wx3o4mwa1jx3p1naai2x1ua2fxx4y1ba2dn1jy1cn3fpr2y1dy1i\",\n\t\t4 : \"4dryn2itni4on1inn1im_up3nik4ni4dy5giye4tyes4_ye44ab_nhe4nha4abe2n2gyn1guy1ery5eep2pe4abry3lay3lone4wne4v1nesy3chn1erne2q3neo1nenp2seps4hy2cey5lu2nedne2cyme44nk2y5at2adine2b2ne_y5ac2p1tp2ten1den1cun1cryn5dp2th4adup4twpub3ae4rxu3ayn5gaff4pue4n2au4p1ppuf4n2atag1ipu4mag1na2gon4asx3tix1t2pu2na4gya3haa3heah4la3ho_ti2a5ian2an5puspu2tnak4_th2n1kl_te4_ta4mu4u4mupmun23mum2alex4ob_sy25ynxal1i_st4y1o4xi5cxi5a4alm_si2_sh2m5sixhu4m4sh4m3r4amam2py2rabm2pixhi2yo5dr2ai4m1pmo2vmos2x2edmo2r4n1la2mor2asx3c2xas5yom4x4apxam3nme44mokrbi2nne44andy4osp4ot3noemn4omn4a4m1n4nog4m1l2angws4l1posw3shwri4wra4yp3iwom11wo2m2izrb4ow4nopo4pr2cem2isrd2iano4mig4y3pomi3awiz55mi_no4n4m1fme4v2re_wir42mes1menme2mme2gre1o2med4me_4nop4m5c4m1bwil21noureu2whi4w3ev4maprev2w1era2plpo4crfu4r4fyy5pu2maha3pu2mab2a2rn1p4npi44lyb4lya2p3nwam42l1w1lut4luplu3or1glluf4lu5a2wacltu2y3rol1tr4vv4r3guyr4rl1te4rh_nru4ar1il2sel4sc4l1rl5prl4plys4c4lovri3ar4ib4lof3lo_ar2par3q_os3ll4oll2i4as_ri1o3vokl2levoi44p1mlka35vo_ns4cas4ll1izr4iqr2is3vivl1it3lika2tan2sen2slrle42l3hlgo3l5gal5frns3mvi4p3ley_od2r2meles24athr4myle2al3drv1inldi4l2de2vilnt2il3civik4lce42l1b4lavv3ifrno4r3nua1trr2ocnt4sy4sok4syks4la2tuk4sck3ouko5ryss4a2tyau4b4klyys1tnu1akis4au3rki4pro4ek4ima2va5ki_nu4dn4umn3uokes4k1erav1irok2ke4g1keek2ed_me2aw3ikal4aws4k5agk3ab3ka_aye4ays4veg3jo4p5ba_4vedjew3n1v24ve_ja4pzar23vatizi4n1w41batba4z2b1bb2beix4o4i5w4b1d4be_rox5nym4nyp4n3za4ittr3por1r4i1ti1bel2ith2itei2su4rs2r1sars4cr2seis1p3betvag4i2sor1shbe3wr1sioad34b3hbi2bbi4d3bie3isf4ise2is_1bilr1sp5va_r5sw_le2uz4eir1ibi2tuxu3r1tiu1v2i1raze4nze4pb2l2uu4mo1biip3iz1eripe4b4louts44b1m4b3no3br3bodi4osbo4eru3aio4mi1ol4io_3booo1ce4inyin1u2insru2n2inn4inl4inkrv4e2inioch42iner3vo4indpi2np4idbt4lb4tob3trry4cry3t2in_o4elbu4ni2muim1i5saiil3v4ilnil1iil5fs1apo3er4b5w5by_bys4_in1sau4i1lazet4u2suo3ev2z1ii2go4igius1p5saw4s5bo2fi4ifti3fl4if_i3etsch2usc22ie4i2dui4dri2diid5dpi3au3ruz4ils1cuz4is4s5d4se_se4a2ce_2ici4ich3ceii1bri5bo1ceni1blse2g5seiibe43cepi2aniam4ur2li2al2i1acet4hy2scew41phy4ch_5phuhu4thu4gche2h4tyh4shur1durc44hr44h5p5sev5sexu1ra4s3fup3p2s3gph3t2sh_ho4g2h1n_he23ciau3pl4h1mci5ch2lozo4m4ciihi2vhi4p2cim2cin4phsu1peu1ouo1geu5osheu4sho4he4th1es4shwun5zun5ysi1bunu45cizo4glck3ihep5he2nh4ed1sioph2l5hazsi2rcly4zte4_ge21siscoe22cog5siu1siv5siz_ga24skes1l2s2leha4m2s1ms3ma1ogyo1h2u1ni3gus3gun2guegu4acov1gth3_eu3g4ros1n4_es3u2nez4zyum2pu1mi3som_ev2oig4cri2gov15goos4opgon2ul5v5goeu3lugob53go_2c1t4ph_g1nog1nic2te4sov4ulsgn4ag4myc4twcud5c4ufc4uipe2t3glo1gleul2igla4_eg23giz3cun5givgi4u3gir5gio1cusul4e2spagil4g1ic5gi__eb4cze41d2a5da_u1laggo44daf2dagg2gege4v1geo1gen2ged3dato1la2ge_ol2dol2i5daypek4p4eed1d42de_4gazol2tuiv3ol2vo2lys1sa2gamgaf4o2meui4n2ui2pe2cd4em4fugi4jku3fl3ufaf2tyf4to1denu4du4pe_2f3sfri2de1ps1si4f5pfos5d3eqs4sls4snfo2rss2tdes25fon4p1b_ci23payss5w2st_de1tf4l2de1v2fin4dey4d1fd4gast2idg1id2gyd1h25di_ud5dfi3au4cy_ch4pav43didu3cud1iff2fyu3crd1inst4r4f1ffev4fer11dio2fedfe4bdir2s2ty4fe_dis1on1au3ca4f5bon1c2ondd5k25far4fagpa1peys45eyc1exps4ul2dlyp4ale3whon3s3do_e1wa5doee5vud4oge1visu2msu2nub4euav4su2rp4ai6rk_d4or3dosu1atdo4v3doxp4adoo4k4swoo2padre4eus4e3upe5un2ophet5z4syc3syl4y3hoy1ads4pd4swd4syd2tho4wo3ta_du2c4etn2tabta2luac4es4wdu4g2ess4uabdu4n4duptav4st5bow1io1pr5dyn2tawe1sp2t1bop1uead1tz4et4chopy5ea4l4t1d4te_2tyle1si4esh1tee4tyat1cr4twoteg4es2c4eru1teoer1s2eroea2tte4po1rat1wh3tusea2v3teu3texer1i2e1ber1h4tey2t1f4t1ge3br2th_th2e4thle1ce3tumec2i2ths2erb1tia4tueer1aou5vtud2tif22tige1potu1aou4lttu41timt5toos4le1cre2pat4swe5owe1cue4ottsh4eos4e1ort4sce3ol4edieo2ge5of1tio4eno4enn5tiq4edoti4u1tive3my1tiz4othee2ct5laee2ft5lo4t1mee2mtme4e1meem5bcoi4to3be5exo1ry2tof1effel2iel2ftos24t1pe1la1traos2ceig2ei5de5ico2soe1h45egyeg5n\",\n\t\t5 : \"_ach4e4go_e4goseg1ule5gurtre5feg4iceher4eg5ibeger44egaltre4mei5gle3imbe3infe1ingtra3beir4deit3eei3the5ity5triae4jud3efiteki4nek4la2trime4la_e4lactri4v4toute4law5toure3leaefil45elece4ledto2rae5len4tonye1lestro3ve4fic4tonoto3mytom4bto2mato5ice5limto2gre3lioe2listru5i4todo4ellaee4tyello4e5locel5ogeest4el2shel4tae5ludel5uge4mace4mage5man2t1n2ee2s4ee4p1e2mele4metee4naemi4eee4lyeel3i3tled3tle_e4mistlan4eed3iem3iztrus4emo4gti3zaem3pie4mule4dulemu3ne4dritiv4aedon2e4dolti3tle5neae5neeen3emtis4pti5sotis4m3tisee3newti3sae5niee5nile3nioedi5zen3ite5niu5enized1ited3imeno4ge4nosen3oven4swti5oc4t1s2en3uaen5ufe3ny_4en3zed3ibe3diae4oi4ede4s3tini4ed3deo3ret2ina2e2dae4culeo4toe5outec4te4t3t2t4tes2t1ine5pel4timpe2corephe4e4plie2col5tigutu3arti5fytu4bie3pro3tienep4sh5tidie4putt4icoeci4t4tick2ti2bec3imera4bti4aber3ar4tuf45tu3ier4bler3che4cib2ere_4thooecca54thil3thet4thea3turethan4e4cade4bitere4qe4ben5turieret4tur5oeav5oeav5itu5ry4tess4tes_ter5ve1rio4eriter4iueri4v1terier3m4ter3cte5pe4t1waer3noeast3er5obe5rocero4rer1oue3assea5sp1tent4ertler3twtwis4eru4t3tende1s4a3tenc5telsear2te2scateli4e3scres5cue1s2ee2sec3tel_te5giear5kear4cte5diear3ae3sha2t1ede5ande2sice2sid5tecttece44teattype3ty5phesi4uea4gees4mie2sole3acte2sone1a4bdys5pdy4sedu4petaun4d3uleta5sytas4e4tare4tarctar4ata5pl2estrta5mo4talke2surtal3idu5eleta4bta5lae3teoua5naet1ic4taf4etin4ta5doe5tir4taciuan4id1ucad1u1ae3trae3tre2d1s2syn5ouar2d4drowet3uaet5ymdro4pdril4dri4b5dreneu3rouar3ieute44draieu5truar3te2vasdop4pe5veadoo3ddoni4u4belsum3iev1erdoli4do4laev3idevi4le4vinevi4ve5voc2d5ofdo5dee4wage5wee4d1n4ewil54d5lue3wit2d3lou3ber5eye_u1b4i3dledfa3blfab3rfa4ce3dle_fain4suit3su5issu2g34d5lasu4b3fa3tasu1al4fato1di1vd2iti5disiuci4bfeas4di1redi4pl4feca5fectdio5gfe3life4mofen2d4st3wuc4it5ferr5diniucle3f4fesf4fie4stry1dinaf4flydi3ge3dictd4icedia5bs4tops1tle5stirs3tifs4ties1ticfic4is5tias4ti_4ficsfi3cuud3ers3thefil5iste2w4filyudev45finas4tedfi2nes2talfin4ns2tagde2tode4suflin4u1dicf2ly5ud5isu5ditde1scd2es_der5sfon4tu4don5dermss4lid4erhfor4is4siede2pudepi4fra4tf5reade3pade3nufril4frol5ud4side3nou4eneuens4ug5infu5el5dem_s5setfu5nefu3rifusi4fus4s4futade5lode5if4dee_5gal_3galiga3lo2d1eds3selg5amos2s5cssas3u1ing4ganouir4mgass4gath3uita4deaf5dav5e5dav44dato4darygeez44spotspor4s4pon4gelydark5s4ply4spio4geno4genydard5ge3omg4ery5gesigeth54getoge4tydan3g4g1g2da2m2g3gergglu5dach4gh3inspil4gh4to4cutr1gi4agia5rula5bspho5g4icogien5s2pheulch42sperspa4n5spai3c4utu1lenul4gigir4lg3islcu5pycu3picu4mic3umecu2maso5vi5glasu5liagli4bg3lig5culiglo3r4ul3mctu4ru1l4og4na_c3terul1tig2ning4nio4ultug4noncta4b4c3s2cru4dul5ulsor5dgo3isum5absor5ccris4go3nic4rinson4gsona45gos_cri5fcre4vum4bi5credg4raigran25solvsoft3so4ceunat44graygre4nco5zi4gritcoz5egruf4cow5ag5stecove4cos4es5menun4ersmel44corbco4pl4gu4tco3pacon5tsman3gy5racon3ghach4hae4mhae4th5aguha3lac4onecon4aun4ims3latu2ninhan4gs3ket5colocol5ihan4kuni3vhap3lhap5ttras4co4grhar2dco5agsir5aclim45sionhas5shaun44clichaz3acle4m1head3hearun3s4s3ingun4sws2ina2s1in4silysil4eh5elohem4p4clarhena45sidiheo5r1c4l4h4eras5icc2c1itu4orsh3ernshor4h3eryci3phshon34cipecion45cinoc1ingc4inahi5anhi4cohigh5h4il2shiv5h4ina3ship3cilihir4lhi3rohir4phir4rsh3iohis4ssh1inci4lau5pia4h1l4hlan44cier5shevcia5rhmet4ch4tish1erh5ods3cho2hoge4chi2z3chitho4mahome3hon4aho5ny3hoodhoon45chiouptu44ura_ho5ruhos4esew4ihos1p1housu4ragses5tu4rasur4behree5se5shs1e4s4h1s24chedh4tarht1enht5esur4fru3rifser4os4erlhun4tsen5gur1inu3riosen4dhy3pehy3phu1ritces5tur3iz4cesa4sencur4no4iancian3i4semeia5peiass45selv5selfi4atu3centse1le4ceniib5iaib3inseg3ruros43cencib3li3cell5cel_s5edli5bun4icam5icap4icar4s4ed3secticas5i4cayiccu44iceour4pe4ced_i5cidsea5wi2cipseas4i4clyur4pi4i1cr5icrai4cryic4teictu2ccon4urti4ic4umic5uoi3curcci4ai4daiccha5ca4thscof4ide4s4casys4cliscle5i5dieid3ios4choid1itid5iui3dlei4domid3owu5sadu5sanid5uous4apied4ecany4ield3s4cesien4ei5enn4sceii1er_i3esci1estus3ciuse5as4cedscav5if4frsca4pi3fieu5siau3siccan4eiga5bcan5d4calous5sli3gibig3ilig3inig3iti4g4lus1trig3orig5oti5greigu5iig1ur2c5ah4i5i44cag4cach4ca1blusur4sat3usa5tab5utoi3legil1erilev4uta4b4butail3iail2ibil3io3sanc2ilitil2izsal4t5bustil3oqil4tyil5uru3tati4magsa5losal4m4ute_4imetbu3res3act5sack2s1ab4imitim4nii3mon4utelbumi4bu3libu4ga4inav4utenbsor42b5s2u4tis4briti3neervi4vr3vic4inga4inger3vey4ingir3ven4ingo4inguu4t1li5ni_i4niain3ioin1isbo4tor5uscrunk5both5b5ota5bos42i1no5boriino4si4not5borein3seru3in2int_ru4glbor5di5nusut5of5bor_uto5gioge4io2grbon4au5tonru3enu4touion3iio5phior3ibod3iio5thi5otiio4toi4ourbne5gb3lisrt4shblen4ip4icr3triip3uli3quar4tivr3tigrti4db4le_b5itzira4bi4racird5ert5ibi4refbi3tri4resir5gibi5ourte5oir4isr3tebr4tagbin4diro4gvac3uir5ul2b3ifis5agis3arisas52is1cis3chbi4eris3erbi5enrson3be5yor5shais3ibisi4di5sisbe3tw4is4krs3es4ismsbe5trr3secva4geis2piis4py4is1sbe3sp4bes4be5nuval5ois1teis1tirrys4rros44be5mis5us4ita_rron4i4tagrri4vi3tani3tatbe3lorri4or4reoit4esbe1libe5gu4itiarre4frre4cbe3giit3igbe3dii2tim2itio4itisrp4h4r3pet4itonr4peait5rybe3debe3dai5tudit3ul4itz_4be2dbeat3beak4ro4varo4tyros4sro5roiv5ioiv1itror3i5root1roomval1ub3berva5mo4izarva5piron4eban3ijac4qban4ebal1ajer5srom4prom4iba4geazz5i5judgay5alax4idax4ickais4aw4ly3awaya1vorav5ocav3igke5liv3el_ve4lov4elyro1feke4tyv4erdv4e2sa5vanav3ag5k2ick4illkilo5au1thk4in_4ves_ro3crkin4gve4teaun5dk5ishau4l2au3gu4kleyaugh3ve4tyk5nes1k2noat3ulkosh4at5uekro5n4k1s2at5uaat4that5te5vianat4sk5vidil4abolaci4l4adela3dylag4nlam3o3landrob3la4tosr4noular4glar3ilas4ea4topr3nivr3nita2tomr5nica4toglbin44l1c2vi5gnat3ifat1ica5tiar3neyr5net4ati_ld5isat4hol4driv2incle4bileft55leg_5leggr4nerr3nel4len_3lencr4nar1lentle3phle4prvin5dler4e3lergr3mitl4eroat5evr4mio5lesq3lessr3menl3eva4vingrma5cvio3lvi1ou4leyevi5rovi3so4l1g4vi3sulgar3l4gesate5cat5apli4agli2amr3lo4li4asr4lisli5bir4ligr2led4lics4vitil4icul3icyl3idaat5ac3lidirk4lel4iffli4flr3ket3lighvit3r4vityriv3iri2tulim3ili4moris4pl4inar3ishris4clin3ir4is_li5og4l4iqlis4pas1trl2it_as4shas5phri2pla4socask3ia3sicl3kallka4ta3sibl4lawashi4l5leal3lecl3legl3lel5riphas4abar2shrin4grin4ear4sarin4dr2inal5lowarre4l5met3rimol4modlmon42l1n2a3roorim5ilo4civo4la5rigil5ogo3loguri5et5longlon4iri1erlood5r4icolop3il3opmlora44ricir4icerib3a5los_v5oleri4agria4blos4tlo4taar2mi2loutar2izar3iolpa5bl3phal5phi4rhall3pit5voltar4im3volv2l1s2vom5ivori4l4siear4fllt5agar4fivo4rylten4vo4talth3ia3reeltis4ar4drw5ablrgo4naraw4lu3brluch4lu3cilu3enwag5olu5idlu4ma5lumia5raur5gitwait5luo3rw5al_luss4r5gisar4atl5venrgi4nara3pwar4tar3alwas4tly5mely3no2lys4l5ysewa1teaque5ma2car3gicma4clr3get5magnwed4nmaid54maldrg3erweet3wee5vwel4lapoc5re4whwest3ap3in4aphires2tr4es_mar3vre5rumas4emas1t5matemath3rero4r4eriap5atr1er4m5bilre1pumbi4vapar4a5nuran3ul4med_an3uare5lure1lian4twre5itmel4tan2trre4fy4antomen4are3fire2fe4menemen4imens4re1de3ment2r2edme5onre4awwin4g5reavme4tare3anme1tere1alm4etr3wiserdin4rdi4aan4stwith3an2span4snan2samid4amid4gan5otwl4esr4dalm4illmin4a3mindrcum3rc4itr3charcen4min4tm4inumiot4wl3ina3niumis5lan3ita3nip4mithan3ioan1gla3neuws4per2bina3nena5neem4ninw5s4tan1dl4mocrrbi4fmo2d1mo4gomois2xac5ex4agor4bagmo3mer4baba3narrau4ta5monrare4rar5cra5nor4aniam1inr2amiam5ifra4lomo3spmoth3m5ouf3mousam3icxer4ixe5roraf4tr5aclm3petra3bixhil5mpi4aam3ag3quetm5pirmp5is3quer2que_qua5vmpov5mp4tram5ab3alyz4m1s25alyt4alysa4ly_ali4exi5di5multx4ime4aldia4laral3adal5abak1enain5opu3trn4abu4nac_na4can5act5putexpe3dna4lia4i4n4naltai5lya3ic_pur4rag5ulnank4nar3c4narenar3inar4ln5arm3agognas4c4ag4l4ageupul3cage4oaga4na4gab3nautnav4e4n1b4ncar5ad5umn3chaa3ducptu4rpti3mnc1innc4itad4suad3owad4len4dain5dana5diua3ditndi4ba3dion1ditn3dizn5ducndu4rnd2we3yar4n3eara3dianeb3uac4um5neckac3ulp4siba3cio5negene4laac1inne5mine4moa3cie4nene4a2cine4poyc5erac1er2p1s2pro1tn2erepro3lner4rych4e2nes_4nesp2nest4neswpri4sycom4n5evea4carab3uln4gabn3gelpre3vpre3rycot4ng5han3gibng1inn5gitn4glangov4ng5shabi5an4gumy4erf4n1h4a5bannhab3a5bal3n4iani3anni4apni3bani4bl_us5ani5dini4erni2fip3petn5igr_ure3_un3up3per_un5op3pennin4g_un5k5nis_p5pel_un1en4ithp4ped_un1ani3tr_to4pympa3_til4n3ketnk3inyn5ic_se2ny4o5gy4onsnmet44n1n2_ru4d5pounnni4vnob4lpo4tan5ocly4ped_ro4qyper5noge4pos1s_ri4gpo4ry1p4or_res2no4mono3my_ree2po4ninon5ipoin2y4poc5po4gpo5em5pod_4noscnos4enos5tno5tayp2ta3noun_ra4cnowl3_pi2tyra5m_pi4eyr5ia_out3_oth32n1s2ns5ab_or3t_or1d_or3cplu4mnsid1nsig4y3s2eys3ion4socns4pen5spiploi4_odd5nta4bpli4n_ni4cn5tib4plignti2fpli3a3plannti4p1p2l23ysis2p3k2ys3ta_mis1nu5enpi2tun3uinp3ithysur4nu1men5umi3nu4nyt3icnu3trz5a2b_li4t_li3o_li2n_li4g_lev1_lep5_len4pion4oard3oas4e3pi1ooat5ip4inoo5barobe4l_la4mo2binpind4_ju3rob3ul_is4i_ir5rp4in_ocif3o4cil_in3so4codpi3lopi3enocre33piec5pidipi3dep5ida_in2kod3icodi3oo2do4odor3pi4cypian4_ine2o5engze3rooe4ta_im3m_id4l_hov5_hi3b_het3_hes3_go4r_gi4bpho4ro5geoo4gero3gie3phobog3it_gi5azo5ol3phizo4groogu5i4z1z22ogyn_fes3ohab5_eye55phieph1icoiff4_en3sph4ero3ing_en3go5ism_to2qans3v_el5d_eer4bbi4to3kenok5iebio5mo4lanper1v4chs_old1eol3erpe5ruo3letol4fi_du4co3liaper3op4ernp4erio5lilpe5ono5liop4encpe4la_do4tpee4do5livcin2q3pediolo4rol5pld3tabol3ub3pedeol3uno5lusedg1le1loaom5ahoma5l2p2edom2beom4bl_de3o3fich3pe4ao4met_co4ro3mia_co3ek3shao5midom1inll1fll3teapa2teo4monom3pi3pare_ca4tlue1pon4aco3nanm2an_pa4pum2en_on5doo3nenng1hoon4guon1ico3nioon1iso5niupa3nypan4ao3nou_bri2pain4ra1oronsu4rk1hopac4tpa4ceon5umonva5_ber4ood5eood5i6rks_oop3io3ordoost5rz1scope5dop1erpa4ca_ba4g_awn4_av4i_au1down5io3pito5pon1sync_as1s_as1p_as3ctch1c_ar5so5ra_ow3elo3visov4enore5auea1mor3eioun2d_ant4orew4or4guou5etou3blo5rilor1ino1rio_ang4o3riuor2miorn2eo5rofoto5sor5pe3orrhor4seo3tisorst4o3tif_an5cor4tyo5rum_al3tos3al_af1tos4ceo4teso4tano5scros2taos4poos4paz2z3wosi4ue3pai\",\n\t\t6 : \"os3ityos3itoz3ian_os4i4ey1stroos5tilos5titxquis3_am5atot3er_ot5erso3scopor3thyweek1noth3i4ot3ic_ot5icao3ticeor3thiors5enor3ougor3ityor3icaouch5i4o5ria_ani5mv1ativore5sho5realus2er__an3teover3sov4erttot3icoviti4o5v4olow3dero4r3agow5esto4posiop3ingo5phero5phanthy3sc3operaontif5on3t4ionten45paganp3agattele2gonspi4on3omyon4odipan3elpan4tyon3keyon5est3oncil_ar4tyswimm6par5diompro5par5elp4a4ripar4isomo4gepa5terst5scrpa5thy_atom5sta1tio5miniom3icaom3ic_ss3hatsky1scpear4lom3ena_ba5naol3umer1veilpedia4ped4icolli4er1treuo5liteol3ishpeli4epe4nano5lis_pen4thol3ingp4era_r1thoup4erago3li4f_bas4er1krauperme5ol5id_o3liceper3tio3lescolass4oi3terpe5tenpe5tiz_be5raoi5son_be3smphar5iphe3nooi5letph4es_oi3deroic3esph5ingr3ial_3ognizo5g2ly1o1gis3phone5phonio5geneo4gatora3mour2amenofit4tof5itera3chupi4ciepoly1eod5dedo5cureoc3ula1pole_5ocritpee2v1param4oc3raco4clamo3chetob5ingob3a3boast5eoke1st3nu3itpi5thanuf4fentu3meoerst2o3chasplas5tn3tinepli5ernti4ernter3sntre1pn4s3esplum4bnsati4npre4cns4moonon1eqnor5abpo3et5n5lessn5oniz5pointpoly5tnon4agnk3rup3nomicng1sprno5l4inois5i4n3o2dno3blenni3aln5keroppa5ran3itor3nitionis4ta5nine_ni3miznd3thrmu2dron3geripray4e5precipre5copre3emm3ma1bpre4lan5gerep3rese3press_can5cmedi2c5pri4e_ce4la3neticpris3op3rocal3chain4er5ipros3en4erarnera5bnel5iz_cit5rne4gatn5d2ifpt5a4bjanu3aign4itn3chisn5chiln5cheon4ces_nau3seid4iosna3talnas5tinan4itnanci4na5mitna5liahnau3zput3er2n1a2bhex2a3hatch1multi3hair1sm4pousg1utanmpo3rim4p1inmp5iesmphas4rach4empar5iraf5figriev1mpara5mo5seyram3et4mora_rane5oran4gemo3ny_monol4rap3er3raphymo3nizgno5morar5ef4raril1g2nacg1leadmoni3ara5vairav3elra5ziemon5gemon5etght1wemoi5sege3o1dmma5ryr5bine3fluoren1dixmis4ti_de3ra_de3rie3chasrch4err4ci4bm4inglm5ineedu2al_3miliame3tryrdi4er_des4crd3ingdi2rerme5thimet3alre5arr3mestim5ersadi2rende2ticdes3icre4cremen4temensu5re3disred5itre4facmen4dede2mosmen5acmem1o3reg3ismel5onm5e5dyme3died2d5ibren4te5mediare5pindd5a5bdata1bmba4t5cle4arma3tisma5scemar4lyre4spichs3huma5riz_dumb5re3strre4terbrus4qre3tribio1rhre5utiman3izre4valrev3elbi1orbbe2vie_eas3ire5vilba1thyman5is5maniamal4tymal4lima5linma3ligmag5inav3ioul5vet4rg3inglus3teanti1dl5umn_ltur3a_el3emltera4ltane5lp5ingloun5dans5gra2cabllos5etlor5ouric5aslo5rie_enam35ricidri4cie5lope_rid5erri3encri3ent_semi5lom3errig5an3logicril3iz5rimanlob5allm3ingrim4pell5out5rina__er4ril5linal2lin4l3le4tl3le4nriph5eliv3er_ge5og_han5k_hi3er_hon3olin3ea1l4inel4im4p_idol3_in3ci_la4cy_lath5rit3iclim4blrit5urriv5elriv3et4l4i4lli4gra_leg5elif3errk4linlid5er4lict_li4cor5licioli4atorl5ish_lig5a_mal5o_man5a_mer3c5less_rm5ersrm3ingy3thinle5sco3l4erilera5b5lene__mon3ele4matld4erild4erela4v4ar1nis44lativ_mo3rola5tanlan4telan5etlan4dllab3ic_mu5takin4dek3est_ro5filk3en4dro5ker5role__of5te4jestyys3icaron4al5izont_os4tlron4tai4v3ot_pe5tero3pelrop3ici5voreiv5il__pio5n_pre3mro4the_ran4tiv3en_rov5eliv3ellit3uati4tramr5pentrp5er__rit5ui4tismrp3ingit5ill_ros5tit3ica4i2tici5terirre4stit3era4ita5mita4bi_row5dist4lyis4ta_is4sesrsa5tiissen4is4sal_sci3erse4crrs5er_islan4rse5v2yo5netish5opis3honr4si4bis5han5iron_ir4minrtach4_self5iri3turten4diri5dei4rel4ire4de_sell5r4tieriq3uidrtil3irtil4lr4tilyr4tistiq5uefip4re4_sing4_ting4yn3chrru3e4lion3at2in4th_tin5krum3pli4no4cin3ityrun4ty_ton4aruti5nymbol5rvel4i_top5irv5er_r5vestin5geni5ness_tou5s_un3cein3cerincel45ryngei4n3auim3ulai5miniimi5lesac3riim5ida_ve5rasalar4ima5ryim3ageill5abil4istsan4deila5rai2l5am_wil5ii4ladeil3a4bsa5voright3iig3eraab5erd4ific_iff5enif5eroi3entiien5a45ie5gaidi5ou3s4cieab5latidi4arid5ianide3al4scopyab5rogid5ancic3ulaac5ardi2c5ocic3ipaic5inase2c3oi4carai4car_se4d4ei2b5riib5iteib5it_ib5ertib3eraac5aroi4ativ4ian4tse4molsen5ata5ceouh4warts5enedhus3t4s5enin4sentd4sentlsep3a34s1er_hun5kehu4min4servohro3poa5chethov5el5se5umhouse3sev3enho5senhort3eho5rishor5at3hol4ehol5arh5odizhlo3riac5robhis3elhion4ehimer4het4edsh5oldhe2s5ph5eroushort5here5aher4bahera3p3side_5sideshen5atsi5diz4signahel4lyact5ifhe3l4ihe5do55sine_h5ecathe4canad4dinsion5aad5er_har4lehard3e3sitioha5rasha3ranhan4tead3icahang5oadi4ersk5inesk5ing5hand_han4cyhan4cislith5hala3mh3ab4lsmall32g5y3n5gui5t3guard5smithad5ranaeri4eag5ellag3onia5guerso4labsol3d2so3licain5in4grada3s4on_gor5ougo5rizgondo5xpan4dait5ens5ophyal3end3g4o4ggnet4tglad5i5g4insgin5ge3g4in_spen4d2s5peog3imen5gies_3spher5giciagh5outsp5ingge5nizge4natge5lizge5lisgel4inxi5miz4gativgar5n4a5le5oga3nizgan5isga5mets5sengs4ses_fu4minfres5cfort5assi4erss5ilyfore5tfor5ayfo5ratal4ia_fon4dessur5aflo3ref5lessfis4tif1in3gstam4i5stands4ta4p5stat_fin2d5al5levs5tero4allicstew5afight5fi5del5ficie5ficiafi3cer5stickf3icena5log_st3ingf3icanama5ra5stockstom3a5stone2f3ic_3storef2f5iss4tradam5ascs4trays4tridf5fin_fend5efeath3fault5fa3thefar5thfam5is4fa4mafall5eew3inge5verbeven4ie5vengevel3oev3ellev5asteva2p5euti5let5roset3roget5rifsy5rinet3ricet5onaam5eraam5ilyami4noamor5ieti4noe5tidetai5loethod3eten4dtal5enes5urramp5enan3ageta5loge5strotan4detanta3ta5pere3ston4es2toes5times3tigta3rizestan43analy4taticta4tures4prean3arces3pertax4ises5onaes3olue5skintch5etanar4ies4i4ntead4ie2s5ima3natiande4sesh5enan3disan4dowang5iete5geres5ences5ecres5cana4n1icte2ma2tem3at3tenanwrita45erwau4tenesert3era3nieser3set5erniz4erniter4nis5ter3de4rivaan3i3fter3isan4imewo5vener3ineeri4ere3rient3ess_teth5e5ericke1ria4er3ester5esser3ent4erenea5nimier5enaer3emoth3easthe5atthe3iser5el_th5ic_th5icaere3in5thinkere5coth5odea5ninee3realan3ishan4klier4che5anniz4erandti4atoanoth5equi3lep5utat4ic1uan4scoe4probep3rehe4predans3poe4precan4surantal4e3penttim5ulep5anceo5rol3tine_eop3aran4tiewin4deap5eroen3ishen5icsen3etren5esten5esien5eroa3pheren3dicap3itae4nanten5amoem5ulaa3pituti3zen5emnize5missem5ishap5olaem5ine3tles_t5let_em1in2apor5iem3icaem5anael3op_el4labapos3te3liv3el5ishaps5esweath3e3lierel3icaar3actwa5verto3nate3libee4l1erel3egato3rietor5iza5radeelaxa4aran4gto3warelan4dej5udie5insttra5chtraci4ar5av4wa5gere5git5arbal4ar5easeg5ing4voteetrem5iar3enta5ressar5ial4tricsvor5abe3finetro5mitron5i4tronyar3iantro3sp5eficia3rieted5uloed3icae4d1erec3ulaec4tane4cremeco5roec3orae4concar5o5de4comme4cluse4clame5citeec5ifya5ronias3anta5sia_tu4nis2t3up_ecan5ce4belstur3ise4bel_eav3ene4a3tue5atifeath3ieat5eneart3eear4ilear4icear5eseam3ereal3oueal5erea5geread5iedum4be4ducts4duct_duc5eras3tenasur5adrea5rat3abl4d5outdo3natdom5izdo5lor4dlessu4bero3dles_at3alou3ble_d4is3tdirt5idi5niz3dine_at5ech5di3endi4cam1d4i3ad3ge4tud5estdev3ilde3strud3iedud3iesdes3tide2s5oat3egovis3itde4nardemor5at3en_uen4teuer4ilde5milat3eraugh3en3demicater5nuil5izdeli4ede5comde4cildecan4de4bonv3io4rdeb5it4dativ2d3a4bat3estu5laticu4tie5ulcheul3dercuss4icu5riaath5em3cultua5thenul3ingul5ishul4lar4vi4naul4liscu5ityctim3ic4ticuuls5esc5tantultra3ct5angcros4ecrop5ocro4pl5critiath5omum4blycre3at5vilitumor5oat5i5b5crat_cras5tcoro3ncop3iccom5ercol3orun5ishco3inc5clareat3ituunt3abat5ropun4tescit3iz4cisti4cista4cipicc5ing_cin3em3cinatuper5s5videsup3ingci2a5b5chini5videdupt5ib5vide_at4tag4ch1inch3ersch3er_ch5ene3chemiche5loure5atur4fercheap3vi5aliat3uravet3er4ch3abc5e4taau5sib3cessives4tece5ram2cen4e4cedenccou3turs5erur5tesur3theaut5enur4tiecav5al4cativave4nover3thcar5omca5percan4tycan3izcan5iscan4icus4lin3versecal4laver3ieca3latca5dencab3in3butiobuss4ebus5iebunt4iv4eresuten4i4u1t2iv3erenu3tineut3ingv4erelbroth35u5tizbound34b1orabon5at5vere_bom4bibol3icblun4t5blespblath5av3erav5enuebi3ogrbi5netven3om2v1a4bvac5ilbi3lizbet5izbe5strva5liebe5nigbbi4nabas4siva5nizbari4aav5ernbarbi5av5eryvel3liazi4eravi4er\",\n\t\t7 : \"_dri5v4ban5dagvar5iedbina5r43bi3tio3bit5ua_ad4derution5auti5lizver5encbuf4ferus5terevermi4ncall5incast5ercas5tigccompa5z3o1phros5itiv5chanicuri4fico5stati5chine_y5che3dupport54v3iden5cific_un4ter_at5omiz4oscopiotele4g5craticu4m3ingv3i3liz4c3retaul4li4bcul4tiscur5a4b4c5utiva5ternauiv4er_del5i5qdem5ic_de4monsdenti5fdern5izdi4latou4b5ingdrag5on5drupliuar5ant5a5si4tec5essawo4k1enec5ifiee4compear5inate4f3eretro5phewide5sp5triciatri5cesefor5ese4fuse_oth5esiar5dinear4chantra5ventrac4tetrac4itar5ativa5ratioel5ativor5est_ar5adisel5ebraton4alie4l5ic_wea5rieel5igibe4l3ingto5cratem5igraem3i3niemoni5oench4erwave1g4a4pillavoice1ption5eewill5inent5age4enthesvaude3vtill5inep5recaep5ti5bva6guer4erati_tho5rizthor5it5thodicer5ence5ternitteri5zater5iesten4tage4sage_e4sagese4sert_an5est_e4sertse4servaes5idenes5ignaesis4tees5piraes4si4btal4lisestruc5e5titioounc5erxe4cutota5bleset5itiva4m5atoa4matis5stratu4f3ical5a5lyst4ficatefill5instern5isspend4gani5zasqual4la4lenti4g3o3nas5ophiz5sophicxpecto55graph_or5angeuri4al_4graphy4gress_smol5d4hang5erh5a5nizharp5enhar5terhel4lishith5erhro5niziam5eteia4tricic4t3uascour5au2r1al_5scin4dover4nescan4t55sa3tiou5do3ny_ven4de_under5ty2p5al_anti5sylla5bliner4arturn3ari5nite_5initioinsur5aion4eryiphras4_tim5o5_ten5an_sta5blrtroph4_se5rieiq3ui3t5i5r2izis5itiviso5mer4istral5i5ticki2t5o5mtsch3ie_re5mittro3fiti4v3er_i4vers_ros5per_pe5titiv3o3ro_ped5alro5n4is_or5ato4jestierom5ete_muta5bk5iness4latelitr4ial__mist5i_me5terr4ming_lev4er__mar5tilev4eralev4ers_mag5a5liar5iz5ligaterit5ers_lat5errit5er_r5ited__im5pinri3ta3blink5er_hon5ey5litica_hero5ior5aliz_hand5irip5lic_gen3t4tolo2gylloqui5_con5grt1li2erbad5ger4operag_eu4lertho3donter2ic__ar4tie_ge4ome_ge5ot1_he3mo1_he3p6a_he3roe_in5u2tpara5bl5tar2rht1a1mintalk1a5ta3gon_par5age_aster5_ne6o3f_noe1thstyl1is_poly1s5pathic_pre1ampa4tricl3o3niz_sem4ic_semid6_semip4_semir45ommend_semiv4lea4s1a_spin1oom5etryspher1o_to6poglo4ratospe3cio3s2paceso2lute_we2b1l_re1e4ca5bolicom5erseaf6fishside5swanal6ysano5a2cside5stl5ties_5lumniasid2ed_anti1reshoe1stscy4th1s4chitzsales5wsales3cat6tes_augh4tlau5li5fom5atizol5ogizo5litiorev5olure5vertre5versbi5d2ifbil2lab_earth5pera5blro1tronro3meshblan2d1blin2d1blon2d2bor1no5ro1bot1re4ti4zr5le5quperi5stper4malbut2ed_but4tedcad5e1moist5enre5stalress5ibchie5vocig3a3roint5er4matizariv1o1lcous2ticri3tie5phisti_be5stoog5ativo2g5a5rr3a3digm4b3ingre4posir4en4tade4als_od5uctsquasis6quasir6re5fer_p5trol3rec5olldic1aiddif5fra3pseu2dr5ebrat5metric2d1lead2d1li2epro2g1epre1neuod5uct_octor5apoin3came5triem5i5liepli5narpara3memin5glim5inglypi4grappal6matmis4er_m5istryeo3graporth1riop1ism__but4tio3normaonom1icfeb1ruafermi1o_de4moio5a5lesodit1icodel3lirb5ing_gen2cy_n4t3ingmo5lestration4get2ic_4g1lishobli2g1mon4ismnsta5blmon4istg2n1or_nov3el3ns5ceivno1vembmpa5rabno4rarymula5r4nom1a6lput4tinput4tedn5o5miz_cam4penag5er_nge5nesh2t1eoun1dieck2ne1skiifac1etncour5ane3backmono1s6mono3chmol1e5cpref5ac3militapre5tenith5i2lnge4n4end5est__capa5bje1re1mma1la1ply5styr1kovian_car5olprin4t3lo2ges_l2l3ishprof5it1s2tamp\",\n\t\t8 : \"lead6er_url5ing_ces5si5bch5a5nis1le1noidlith1o5g_chill5ilar5ce1nym5e5trych5inessation5arload4ed_load6er_la4c3i5elth5i2lyneg5ativ1lunk3erwrit6er_wrap3arotrav5es51ke6linga5rameteman3u1scmar1gin1ap5illar5tisticamedio6c1me3gran3i1tesima3mi3da5bves1titemil2l1agv1er1eigmi6n3is_1verely_e4q3ui3s5tabolizg5rapher5graphicmo5e2lasinfra1s2mon4ey1lim3ped3amo4no1enab5o5liz_cor5nermoth4et2m1ou3sinm5shack2ppo5sitemul2ti5uab5it5abimenta5rignit1ernato5mizhypo1thani5ficatuad1ratu4n5i4an_ho6r1ic_ua3drati5nologishite3sidin5dling_trib5utin5glingnom5e1non1o1mistmpos5itenon1i4so_re5stattro1p2istrof4ic_g2norespgnet1ism5glo5binlem5aticflow2er_fla1g6elntrol5lifit5ted_treach1etra1versl5i5ticso3mecha6_for5mer_de5rivati2n3o1me3spac6i2t3i4an_thy4l1antho1k2er_eq5ui5to4s3phertha4l1amt3ess2es3ter1geiou3ba3dotele1r6ooxi6d1iceli2t1isonspir5apar4a1leed1ulingea4n3iesoc5ratiztch3i1er_kil2n3ipi2c1a3dpli2c1abt6ap6athdrom3e5d_le6icesdrif2t1a_me4ga1l1prema3cdren1a5lpres2plipro2cess_met4ala3do5word1syth3i2_non1e2m_post1ampto3mat4rec5ompepu5bes5cstrib5utqu6a3si31stor1ab_sem6is4star3tliqui3v4arr1abolic_sph6in1de5clar12d3aloneradi1o6gs3qui3tosports3wsports3cra5n2hascro5e2cor3bin1gespokes5wspi2c1il_te3legrcroc1o1d_un3at5t_dictio5cat1a1s2buss4ingbus6i2esbus6i2erbo2t1u1lro5e2las1s2pacinb1i3tivema5rine_r3pau5li_un5err5r5ev5er__vi2c3arback2er_ma5chinesi5resid5losophyan3ti1n2sca6p1ersca2t1olar2rangesep3temb1sci2uttse3mes1tar3che5tsem1a1ph\",\n\t\t9 : \"re4t1ribuuto5maticl3chil6d1a4pe5able1lec3ta6bas5ymptotyes5ter1yl5mo3nell5losophizlo1bot1o1c5laratioba6r1onierse1rad1iro5epide1co6ph1o3nscrap4er_rec5t6angre2c3i1prlai6n3ess1lum5bia_3lyg1a1miec5ificatef5i5nites2s3i4an_1ki5neticjapan1e2smed3i3cinirre6v3ocde2c5linao3les3termil5li5listrat1a1gquain2t1eep5etitiostu1pi4d1v1oir5du1su2per1e6_mi1s4ers3di1methy_mim5i2c1i5nitely_5maph1ro15moc1ra1tmoro6n5isdu1op1o1l_ko6r1te1n3ar4chs_phi2l3ant_ga4s1om1teach4er_parag6ra4o6v3i4an_oth3e1o1sn3ch2es1to5tes3toro5test1eror5tively5nop5o5liha2p3ar5rttrib1ut1_eth1y6l1e2r3i4an_5nop1oly_graph5er_5eu2clid1o1lo3n4omtrai3tor1_ratio5na5mocratiz_rav5en1o\",\n\t\t10 : \"se1mi6t5ic3tro1le1um5sa3par5iloli3gop1o1am1en3ta5bath3er1o1s3slova1kia3s2og1a1myo3no2t1o3nc2tro3me6c1cu2r1ance5noc3er1osth1o5gen1ih3i5pel1a4nfi6n3ites_ever5si5bs2s1a3chu1d1ri3pleg5_ta5pes1trproc3i3ty_s5sign5a3b3rab1o1loiitin5er5arwaste3w6a2mi1n2ut1erde3fin3itiquin5tes5svi1vip3a3r\",\n\t\t11 : \"pseu3d6o3f2s2t1ant5shimi1n2ut1estpseu3d6o3d25tab1o1lismpo3lyph1onophi5lat1e3ltravers3a3bschro1ding12g1o4n3i1zat1ro1pol3it3trop1o5lis3trop1o5lesle3g6en2dreeth1y6l1eneor4tho3ni4t\",\n\t\t12 : \"3ra4m5e1triz1e6p3i3neph1\"\n\t}\n};\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nmodule.exports = flattenDeep;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","import\n    './generator': { Generator }\n    './symbols': { ligatures, diacritics }\n    '@svgdotjs/svg.js': { SVG }\n    'katex/dist/katex.mjs': katex\n\n    'hypher': Hypher\n    'hyphenation.en-us': h-en\n    'he'\n\n    'lodash/flattenDeep'\n    'lodash/compact'\n\n\nhe.decode.options.strict = true\n\n\n\nexport class HtmlGenerator extends Generator\n\n    ### public instance vars\n\n    # tokens translated to html\n    sp:                 ' '\n    brsp:               '\\u200B '               # U+200B + ' ' breakable but non-collapsible space\n    nbsp:               he.decode \"&nbsp;\"      # U+00A0\n    visp:               he.decode \"&blank;\"     # U+2423  visible space\n    zwnj:               he.decode \"&zwnj;\"      # U+200C  prevent ligatures\n    shy:                he.decode \"&shy;\"       # U+00AD  word break/hyphenation marker\n    thinsp:             he.decode \"&thinsp;\"    # U+2009\n\n\n    ### private static vars\n    create =            (type, classes) ->\n                            el = document.createElement type\n                            if classes\n                                el.setAttribute \"class\", classes\n                            return el\n\n    blockRegex =        //^(address|blockquote|body|center|dir|div|dl|fieldset|form|h[1-6]|hr|isindex|menu|noframes\n                           |noscript|ol|p|pre|table|ul|dd|dt|frameset|li|tbody|td|tfoot|th|thead|tr|html)$//i\n\n    isBlockLevel =      (el) -> blockRegex.test el.nodeName\n\n\n    # generic elements\n\n    inline:             \"span\"\n    block:              \"div\"\n\n\n    # typographic elements\n\n    titlepage:          ~> create @block, \"titlepage\"\n    title:              ~> create @block, \"title\"\n    author:             ~> create @block, \"author\"\n    date:               ~> create @block, \"date\"\n\n    abstract:           ~> create @block, \"abstract\"\n\n    part:               \"part\"\n    chapter:            \"h1\"\n    section:            \"h2\"\n    subsection:         \"h3\"\n    subsubsection:      \"h4\"\n    paragraph:          \"h5\"\n    subparagraph:       \"h6\"\n\n    linebreak:          \"br\"\n\n    par:                \"p\"\n\n    list:               ~> create @block, \"list\"\n\n    unordered-list:     ~> create \"ul\",   \"list\"\n    ordered-list:       ~> create \"ol\",   \"list\"\n    description-list:   ~> create \"dl\",   \"list\"\n\n    listitem:           \"li\"\n    term:               \"dt\"\n    description:        \"dd\"\n\n    itemlabel:          ~> create @inline, \"itemlabel\"\n\n    quote:              ~> create @block, \"list quote\"\n    quotation:          ~> create @block, \"list quotation\"\n    verse:              ~> create @block, \"list verse\"\n\n    multicols:          (c) ~> ~>\n                            el = create @block, \"multicols\"\n                            el.setAttribute \"style\", \"column-count:\" + c\n                            return el\n\n\n    anchor:             (id) ~> ->\n                            el = document.createElement \"a\"\n                            el.id? = id\n                            return el\n\n    link:               (url) ~> ->\n                            el = document.createElement \"a\"\n                            el.setAttribute \"href\", url if url\n                            return el\n\n    verb:               ~> create \"code\", \"tt\"\n    verbatim:           \"pre\"\n\n    img:                \"img\"\n\n    image:              (width, height, url) ~> ~>\n                            el = create @img\n                            el.src = url\n                            el.height = height\n                            el.width = width\n\n                            return el\n\n    picture:            ~> create @inline, \"picture\"\n    picture-canvas:     ~> create @inline, \"picture-canvas\"\n\n\n\n    ### public instance vars (vars beginning with \"_\" are meant to be private!)\n\n    SVG: SVG\n    KaTeX: katex\n\n    _dom:   null\n\n\n\n    # CTOR\n    #\n    # options:\n    #  - documentClass: the default document class if a document without preamble is parsed\n    #  - CustomMacros: a constructor (class/function) with additional custom macros\n    #  - hyphenate: boolean, enable or disable automatic hyphenation\n    #  - languagePatterns: language patterns object to use for hyphenation if it is enabled (default en)\n    #    TODO: infer language from LaTeX preamble and load hypenation patterns automatically\n    #  - styles: array with additional CSS stylesheets\n    #  - precision: precision of numbers in CSS and SVG\n    (options) ->\n        @_options = Object.assign {\n            documentClass: \"article\"\n            styles: []\n            hyphenate: true\n            languagePatterns: h-en\n            precision: 3\n        }, options\n\n        if @_options.hyphenate\n            @_h = new Hypher(@_options.languagePatterns)\n\n        @reset!\n\n\n    reset: !->\n        super!\n\n        @_dom = document.createDocumentFragment!\n\n\n\n    ### character/text creation\n\n    character: (c) ->\n        c\n\n    textquote: (q) ->\n        switch q\n        | '`'   => @symbol \\textquoteleft\n        | '\\''  => @symbol \\textquoteright\n\n    hyphen: ->\n        if @_activeAttributeValue('fontFamily') == 'tt'\n            '-'                                         # U+002D\n        else\n            he.decode \"&hyphen;\"                        # U+2010\n\n    ligature: (l) ->\n        # no ligatures in tt\n        if @_activeAttributeValue('fontFamily') == 'tt'\n            l\n        else\n            ligatures.get l\n\n\n    hasDiacritic: (d) ->\n        diacritics.has d\n\n    # diacritic d for char c\n    diacritic: (d, c) ->\n        if not c\n            diacritics.get(d)[1]        # if only d is given, use the standalone version of the diacritic\n        else\n            c + diacritics.get(d)[0]    # otherwise add it to the character c\n\n    controlSymbol: (c) ->\n        switch c\n        | '/'                   => @zwnj\n        | ','                   => @thinsp\n        | '-'                   => @shy\n        | '@'                   => '\\u200B'       # nothing, just prevent spaces from collapsing\n        | _                     => @character c\n\n\n    ### get the result\n\n\n    /* @return the HTMLDocument for use as a standalone webpage\n     * @param baseURL the base URL to use to build an absolute URL\n     */\n    htmlDocument: (baseURL) ->\n        doc = document.implementation.createHTMLDocument @documentTitle\n\n        ### head\n\n        charset = document.createElement \"meta\"\n        charset.setAttribute \"charset\", \"UTF-8\"\n        doc.head.appendChild charset\n\n        if not baseURL\n            # when used in a browser context, always insert all assets with absolute URLs;\n            # this is also useful when using a Blob in iframe.src (see also #12)\n            baseURL = window.location?.href\n\n        if baseURL\n            base = document.createElement \"base\"    # TODO: is the base element still needed??\n            base.href = baseURL                     # TODO: not in svgdom\n            doc.head.appendChild base\n\n            doc.head.appendChild @stylesAndScripts baseURL\n        else\n            doc.head.appendChild @stylesAndScripts!\n\n\n        ### body\n\n        doc.body.appendChild @domFragment!\n        @applyLengthsAndGeometryToDom doc.documentElement\n\n        return doc\n\n\n\n\n    /* @return a DocumentFragment consisting of stylesheets and scripts */\n    stylesAndScripts: (baseURL) ->\n        el = document.createDocumentFragment!\n\n        createStyleSheet = (url) ->\n            link = document.createElement \"link\"\n            link.type = \"text/css\"\n            link.rel = \"stylesheet\"\n            link.href = url\n            link\n\n        createScript = (url) ->\n            script = document.createElement \"script\"\n            script.src = url\n            script\n\n        if baseURL\n            el.appendChild createStyleSheet new URL(\"css/katex.css\", baseURL).toString!\n            el.appendChild createStyleSheet new URL(@documentClass@@css, baseURL).toString!\n\n            for style in @_options.styles\n                el.appendChild createStyleSheet new URL(style, baseURL).toString!\n\n            el.appendChild createScript new URL(\"js/base.js\", baseURL).toString!\n        else\n            el.appendChild createStyleSheet \"css/katex.css\"\n            el.appendChild createStyleSheet @documentClass@@css\n\n            for style in @_options.styles\n                el.appendChild createStyleSheet style\n\n            el.appendChild createScript \"js/base.js\"\n\n        return el\n\n\n\n    /* @return DocumentFragment, the full page without stylesheets or scripts */\n    domFragment: ->\n        el = document.createDocumentFragment!\n\n        # text body\n        el.appendChild @create @block, @_dom, \"body\"\n\n        if @_marginpars.length\n            # marginpar on the right - TODO: is there any configuration possible to select which margin?\n            #el.appendChild @create @block, null, \"margin-left\"\n            el.appendChild @create @block, @create(@block, @_marginpars, \"marginpar\"), \"margin-right\"\n\n        return el\n\n\n    /* write the TeX lengths and page geometry to the DOM */\n    applyLengthsAndGeometryToDom: (el) !->\n\n        # root font size\n        el.style.setProperty '--size', @length(\\@@size).value\n\n        ### calculate page geometry\n        #\n        # set body's and margins' width to percentage of viewport (= paperwidth)\n        #\n        # we cannot distinguish between even/oddsidemargin - currently, only oddsidemargin is used\n        #\n        # textwidth percent  = textwidth px/paperwidth px\n        # marginleftwidth  % = (oddsidemargin px + toPx(1in))/paperwidth px\n        # marginrightwidth % = 100% - (textwidth + marginleftwidth), if there is no room left, the margin is 0% width\n\n        # do this if a static, non-responsive page is desired (TODO: make configurable!)\n        #el.style.setProperty '--paperwidth', @length \\paperwidth).value\n\n        twp =  100 * (@length \\textwidth).ratio(@length \\paperwidth)\n        mlwp = 100 * (@length(\\oddsidemargin).add new @Length 1, \"in\").ratio(@length \\paperwidth)\n        mrwp = Math.max(100 - twp - mlwp, 0)\n\n        el.style.setProperty '--textwidth', @round(twp) + \"%\"\n        el.style.setProperty '--marginleftwidth', @round(mlwp) + \"%\"\n        el.style.setProperty '--marginrightwidth', @round(mrwp) + \"%\"\n\n        if mrwp > 0\n            # marginparwidth percentage relative to parent, which is marginrightwidth!\n            mpwp = 100 * 100 * (@length \\marginparwidth).ratio(@length \\paperwidth) / mrwp\n            el.style.setProperty '--marginparwidth', @round(mpwp) + \"%\"\n        else\n            el.style.setProperty '--marginparwidth', \"0px\"\n\n        # set the rest of the lengths (TODO: write all defined lengths to CSS, for each group)\n        el.style.setProperty '--marginparsep', @length(\\marginparsep).value\n        el.style.setProperty '--marginparpush', @length(\\marginparpush).value\n\n\n\n\n    ### document creation\n\n    createDocument: (fs) !->\n        appendChildren @_dom, fs\n\n\n\n    ### element creation\n\n    # type: string or function/element factory\n    # children: an Element or an array of Element\n    create: (type, children, classes = \"\") ->\n        if typeof type == \"function\"\n            el = type!\n            if el.hasAttribute \"class\"\n                classes = el.getAttribute(\"class\") + \" \" + classes\n        else\n            el = document.createElement type\n\n        if @alignment!\n            classes += \" \" + @alignment!\n\n\n        # if continue then do not add parindent or parskip, we are not supposed to start a new paragraph\n        if @_continue and @location!.end.offset > @_continue\n            classes = classes + \" continue\"\n            @break!\n\n        if classes.trim!\n            el.setAttribute \"class\", classes.replace(/\\s+/g, ' ').trim!\n\n        appendChildren el, children\n\n    # create a text node that has font attributes set and allows for hyphenation\n    createText: (t) ->\n        return if not t\n        @addAttributes document.createTextNode if @_options.hyphenate then @_h.hyphenateText t else t\n\n    # create a pure text node without font attributes and no hyphenation\n    createVerbatim: (t) ->\n        return if not t\n        document.createTextNode t\n\n    # create a fragment; arguments may be Node(s) and/or arrays of Node(s)\n    createFragment: ->\n        children = compact flattenDeep arguments\n\n        # only create an empty fragment if explicitely requested: no arguments given\n        return if arguments.length > 0 and (not children or !children.length)\n\n        # don't wrap a single node\n        return children.0 if children.length == 1 and children.0.nodeType\n\n        f = document.createDocumentFragment!\n        appendChildren f, children\n\n    createImage: (width, height, url) ->\n        @create @image(width, height, url)\n\n    createPicture: (size, offset, content) ->\n        # canvas\n        canvas = @create @picture-canvas            # TODO: this might add CSS classes... ok?\n        appendChildren canvas, content\n\n        # offset sets the coordinates of the lower left corner, so shift negatively\n        if offset\n            canvas.setAttribute \"style\", \"left:#{offset.x.mul(-1).value};bottom:#{offset.y.mul(-1).value}\"\n\n        # picture\n        pic = @create @picture\n        pic.appendChild canvas\n        pic.setAttribute \"style\", \"width:#{size.x.value};height:#{size.y.value}\"\n\n        pic\n\n\n\n\n\n    # for skip == smallskip, medskip, bigskip\n    createVSpaceSkip: (skip) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace \" + skip\n        return span\n\n    createVSpaceSkipInline: (skip) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace-inline \" + skip\n        return span\n\n\n    createVSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        return span\n\n    createVSpaceInline: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"vspace-inline\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        return span\n\n    # create a linebreak with a given vspace between the lines\n    createBreakSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"class\", \"breakspace\"\n        span.setAttribute \"style\", \"margin-bottom:\" + length.value\n        # we need to add the current font in case it uses a relative length (e.g. em)\n        return @addAttributes span\n\n    createHSpace: (length) ->\n        span = document.createElement \"span\"\n        span.setAttribute \"style\", \"margin-right:\" + length.value\n        return span\n\n\n\n\n    parseMath: (math, display) ->\n        f = document.createDocumentFragment!\n        katex.render math, f,\n            displayMode: !!display\n            throwOnError: false\n        f\n\n\n\n    ## attributes and nodes/elements\n\n    # add the given attribute(s) to a single element\n    addAttribute: (el, attrs) !->\n        if el.hasAttribute \"class\"\n            attrs = el.getAttribute(\"class\") + \" \" + attrs\n        el.setAttribute \"class\", attrs\n\n    hasAttribute: (el, attr) ->\n        el.hasAttribute \"class\" and //\\b#{attr}\\b//.test el.getAttribute \"class\"\n\n\n    # this wraps the current attribute values around the given element or array of elements\n    addAttributes: (nodes) ->\n        attrs = @_inlineAttributes!\n        return nodes if not attrs\n\n        if nodes instanceof window.Element\n            if isBlockLevel nodes\n                return @create @block, nodes, attrs\n            else\n                return @create @inline, nodes, attrs\n        else if nodes instanceof window.Text or nodes instanceof window.DocumentFragment\n            return @create @inline, nodes, attrs\n        else if Array.isArray nodes\n            return nodes.map (node) -> @create @inline, node, attrs\n        else\n            console.warn \"addAttributes got an unknown/unsupported argument:\", nodes\n\n        return nodes\n\n\n\n\n    ### private helpers\n\n    appendChildren = (parent, children) ->\n        if children\n            if Array.isArray children\n                for i to children.length\n                    parent.appendChild children[i] if children[i]?\n            else\n                parent.appendChild children\n\n        return parent\n\n\n\n    # private utilities\n\n    debugDOM = (oParent, oCallback) !->\n        if oParent.hasChildNodes()\n            oNode = oParent.firstChild\n            while oNode, oNode = oNode.nextSibling\n                debugDOM(oNode, oCallback)\n\n        oCallback.call(oParent)\n\n\n    debugNode = (n) !->\n        return if not n\n        if typeof n.nodeName !~= \"undefined\"\n            console.log n.nodeName + \":\", n.textContent\n        else\n            console.log \"not a node:\", n\n\n    debugNodes = (l) !->\n        for n in l\n            debugNode n\n\n    debugNodeContent = !->\n        if @nodeValue\n            console.log @nodeValue\n","import { parse } from './latex-parser'\nimport { HtmlGenerator } from './html-generator'\n\nexport let LaTeXJSComponent = null\n\n// only define LaTeXJSComponent in browser context, i.e., if HTMLElement exists\nif (typeof HTMLElement != 'undefined') {\n  //  path of this script\n  let path = import.meta.url\n\n  LaTeXJSComponent = class extends HTMLElement {\n    constructor() {\n      super()\n      this.shadow =  this.attachShadow({mode: 'open'})\n      // wait for some LaTeX source to appear in the upgrade-case\n      if (!this.textContent) {\n        const observer = new MutationObserver(mutationList => {\n          if (this.textContent) {\n            // no longer need to watch for change\n            // TODO: actually, we could keep watching to support editing!\n            observer.disconnect();\n            this.onContentReady();\n          }\n        })\n        observer.observe(this, {\n          childList: true\n        })\n      } else {\n        this.onContentReady();\n      }\n    }\n\n    async onContentReady() {\n      // empty DOM\n      while (this.shadow.lastChild) {\n        this.shadow.lastChild.remove()\n      }\n\n      // read options\n      const hyphenate = this.getAttribute(\"hyphenate\") !== \"false\"\n\n      if (this.hasAttribute(\"baseURL\"))\n        path = this.getAttribute(\"baseURL\")\n\n      let CustomMacros;\n      if (this.hasAttribute(\"macros\"))\n        CustomMacros = (await import(this.getAttribute(\"macros\"))).default\n\n\n      // parse\n      const generator = parse(this.textContent, { generator: new HtmlGenerator({ hyphenate, CustomMacros }) })\n\n      // create DOM\n      let page = document.createElement(\"div\")\n      page.setAttribute(\"class\", \"page\")\n      page.appendChild(generator.domFragment())\n      if (this.hasAttribute(\"stylesheet\")) {\n        const style = document.createElement(\"link\")\n        style.type = \"text/css\"\n        style.rel = \"stylesheet\"\n        style.href = this.getAttribute(\"stylesheet\")\n        this.shadow.appendChild(style)\n      }\n\n      this.shadow.appendChild(generator.stylesAndScripts(path))\n      this.shadow.appendChild(page)\n\n      generator.applyLengthsAndGeometryToDom(this.shadow.host)\n\n      // we need to add CMU fonts to the parent page (if they weren't added yet)\n      const pDoc = this.ownerDocument\n      const links = pDoc.querySelectorAll('link')\n      const cmu = new URL(\"fonts/cmu.css\", path)\n\n      for (let link of links) {\n        if (link.href == cmu.href)\n          return\n      }\n\n      const linkEl = pDoc.createElement(\"link\")\n      linkEl.type = \"text/css\"\n      linkEl.rel = \"stylesheet\"\n      linkEl.href = cmu.href\n\n      pDoc.head.appendChild(linkEl)\n    }\n\n    connectedCallback() { }\n  }\n}"],"names":["root","freeExports","exports","freeModule","module","freeGlobal","global","window","regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","_","undefined","$","fj","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","aacute","Aacute","abreve","Abreve","ac","acd","acE","acirc","Acirc","acute","acy","Acy","aelig","AElig","af","afr","Afr","agrave","Agrave","alefsym","aleph","alpha","Alpha","amacr","Amacr","amalg","amp","AMP","and","And","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","Aogon","aopf","Aopf","ap","apacir","ape","apE","apid","apos","ApplyFunction","approx","approxeq","aring","Aring","ascr","Ascr","Assign","ast","asymp","asympeq","atilde","Atilde","auml","Auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","Bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","beta","Beta","beth","between","bfr","Bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bNot","bopf","Bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxhD","boxHd","boxHD","boxhu","boxhU","boxHu","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpe","bumpE","bumpeq","Bumpeq","cacute","Cacute","cap","Cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","ccaron","Ccaron","ccedil","Ccedil","ccirc","Ccirc","Cconint","ccups","ccupssm","cdot","Cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","chcy","CHcy","check","checkmark","chi","Chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cire","cirE","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","colone","Colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","copy","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","cscr","Cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","Cup","cupbrcap","cupcap","CupCap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","dArr","Darr","dash","dashv","Dashv","dbkarow","dblac","dcaron","Dcaron","dcy","Dcy","dd","DD","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","delta","Delta","demptyv","dfisht","dfr","Dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","djcy","DJcy","dlcorn","dlcrop","dollar","dopf","Dopf","dot","Dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","downarrow","Downarrow","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","dscr","Dscr","dscy","DScy","dsol","dstrok","Dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","DZcy","dzigrarr","eacute","Eacute","easter","ecaron","Ecaron","ecir","ecirc","Ecirc","ecolon","ecy","Ecy","eDDot","edot","eDot","Edot","ee","efDot","efr","Efr","eg","egrave","Egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","emacr","Emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","eng","ENG","ensp","eogon","Eogon","eopf","Eopf","epar","eparsl","eplus","epsi","epsilon","Epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","esim","Esim","eta","Eta","eth","ETH","euml","Euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","fcy","Fcy","female","ffilig","fflig","ffllig","ffr","Ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","fopf","Fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","gamma","Gamma","gammad","Gammad","gap","gbreve","Gbreve","Gcedil","gcirc","Gcirc","gcy","Gcy","gdot","Gdot","ge","gE","gel","gEl","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","Gfr","gg","Gg","ggg","gimel","gjcy","GJcy","gl","gla","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","gopf","Gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","gscr","Gscr","gsim","gsime","gsiml","gt","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","hardcy","HARDcy","harr","hArr","harrcir","harrw","Hat","hbar","hcirc","Hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","hstrok","Hstrok","HumpDownHump","HumpEqual","hybull","hyphen","iacute","Iacute","ic","icirc","Icirc","icy","Icy","Idot","iecy","IEcy","iexcl","iff","ifr","Ifr","igrave","Igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","IJlig","Im","imacr","Imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","int","Int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","iocy","IOcy","iogon","Iogon","iopf","Iopf","iota","Iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","it","itilde","Itilde","iukcy","Iukcy","iuml","Iuml","jcirc","Jcirc","jcy","Jcy","jfr","Jfr","jmath","jopf","Jopf","jscr","Jscr","jsercy","Jsercy","jukcy","Jukcy","kappa","Kappa","kappav","kcedil","Kcedil","kcy","Kcy","kfr","Kfr","kgreen","khcy","KHcy","kjcy","KJcy","kopf","Kopf","kscr","Kscr","lAarr","lacute","Lacute","laemptyv","lagran","lambda","Lambda","lang","Lang","langd","langle","lap","Laplacetrf","laquo","larr","lArr","Larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","lAtail","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","Lcaron","lcedil","Lcedil","lceil","lcub","lcy","Lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","leftarrow","Leftarrow","LeftArrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","Leftrightarrow","LeftRightArrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","leg","lEg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","lfr","Lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","ljcy","LJcy","ll","Ll","llarr","llcorner","Lleftarrow","llhard","lltri","lmidot","Lmidot","lmoust","lmoustache","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","Longleftarrow","LongLeftArrow","longleftrightarrow","Longleftrightarrow","LongLeftRightArrow","longmapsto","longrightarrow","Longrightarrow","LongRightArrow","looparrowleft","looparrowright","lopar","lopf","Lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","Lstrok","lt","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","map","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","Mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","mfr","Mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","mopf","Mopf","mp","mscr","Mscr","mstpos","mu","Mu","multimap","mumap","nabla","nacute","Nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","Ncaron","ncedil","Ncedil","ncong","ncongdot","ncup","ncy","Ncy","ndash","ne","nearhk","nearr","neArr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","nfr","Nfr","nge","ngE","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","ngt","nGt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","njcy","NJcy","nlarr","nlArr","nldr","nle","nlE","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nlt","nLt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","not","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrarr","nrArr","nrarrc","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","Nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubE","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupE","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","Ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","Nu","num","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","oacute","Oacute","oast","ocir","ocirc","Ocirc","ocy","Ocy","odash","odblac","Odblac","odiv","odot","odsold","oelig","OElig","ofcir","ofr","Ofr","ogon","ograve","Ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","Omacr","omega","Omega","omicron","Omicron","omid","ominus","oopf","Oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","or","Or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","oscr","Oscr","oslash","Oslash","osol","otilde","Otilde","otimes","Otimes","otimesas","ouml","Ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","pcy","Pcy","percnt","period","permil","perp","pertenk","pfr","Pfr","phi","Phi","phiv","phmmat","phone","pi","Pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","pr","Pr","prap","prcue","pre","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","pscr","Pscr","psi","Psi","puncsp","qfr","Qfr","qint","qopf","Qopf","qprime","qscr","Qscr","quaternions","quatint","quest","questeq","quot","QUOT","rAarr","race","racute","Racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarr","rArr","Rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","Rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","Rcaron","rcedil","Rcedil","rceil","rcub","rcy","Rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","rho","Rho","rhov","RightAngleBracket","rightarrow","Rightarrow","RightArrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","sacute","Sacute","sbquo","sc","Sc","scap","scaron","Scaron","sccue","sce","scE","scedil","Scedil","scirc","Scirc","scnap","scnE","scnsim","scpolint","scsim","scy","Scy","sdot","sdotb","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","Sfr","sfrown","sharp","shchcy","SHCHcy","shcy","SHcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","sigma","Sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","SOFTcy","sol","solb","solbar","sopf","Sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","sscr","Sscr","ssetmn","ssmile","sstarf","star","Star","starf","straightepsilon","straightphi","strns","sub","Sub","subdot","sube","subE","subedot","submult","subne","subnE","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup","Sup","sup1","sup2","sup3","supdot","supdsub","supe","supE","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supne","supnE","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","target","tau","Tau","tbrk","tcaron","Tcaron","tcedil","Tcedil","tcy","Tcy","tdot","telrec","tfr","Tfr","there4","therefore","Therefore","theta","Theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","thorn","THORN","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","Topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","tscr","Tscr","tscy","TScy","tshcy","TSHcy","tstrok","Tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uacute","Uacute","uarr","uArr","Uarr","Uarrocir","ubrcy","Ubrcy","ubreve","Ubreve","ucirc","Ucirc","ucy","Ucy","udarr","udblac","Udblac","udhar","ufisht","ufr","Ufr","ugrave","Ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","Umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","uogon","Uogon","uopf","Uopf","uparrow","Uparrow","UpArrow","UpArrowBar","UpArrowDownArrow","updownarrow","Updownarrow","UpDownArrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","upsilon","Upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","uring","Uring","urtri","uscr","Uscr","utdot","utilde","Utilde","utri","utrif","uuarr","uuml","Uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","vcy","Vcy","vdash","vDash","Vdash","VDash","Vdashl","vee","Vee","veebar","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","vfr","Vfr","vltri","vnsub","vnsup","vopf","Vopf","vprop","vrtri","vscr","Vscr","vsubne","vsubnE","vsupne","vsupnE","Vvdash","vzigzag","wcirc","Wcirc","wedbar","wedge","Wedge","wedgeq","weierp","wfr","Wfr","wopf","Wopf","wp","wr","wreath","wscr","Wscr","xcap","xcirc","xcup","xdtri","xfr","Xfr","xharr","xhArr","xi","Xi","xlarr","xlArr","xmap","xnis","xodot","xopf","Xopf","xoplus","xotime","xrarr","xrArr","xscr","Xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","Yacute","yacy","YAcy","ycirc","Ycirc","ycy","Ycy","yen","yfr","Yfr","yicy","YIcy","yopf","Yopf","yscr","Yscr","yucy","YUcy","yuml","Yuml","zacute","Zacute","zcaron","Zcaron","zcy","Zcy","zdot","Zdot","zeetrf","ZeroWidthSpace","zeta","Zeta","zfr","Zfr","zhcy","ZHcy","zigrarr","zopf","Zopf","zscr","Zscr","zwj","zwnj","decodeMapLegacy","decodeMapNumeric","invalidReferenceCodePoints","stringFromCharCode","String","fromCharCode","hasOwnProperty","has","object","propertyName","call","merge","options","defaults","key","result","codePointToSymbol","codePoint","strict","output","parseError","array","value","index","length","contains","hexEscape","toString","toUpperCase","decEscape","message","Error","encode","string","test","encodeEverything","useNamedReferences","allowUnsafeSymbols","escapeCodePoint","decimal","escapeBmpSymbol","symbol","charCodeAt","replace","$0","high","low","decode","html","$1","$2","$3","$4","$5","$6","$7","$8","semicolon","decDigits","hexDigits","reference","next","isAttributeValue","parseInt","he","version","escape","unescape","nodeType","this","makeLengthClass","export$","constructor","_value","_unit","unit","unitsSp","get","g","generator","prototype","zero","round","error","cmp","l","add","Length","mul","s","abs","Math","norm","sqrt","min","Array","from","arguments","reduce","a","b","max","Vector","_x","x","_y","y","v","shift_start","msq","imsq","dir_x","dir_y","sx","sy","shift_end","ex","ey","ligatures","diacritics","symbols","latexParser_pegjs","peg$SyntaxError","expected","found","location","name","captureStackTrace","child","parent","ctor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","literalEscape","text","class","i","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","j","descriptions","type","sort","slice","join","describeExpected","describeFound","SyntaxError","parse","input","peg$result","peg$FAILED","peg$startRuleFunctions","latex","peg$parselatex","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","macro","documentClass","peg$c5","peg$c6","peg$literalExpectation","peg$c7","startBalanced","enterGroup","peg$c8","pars","exitGroup","isBalanced","endBalanced","createDocument","logUndefinedRefs","peg$c9","bb","n","txt","be","break","p","create","peg$c10","linebreak","peg$c11","peg$c12","createText","sp","peg$c13","peg$otherExpectation","peg$c14","peg$c15","m","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","e","peg$c24","peg$c25","id","isPreamble","peg$c26","isVmode","peg$c27","isHmode","peg$c28","isHVmode","peg$c29","peg$c30","hasMacro","beginArgs","peg$c31","args","parsedArgs","endArgs","createFragment","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$classExpectation","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","k","peg$c43","trim","peg$c44","peg$c45","nextArg","peg$c46","preExecMacro","peg$c47","peg$c48","argError","peg$c49","addParsedArg","peg$c50","peg$c51","peg$c52","peg$c53","h","peg$c54","peg$c55","o","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","u","peg$c85","peg$c86","peg$c87","c","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","selectArgsBranch","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","kv","peg$c118","kv_list","filter","peg$c119","peg$c120","v_list","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c148","f","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","peg$c160","peg$c161","peg$c162","peg$c163","peg$c164","url","peg$c165","peg$c166","unshift","peg$c167","peg$c168","peg$c169","peg$c170","peg$c171","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","expr","peg$c177","counter","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","head","tail","trunc","peg$c186","peg$c187","ml","peg$c188","cssp","peg$c189","csl","peg$c190","peg$c191","peg$c192","peg$c193","peg$c194","peg$c195","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","peg$c201","peg$c202","peg$c203","peg$c204","peg$c205","peg$c206","peg$c207","peg$c208","peg$c209","peg$c210","peg$c211","peg$c212","peg$c213","peg$c214","peg$c215","peg$c216","peg$c217","peg$c218","peg$c219","peg$c220","peg$c221","peg$c222","peg$c223","peg$c224","peg$c225","peg$c226","peg$c227","peg$c228","peg$c229","peg$c230","peg$c231","peg$c232","peg$c233","peg$c234","peg$c235","peg$c236","peg$c239","core","cm","cml","list","forEach","push","peg$c240","fl","peg$c241","cs","peg$c242","sl","speclist","peg$c243","_c","_s","isArray","concat","peg$c244","peg$c245","peg$c246","peg$c247","peg$c248","peg$c249","peg$c250","peg$c251","peg$c252","peg$c253","peg$c254","reps","peg$c255","peg$c256","peg$c257","peg$c258","peg$c259","peg$c260","content","peg$c261","peg$c262","peg$c263","createVSpaceInline","peg$c264","createVSpace","peg$c265","peg$c266","peg$c267","peg$c268","peg$c269","peg$c270","peg$c271","peg$c272","peg$c273","createVSpaceSkipInline","peg$c274","createVSpaceSkip","peg$c275","peg$c276","peg$c277","t","peg$c278","visp","verb","createVerbatim","peg$c279","peg$c280","begin","peg$c281","peg$c282","peg$c283","peg$c284","peg$c285","node","peg$c286","sb","end_id","peg$c287","se","pf","appendChild","peg$c288","peg$c289","peg$c290","peg$c291","peg$c292","peg$c293","og","peg$c294","label","peg$c295","peg$c296","itemCounter","roman","itemId","nextId","stepCounter","refCounter","peg$c297","peg$c298","peg$c299","peg$c300","peg$c301","peg$c302","peg$c303","peg$c304","peg$c305","parseMath","peg$c306","peg$c307","peg$c308","peg$c309","peg$c310","peg$c311","peg$c312","peg$c313","peg$c314","peg$c315","peg$c316","peg$c317","peg$c318","peg$c319","peg$c320","peg$c321","peg$c322","peg$c323","peg$c324","peg$c325","peg$c326","peg$c327","peg$c328","peg$c329","peg$c330","peg$c331","peg$c332","peg$c333","peg$c334","peg$c335","peg$c336","peg$c337","peg$c338","peg$c339","peg$c340","peg$c341","peg$c342","peg$c343","peg$c344","peg$c345","peg$c346","peg$c347","peg$c348","peg$c349","peg$c350","peg$c351","peg$c352","peg$c353","peg$c354","peg$c355","peg$c356","peg$c357","peg$c358","peg$c359","brsp","peg$c360","peg$c361","peg$c362","peg$c363","peg$c364","peg$c365","peg$c366","peg$c367","peg$c368","peg$c369","createBreakSpace","peg$c370","peg$c371","peg$c372","peg$c373","peg$c374","peg$c375","peg$c376","peg$c377","character","peg$c378","peg$c379","peg$c380","peg$c381","peg$c382","peg$c383","peg$c384","peg$c385","peg$c386","peg$c387","peg$c388","peg$c389","q","textquote","peg$c390","peg$c391","peg$c392","peg$c393","peg$c394","peg$c395","peg$c396","peg$c397","peg$c398","peg$c399","peg$c400","peg$c401","peg$c402","peg$c403","peg$c404","peg$c405","peg$c406","peg$c407","peg$c408","peg$c409","peg$c410","peg$c411","peg$c412","peg$c413","peg$c414","peg$c415","peg$c416","peg$c417","peg$c418","peg$c419","peg$c420","peg$c421","peg$c422","peg$c423","peg$c424","ligature","peg$c425","peg$c426","peg$c427","peg$c428","controlSymbol","peg$c429","peg$c430","hasSymbol","peg$c431","peg$c432","peg$c433","d","hasDiacritic","peg$c434","diacritic","peg$c435","peg$c436","peg$c437","peg$c438","peg$c439","peg$c440","peg$c441","peg$c442","peg$c443","peg$c444","peg$c445","peg$c446","peg$c447","peg$c448","peg$c449","peg$c450","peg$c451","peg$c452","peg$c453","peg$c454","peg$c455","peg$c456","peg$c457","peg$c458","peg$c459","peg$c460","peg$c461","peg$c462","peg$c463","peg$c464","peg$c465","parseFloat","peg$c466","peg$c467","peg$c468","hasCounter","peg$c469","peg$c470","theLength","peg$c471","peg$c472","peg$c473","peg$c474","console","log","peg$c475","peg$c476","peg$c477","peg$c478","textContent","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$buildSimpleError","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","s0","s1","s2","s3","s4","s5","s6","s7","s8","peg$parsewith_preamble","peg$parseskip_all_space","peg$parseescape","peg$parseis_hvmode","peg$parseis_preamble","peg$parsemacro","peg$parsebegin","peg$parseskip_space","peg$parsebegin_group","substr","peg$parseend_group","peg$parsebegin_doc","peg$parsedocument","peg$parseend_doc","charAt","peg$parseEOF","peg$parseend","peg$parseparagraph","peg$parsevmode_macro","peg$parsenoindent","peg$parsebreak","peg$parsetext","peg$parseparagraph_with_linebreak","peg$parseline","peg$parselinebreak","peg$parseligature","peg$parseprimitive","peg$parsecomment","peg$parseunskip_macro","peg$parsehv_macro","peg$parseidentifier","peg$parseis_hmode","peg$parseis_hmode_env","peg$parsebegin_env","peg$parsemacro_args","peg$parsespace","peg$parseend_env","peg$parseh_environment","substring","peg$parsechar","peg$parsesmbskip_hmode","peg$parselength_group","peg$parsevspace_hmode","peg$parsevalue","peg$parsethe","s9","s10","s11","peg$parsenl","peg$parseverb","peg$parseonly_preamble","peg$parseis_vmode","peg$parseunknown_macro","peg$parsehmode_macro","peg$parsemath_shift","peg$parsemath_primitive","peg$parseinline_math","peg$parseleft_br","peg$parseright_br","peg$parsedisplay_math","peg$parsemath","peg$parsehyphen","peg$parsedigit","peg$parsepunctuation","peg$parsequotes","peg$parsenbsp","peg$parsesp","peg$parsectrl_space","peg$parsediacritic","peg$parsectrl_sym","peg$parsesymbol","peg$parseinteger","peg$parsehex16","peg$parsehex8","peg$parsecharsym","peg$parseutf8_char","peg$parsearg_group","peg$parselogging","peg$parseis_vmode_env","peg$parseenvironment","peg$parsevspace_vmode","peg$parsesmbskip_vmode","peg$parsekey","peg$parsekey_val","peg$parsenextArgStar","peg$parsearg_hgroup","peg$parsehorizontal","peg$parseopt_group","peg$parseid_group","peg$parseide_group","peg$parseid_optgroup","peg$parsekey_group","peg$parsekey_optgroup","peg$parsekeyval_optgroup","peg$parsecsv_group","peg$parseexpr_group","peg$parseexpr_optgroup","peg$parselength_optgroup","peg$parsemacro_group","peg$parseurl_group","peg$parsecolor_group","peg$parsecolor_modellist_group","peg$parsecolor_modellist_optgroup","peg$parsecolor_setspec_group","peg$parsecolor_speclist_group","peg$parsecoord_group","peg$parsecoord_optgroup","peg$parsevector","peg$parsecolumns","peg$parseitems","peg$parseenumitems","peg$parsebegin_optgroup","peg$parseend_optgroup","peg$parselength_unit","peg$parselength","peg$parsefloat","peg$parseplus","peg$parseminus","peg$parsenum_expr","peg$parsecoordinate","peg$parseurl_char","peg$parsehex","peg$parseurl_pct_encoded","peg$parsenum_value","peg$parsereal","peg$parsenum_factor","peg$parsenum_term","s12","peg$parsecore_model","peg$parseint","peg$parsec_expr","peg$parsec_ext_expr","peg$parsec_name","peg$parsefunc_expr","peg$parsecolor","peg$parsemodel_list","peg$parsecolor_spec_list","peg$parsecolor_set_spec","peg$parsec_prefix","peg$parsec_mix_expr","peg$parsec_postfix","peg$parsefn","peg$parsecolor_model","peg$parseint_model","peg$parsedec_model","peg$parsepseudo_model","peg$parsecolor_spec","peg$parsecolumn_separator","peg$parsecolumn","peg$parseitem","peg$parseend_comment","peg$parsealignment_tab","peg$parsesuperscript","peg$parsesubscript","peg$parsepar","peg$parseendinput","peg$parsecomment_env","peg$parsemacro_parameter","peg$parseignore","peg$parseoct","require$$0","setErrorFn","peg$buildStructuredError","Base","newCounter","setLength","this$","tmp","NaN","endsWith","pt345","inch","textwidth","oddsidemargin","margins","marginparwidth","x$","startsection","toc","ttl","Roman","arabic","setTitle","title","author","date","that","maketitle","setCounter","_title","_author","_date","_thanks","Article","superclass","css","section","_toc","setFontSize","setFontWeight","quotation","endquotation","Alph","Report","addToReset","chapter","Book","y$","Color","builtinDocumentclasses","article","book","report","XColor","opt","Object","keys","colors","hd","tl","spec","colorspec","color","set","Echo","gobbleO","echoO","echoOGO","o1","o2","echoGOG","g1","g2","Gensymb","Graphicx","createImage","kvl","file","builtinPackages","xcolor","echo","gensymb","graphics","graphicx","hyperref","Hyperref","link","latexsym","Latexsym","multicol","Multicol","multicols","cols","stix","Stix","KaTeX","__defineSymbol","textcomp","Textcomp","textgreek","Textgreek","_freeGlobal","freeSelf","self","_root","Function","_Symbol","Symbol","objectProto","nativeObjectToString","symToStringTag","toStringTag","_getRawTag","isOwn","tag","unmasked","getRawTag","require$$1","objectToString","_baseGetTag","isObject_1","baseGetTag","isObject","uid","isFunction_1","coreJsData","maskSrcKey","exec","IE_PROTO","_isMasked","func","funcToString","isFunction","isMasked","require$$2","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","baseIsNative","getValue","getNative","_defineProperty","defineProperty","_baseAssignValue","configurable","enumerable","writable","eq_1","baseAssignValue","eq","_assignValue","objValue","assignValue","_copyObject","source","props","customizer","isNew","newValue","identity_1","apply","thisArg","nativeMax","_overRest","transform","otherArgs","constant","_baseSetToString","nativeNow","Date","now","setToString","count","lastCalled","stamp","remaining","shortOut","identity","overRest","isLength_1","isLength","isArrayLike_1","reIsUint","_isIndex","isArrayLike","isIndex","require$$3","baseRest","isIterateeCall","_createAssigner","assigner","sources","guard","_isPrototype","Ctor","_baseTimes","iteratee","isObjectLike_1","isObjectLike","baseIsArguments","propertyIsEnumerable","isArguments_1","isArray_1","stubFalse_1","stubFalse","Buffer","isBuffer","typedArrayTags","_baseIsTypedArray","_baseUnary","freeProcess","process","nodeUtil","types","require","binding","baseIsTypedArray","baseUnary","nodeIsTypedArray","isTypedArray","baseTimes","isArguments","require$$4","_arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","_overArg","arg","nativeKeys","isPrototype","arrayLikeKeys","baseKeys","copyObject","createAssigner","nativeKeysIn","baseKeysIn","isProto","keysIn","LaTeX","CustomMacros","assignIn","assign","ref$","newLength","providedPackages","tex","inline","setAttribute","toLocaleDateString","weekday","year","month","day","marginpar","setFontFamily","addAttributes","setFontShape","z$","z1$","z2$","z3$","z4$","z5$","alph","theenumii","theenumi","theenumiii","normalfont","bfseries","z6$","setAlignment","z7$","startlist","endlist","titlepage","z9$","quote","verse","unorderedList","items","makelabel","itemlabel","item","listitem","orderedList","descriptionList","dt","term","createPicture","size","createHSpace","setLabel","ref","z10$","makebox","vec","width","_box","framebox","hasAttribute","addAttribute","classes","box","innerPos","style","height","z11$","w","wrapper","obj","strut","rlap","res","dv","cloneNode","v1","pxpct","v2","N","_path","v3","linethickness","svg","path","draw","SVG","addTo","stroke","fill","pw","px","lenSection","dasharray","bbox","viewbox","flip","circle","cx","cy","_line","_vector","vs","ve","_slopeLengthToCoords","hl","hw","hhl","maxrad","rad","oval","radius","move","includes","_intersect","clip","clipWith","r1","r2","z12$","Class","documentclass","Export","getOwnPropertyNames","opts","pkg","Package","fn$","z14$","z15$","Macros","Generator","documentTitle","_options","_macros","_stack","_groups","_continue","_labels","_refs","_counters","_resets","_marginpars","reset","_uid","_curArgs","attrs","align","currentlabel","document","createTextNode","lengths","factor","pow","precision","deepEq$","marco","parsed","optArgs","branches","nextChar","in$","shift","pop","env_id","copyAttrs","alignment","fontFamily","family","fontWeight","weight","shape","fontShape","fontSize","setTextDecoration","textDecoration","decoration","_inlineAttributes","cur","_activeAttributeValue","level","attr","sec","chaphead","hasLength","clearCounter","arrayFrom$","r","_roman","fnsymbol","warn","firstChild","removeChild","done","marginPar","marginRef","methods","names","registerMethods","_name","addMethodNames","getMethodsFor","_names","il","radians","PI","camelCase","toLowerCase","capitalize","proportionalSize","element","getOrigin","origin","ox","originX","oy","originY","condX","condY","xmlns","xlink","globals","elements","ns","createElementNS","makeInstance","isHTML","adopter","querySelector","createElement","innerHTML","nodeOrNew","ownerDocument","defaultView","Node","adopt","instance","nodeName","Fragment","className","register","asRoot","did","eid","assignNewId","children","extend","modules","wrapWithAttrCheck","fn","siblings","position","prev","forward","remove","backward","front","back","before","after","insertBefore","insertAfter","numberAndUnit","rgb","transforms","whitespace","isHex","isRgb","isBlank","isNumber","isImage","delimiter","isPathLetter","componentHex","component","integer","is","space","hueToRgb","split","hasClass","indexOf","addClass","removeClass","toggleClass","val","ret","cssText","cased","show","hide","visible","data","attributes","JSON","stringify","remember","memory","forget","_memory","inputs","init","static","mode","random","sin","grey","cmyk","_a","_b","hsl","isGrey","_d","values","params","z","getParameters","noWhitespace","hexParse","sixDigitHex","components","lab","xyz","lch","atan2","dToR","cos","yL","xL","zL","ct","mx","nm","rU","gU","bU","bd","toArray","toHex","_clamped","toRgb","rV","gV","bV","r255","g255","b255","rL","gL","bL","xU","yU","zU","Point","clone","base","transformO","Matrix","isMatrixLike","closeEnough","threshold","flipBoth","flipX","flipY","skewX","skew","isFinite","skewY","scaleX","scale","scaleY","shear","rotate","around","positionX","py","positionY","translate","tx","translateX","ty","translateY","relative","relativeX","ry","relativeY","matrix","aroundO","dx","dy","translateO","lmultiplyO","decompose","determinant","ccw","thetaRad","st","lam","axis","flipO","scaleO","fromArray","matrixify","inverse","inverseO","det","na","nb","nc","nd","nf","lmultiply","matrixMultiply","multiply","multiplyO","rotateO","shearO","lx","skewO","tan","ly","formatTransforms","transformer","valueOf","parser","nodes","parentNode","body","documentElement","isNulledBox","Box","addOffset","pageXOffset","pageYOffset","left","x2","y2","isNulled","xMin","Infinity","xMax","yMin","yMax","getBox","getBBoxFn","retry","zoom","point","clientWidth","clientHeight","zoomX","zoomY","zoomAmount","Number","MAX_SAFE_INTEGER","List","arr","super","each","fnOrMethodName","reserved","baseFind","query","querySelectorAll","listenerId","windowEvents","getEvents","getEventHolder","events","getEventTarget","on","listener","bind","bag","_svgjsListenerId","event","ev","addEventListener","off","namespace","removeEventListener","clearEvents","EventTarget","dispatch","Event","CustomEvent","detail","cancelable","dispatchEvent","defaultPrevented","fire","noop","timeline","opacity","SVGArray","toSet","Set","SVGNumber","convert","number","isNaN","match","toJSON","hooks","Dom","removeNamespace","SVGElement","childNodes","put","clear","hasChildNodes","lastChild","deep","writeDataToDom","first","htmlOrFn","outerHTML","xml","last","matches","selector","matcher","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","putIn","removeElement","replaceChild","svgOrFn","outerSVG","words","wrap","xmlOrFn","outerXML","current","_this","well","fragment","createDocumentFragment","len","firstElementChild","nodeValue","curr","removeAttribute","getAttribute","_val","hook","isColor","leading","setAttributeNS","rebuild","find","findOne","dom","setData","center","defs","dmove","parents","until","isSelector","getBBox","rbox","getBoundingClientRect","screenCTM","inside","ctm","getCTM","isRoot","getScreenCTM","sugar","prefix","extension","mat","direction","_element","getTotalLength","pointAt","getPointAtLength","font","untransform","str","reverse","toParent","pCtm","toRoot","decomposed","Container","flatten","ungroup","Defs","Shape","Ellipse","circled","ellipse","fx","fy","x1","y1","to","Gradient","targets","update","gradiented","gradient","Pattern","pattern","patternUnits","Image","load","callback","img","src","PointArray","maxX","maxY","minX","minY","points","toLine","MorphArray","Line","plot","pointed","Marker","orient","makeSetterGetter","easing","bezier","steps","stepPosition","jumps","beforeFlag","step","floor","jumping","Stepper","Ease","ease","Controller","stepper","recalculate","duration","_duration","overshoot","_overshoot","os","wn","velocity","acceleration","newPosition","windup","integral","_windup","P","I","D","segmentParameters","M","L","H","V","C","S","Q","T","A","Z","pathHandlers","p0","mlhvqtcsaz","jl","segmentComplete","segment","startNewSegment","token","inNumber","finalizeNumber","pathLetter","lastCommand","small","isSmall","inSegment","pointSeen","hasExponent","finalizeSegment","absolute","command","makeAbsolut","segments","isArcFlag","isArc","isExponential","lastToken","PathArray","toAbsolute","pathParser","arrayToString","getClassForType","NonMorphable","morphableTypes","ObjectBag","Morphable","_stepper","_from","_to","_type","_context","_morphObj","at","morph","_set","toConsumable","TransformBag","sortByKey","splice","defaultObject","toDelete","objOrArr","entries","Type","Path","_array","Polygon","polygon","poly","Polyline","polyline","Rect","Queue","_first","_last","Animator","nextDraw","frames","timeouts","immediates","timer","performance","frame","run","requestAnimationFrame","_draw","timeout","delay","time","immediate","cancelFrame","clearTimeout","cancelImmediate","nextTimeout","lastTimeout","nextFrame","lastFrame","nextImmediate","makeSchedule","runnerInfo","runner","defaultSource","Timeline","timeSource","_timeSource","_startTime","_speed","_persist","_nextFrame","_paused","_runners","_runnerIds","_lastRunnerId","_time","_lastSourceTime","_lastStepTime","_step","_stepFn","_stepImmediate","active","finish","getEndTimeOfTimeline","pause","getEndTime","lastRunnerInfo","getLastRunnerInfo","lastDuration","endTimes","getRunnerInfoById","persist","dtOrForever","play","updateTime","yes","currentSpeed","speed","positive","schedule","when","absoluteStartTime","endTime","unschedule","info","seek","stop","immediateStep","dtSource","dtTime","runnersLeft","dtToStart","_timeline","Runner","_queue","_isDeclarative","_history","enabled","_lastTime","_reseted","transformId","_haveReversed","_reverse","_loopsDone","_swing","_wait","_times","_frameId","swing","wait","addTransform","animate","sanitise","loop","clearTransform","clearTransformsFromQueue","isTransform","during","queue","_prepareRunner","loops","loopDuration","loopsDone","partial","swinging","backwards","uncliped","swingForward","progress","initFn","runFn","retargetFn","initialiser","retarget","initialised","finished","running","_lastPosition","justStarted","justFinished","declarative","converged","_initialise","_run","needsIt","_rememberMorpher","method","morpher","caller","positionOrDt","allfinished","_tryRetarget","extra","FakeRunner","mergeWith","getRunnerTransform","mergeTransforms","netTransform","_transformationRunners","runners","RunnerArray","ids","clearBefore","deleteCnt","edit","newRunner","getByID","lastRunner","by","_clearTransformRunnersBefore","currentRunner","_currentTransform","_addRunner","styleAttr","nameOrAttrs","newToAttrs","newKeys","differences","addedFromAttrs","oldFromAttrs","oldToAttrs","newLevel","newPoint","affine","isMatrix","currentAngle","startTransform","rTarget","rCurrent","possibilities","distances","shortest","affineParameters","newTransforms","_queueNumber","_queueNumberDelta","newTo","_queueObject","Svg","nested","ax","ay","build","_build","getComputedTextLength","Text","_rebuild","blankLineOffset","getComputedStyle","getPropertyValue","newLined","firstLine","newLine","textable","plain","Tspan","tspan","Circle","ClipPath","unclip","clipper","ForeignObject","foreignObject","G","containerGeometry","group","unlink","linker","linkTo","Mask","unmask","mask","masker","maskWith","Stop","addText","rule","cssRule","Style","fontface","TextPath","track","pathArray","textPath","importNodes","Use","use","registerMorphableType","context","SourceLocation","lexer","second","loc","Token","noexpand","treatAsRelax","endToken","ParseError","underlined","__proto__","uppercase","ESCAPE_LOOKUP","ESCAPE_REGEX","getBaseElem","utils","elem","deflt","setting","defaultIfUndefined","hyphenate","isCharacterBox","baseElem","protocolFromUrl","protocol","Settings","displayMode","leqno","fleqn","throwOnError","errorColor","macros","minRuleThickness","colorIsTextColor","trust","maxSize","maxExpand","globalGroup","reportNonstrict","errorCode","errorMsg","useStrictBehavior","isTrusted","Boolean","cramped","styles","fracNum","fracDen","cramp","isTight","Style$1","DISPLAY","TEXT","SCRIPT","SCRIPTSCRIPT","scriptData","blocks","allBlocks","supportedCodepoint","codepoint","hLinePad","doubleleftarrow","doublerightarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","oiintSize1","oiintSize2","oiiintSize1","oiiintSize2","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","tilde1","tilde2","tilde3","tilde4","widehat1","widehat2","widehat3","widehat4","widecheck1","widecheck2","widecheck3","widecheck4","baraboveleftarrow","rightarrowabovebar","baraboveshortleftharpoon","rightharpoonaboveshortbar","shortbaraboveleftharpoon","shortrightharpoonabovebar","DocumentFragment","depth","maxFontSize","toNode","frag","toMarkup","markup","toText","createClass","cls","initNode","getColor","tagName","Span","attribute","Anchor","href","Img","alt","iCombinations","SymbolNode","italic","script","_i","scriptFromCodepoint","span","marginRight","needsSpan","escaped","SvgNode","PathNode","pathName","alternate","LineNode","assertSymbolDomNode","fontMetricsData","sigmasAndXis","slant","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","sqrtRuleThickness","ptPerEm","doubleRuleSep","arrayRuleWidth","fboxsep","fboxrule","extraCharacterMap","getCharacterMetrics","metrics","fontMetricsBySizeIndex","ATOMS","bin","close","inner","open","punct","rel","NON_ATOMS","mathord","spacing","textord","math","defineSymbol","acceptUnicodeChar","text$1","main","ams","accent","op","mathTextSymbols","textSymbols","_ch","letters","_i2","_ch2","wideChar","_i3","_ch3","_i4","_ch4","extraLatin","_i5","_ch5","wideLatinLetterData","wideNumeralData","sizeStyleMap","sizeMultipliers","sizeAtStyle","Options","textSize","phantom","sizeMultiplier","_fontMetrics","BASESIZE","havingStyle","havingCrampedStyle","havingSize","havingBaseStyle","wantSize","havingBaseSizing","withColor","withPhantom","withFont","withTextFontFamily","withTextFontWeight","withTextFontShape","sizingClasses","oldOptions","baseSizingClasses","fontMetrics","sizeIndex","cssEmPerMu","getGlobalMetrics","ptPerUnit","pt","mm","bp","pc","cc","relativeUnit","em","validUnit","calculateSize","sizeValue","unitOptions","lookupSymbol","fontName","makeSymbol","symbolNode","lookup","canCombine","_style","sizeElementFromChildren","makeSpan","makeSvgSpan","makeFragment","retrieveTextFontName","baseFontName","fontMap","mathbf","variant","mathrm","textit","mathit","mathnormal","mathbb","mathcal","mathfrak","mathscr","mathsf","mathtt","svgData","buildCommon","mathsym","makeLineSpan","thickness","borderBottomWidth","makeAnchor","anchor","wrapFragment","makeVList","positionType","oldChildren","_depth","currPos","diff","positionData","getVListChildrenAndDepth","pstrutSize","pstrut","realChildren","minPos","maxPos","_child","_elem","wrapperClasses","wrapperStyle","childWrap","marginLeft","rows","vlist","emptySpan","depthStrut","topStrut","vtable","makeOrd","isFont","fontOrFamily","wideFontName","wideFontClass","wideCharacterFont","fontClasses","fontData","fontClass","boldsymbol","_fontName","_fontName3","_fontName2","makeGlue","measurement","staticSvg","svgNode","viewBox","preserveAspectRatio","tryCombineChars","chars","thinspace","mediumspace","thickspace","spacings","mord","mop","mbin","mrel","minner","mopen","mclose","mpunct","tightSpacings","_functions","_htmlGroupBuilders","_mathmlGroupBuilders","defineFunction","_ref","handler","htmlBuilder","mathmlBuilder","numArgs","argTypes","allowedInArgument","allowedInText","allowedInMath","numOptionalArgs","infix","primitive","defineFunctionBuilders","_ref2","normalizeArgument","ordargument","makeSpan$1","binLeftCanceller","binRightCanceller","styleMap","display","scriptscript","DomEnum","buildExpression","expression","isRealGroup","surrounding","groups","buildGroup","glueOptions","dummyPrev","dummyNext","traverseNonSpaceNodes","prevType","getTypeOfDomTree","partialGroup","checkPartialGroup","nonspace","getOutermostNode","side","makeNullDelimiter","moreClasses","baseOptions","groupNode","multiplier","buildHTMLUnbreakable","verticalAlign","buildHTML","tree","eqnNum","tagChild","nobreak","htmlNode","newDocumentFragment","MathNode","TextNode","mathMLTree","SpaceNode","makeText","makeRow","getVariant","buildExpression$1","isOrdgroup","buildGroup$1","lastGroup","_group","buildExpressionRow","buildMathML","texExpression","isDisplayMode","forMathmlOnly","annotation","semantics","wrapperClass","optionsFromSettings","settings","displayWrap","stretchyCodePoint","widehat","widecheck","widetilde","overleftarrow","underleftarrow","xleftarrow","overrightarrow","underrightarrow","xrightarrow","underbrace","overbrace","overgroup","undergroup","overleftrightarrow","underleftrightarrow","xleftrightarrow","Overrightarrow","xRightarrow","overleftharpoon","xleftharpoonup","overrightharpoon","xrightharpoonup","xLeftarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xmapsto","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xleftrightharpoons","xtwoheadleftarrow","xtwoheadrightarrow","xlongequal","xtofrom","xrightleftarrows","xrightequilibrium","xleftequilibrium","katexImagesData","overlinesegment","underlinesegment","stretchy","topPad","bottomPad","totalHeight","borderColor","lines","minWidth","viewBoxWidth","viewBoxHeight","_height","numChars","imgIndex","widthClasses","aligns","spans","paths","_minWidth","_viewBoxHeight","_height2","numSvgChildren","_svgNode","_span","buildSvgSpan_","assertNodeType","assertSymbolNodeType","typedNode","checkSymbolNodeType","grp","supSubGroup","assertSpan","isShifty","baseChar","accentBody","clearance","isStretchy","accentFull","accentWrap","accentNode","NON_STRETCHY_ACCENT_REGEX","funcName","innerGroup","kern","paddedNode","below","lowerGroup","newOptions","upperGroup","arrowPrefix","arrowBody","arrowShift","upperShift","lowerShift","arrowNode","upperNode","lowerNode","_lowerNode","cdArrowFunctionName","isStartOfArrow","cdArrow","arrowChar","labels","callFunction","bareArrow","arrowGroup","code","htmlBuilder$1","mathmlBuilder$1","breakOnTokenText","gullet","parseExpression","marginTop","globalMap","checkControlSequence","tok","letCommand","tokens","unexpandable","isExpandable","consumeSpaces","fetch","parseFunction","popToken","insert","delimiters","future","consumeArg","expandTokens","_ref3","getRHS","_ref4","middle","pushToken","getMetrics","styleWrap","delim","toStyle","delimSizeMultiplier","centerSpan","makeLargeDelim","mathrmSize","makeGlyphSpan","sizeClass","makeInner","toFixed","innerPath","verts","doubleVerts","makeStackedDelim","heightTotal","repeat","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","realHeightTotal","ceil","stack","innerHeight","_innerHeight","emPad","sqrtSvg","sqrtName","extraViniculum","sqrtMain","sqrtSize1","sqrtSize2","sqrtSize3","sqrtSize4","sqrtTall","sqrtPath","pathNode","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","delimTypeToFont","traverseSequence","sequence","heightDepth","makeCustomSizedDelim","delimType","makeSmallDelim","advanceWidth","spanHeight","texHeight","ruleWidth","delimiterExtend","maxDistFromAxis","delimiterSizes","mclass","checkDelimiter","symDelim","assertParsed","leftrightDepth","expect","right","rightColor","leftDelim","rightDelim","innerDepth","hadMiddle","isMiddle","colorOptions","leftNode","rightNode","middleDelim","textNode","middleNode","htmlBuilder$2","imgShift","isSingleChar","lineWeight","angleHeight","paddingLeft","phasePath","ruleThickness","borderStyle","borderWidth","borderTopWidth","borderRightWidth","backgroundColor","mathmlBuilder$2","thk","_ref5","_environments","defineEnvironment","getHLines","hlineInfo","nxt","consume","validateAmsEnvironmentContext","envName","parseArray","hskipBeforeAndAfter","addJot","arraystretch","colSeparationType","addEqnNum","singleRow","emptySingleRow","maxNumCols","beginGroup","expandMacroAsText","row","rowGaps","hLinesBeforeRow","cell","endGroup","nextToken","parseSizeGroup","dCellStyle","htmlBuilder$3","nr","hlines","arraycolsep","baselineskip","jot","arrayskip","arstrutHeight","arstrutDepth","setHLinePos","hlinesInGap","isDashed","inrow","outrow","elt","rowGap","colSep","colDescrNum","colDescriptions","eqnNumSpans","rw","eqnTag","colDescr","firstSeparator","separator","lineType","borderRightStyle","margin","sepwidth","pregap","col","_shift","postgap","dashes","vListElems","hline","lineShift","eqnNumCol","alignMap","mathmlBuilder$3","tbl","glue","table","menclose","columnLines","prevTypeWasAlign","iStart","iEnd","_cols","rowLines","alignedHandler","numMaths","separationType","numCols","emptyGroup","arg0","isAligned","styling","curMaths","nde","ca","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","colAlign","payload","parsedRows","endChar","rowNodes","labelNum","inLabel","wrappedArrow","parseCD","environments","nameGroup","env","_args","parseArguments","endNameToken","makeSpan$2","htmlBuilder$4","mathmlBuilder$4","lspace","rspace","binrelClass","atom","baseArg","shiftedArg","baseOp","limits","alwaysHandleSupSub","parentIsSupSub","suppressBaseShift","htmlBuilder$5","mathmlBuilder$5","fontAliases","adjustStyle","originalStyle","htmlBuilder$6","nstyle","dstyle","numerm","numer","continued","hStrut","dStrut","ruleSpacing","numShift","denomShift","frac","delimSize","denomm","denom","hasBarLine","barSize","midShift","candidateClearance","mathmlBuilder$6","isDisplay","withDelims","leftOp","rightOp","replaceWith","stylArray","delimFromValue","delimString","barNode","styl","textOrd","_ref6","assert","htmlBuilder$7","braceBody","isOver","vSpan","formatUnsupportedCmd","trustContext","keyVal","mathml","sizeData","totalheight","lastIndexOf","mathFunction","muUnit","dimension","fix","outerMode","switchMode","chooseMathStyle","assembleSupSub","supGroup","subGroup","baseShift","finalGroup","subIsSingleCharacter","_bottom","spacer","noSuccessor","htmlBuilder$8","hasLimits","large","stash","mathmlBuilder$8","operator","singleCharBigOps","fName","singleCharIntegrals","builtinMacros","defineMacro","expandOnce","consumeArgs","digitToNumber","B","E","F","digit","newcommand","existsOK","nonexistsOK","exists","isDefined","argText","expandNextToken","functions","dotsByToken","thedots","expandAfterFuture","spaceAfterDots","latexRaiseA","htmlBuilder$9","childText","sizingGroup","isAllString","word","identifier","semisimple","amount","sizeFuncs","smashHeight","smashDepth","tbArg","letter","smashedNode","lineClearance","minDelimiterHeight","delimDepth","rootm","toShift","rootVList","rootVListWrap","styleMap$1","newStyle","builderDelegate","htmlBuilderDelegate","supm","subm","minSupShift","valueBase","valueSup","valueSub","supShift","subShift","_newOptions","isOiint","maxWidth","vlistElem","_vlistElem","isBrace","_base2","_base","defaultVariant","mi","mn","mtext","cssSpace","regularSpace","pad","padNode","textFontFamilies","textFontWeights","textFontShapes","optionsWithFont","makeVerb","spaceRegexString","controlWordWhitespaceRegexString","combiningDiacriticalMarkString","combiningDiacriticalMarksEndRegex","tokenRegexString","Lexer","tokenRegex","catcodes","setCatcode","char","lex","lastIndex","nlIndex","Namespace","builtins","globalMacros","undefStack","undefs","undef","implicitCommands","MacroExpander","expansionCount","feed","newMode","pushTokens","scanArgument","isOptional","delims","isDelimited","expandableOnly","topToken","expansion","_getExpansion","expanded","expandMacro","oldStackLength","definition","catcode","stripped","bodyLexer","unicodeAccents","unicodeSymbols","Parser","breakOnInfix","endOfExpression","parseAtom","formLigatures","handleInfixNodes","overIndex","numerNode","denomNode","numerBody","denomBody","handleSupSubscript","symbolToken","parseGroup","textordArray","superscript","subscript","funcData","totalArgs","argType","parseGroupOfType","optional","parseColorGroup","parseUrlGroup","parseArgumentGroup","parseStringGroup","modeName","argToken","parseRegexGroup","regex","firstToken","groupEnd","parseSymbol","nucleus","parseTree","toParse","TypeError","render","baseNode","renderToDomTree","compatMode","renderError","katexNode","mathMLNode","_htmlNode","buildTree","katex","renderToString","__parse","__renderToDomTree","__renderToHTMLTree","buildHTMLTree","__setFontMetrics","__defineMacro","__domTree","Hypher","language","exceptions","createTrie","leftMin","rightMin","TrieNode","patternObject","patterns","_points","hyphenateText","minLength","characters","originalCharacters","wordLength","nodePoints","nodePointsLength","characterPoints","lowerCaseWord","leftmin","rightmin","_arrayPush","spreadableSymbol","isConcatSpreadable","arrayPush","isFlattenable","_baseFlatten","baseFlatten","predicate","isStrict","flattenDeep_1","compact_1","resIndex","HtmlGenerator","pictureCanvas","picture","abstract","languagePatterns","hEn","_h","blockRegex","isBlockLevel","subsection","subsubsection","paragraph","subparagraph","verbatim","_dom","htmlDocument","doc","implementation","createHTMLDocument","charset","baseURL","stylesAndScripts","domFragment","createStyleSheet","createScript","URL","applyLengthsAndGeometryToDom","setProperty","twp","mlwp","mrwp","mpwp","appendChildren","fs","compact","flattenDeep","canvas","pic","skip","LaTeXJSComponent","HTMLElement","shadow","attachShadow","onContentReady","observer","MutationObserver","mutationList","disconnect","observe","childList","async","import","default","page","host","pDoc","links","cmu","linkEl","connectedCallback"],"mappings":"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;QAAO,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,KAAS;QAAS,KAAS;QAAS,MAAe;QAAM,MAAe;QAAO,KAAS;QAAM,MAAe;QAAO,KAAS;QAAO,MAAe;QAAM,MAAe;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAS;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,KAAS;QAAO,MAAe;QAAO,MAAe;QAAM,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAO;QAAS,KAAO;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAM,KAAS;QAAM,MAAe;QAAO,MAAe;QAAM,KAAS;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAO;QAAO,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAO;QAAQ,KAAO;QAAQ,KAAO;QAAO,KAAO;QAAO,KAAS;QAAS,KAAS;QAAS,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,KAAS;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,KAAS;QAAO,KAAS;QAAS,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,KAAS;QAAO,KAAS;QAAK,KAAS;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAS;QAAK,KAAS;QAAS,KAAS;QAAS,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAO;QAAQ,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAS,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAO;QAAS,KAAS;QAAS,KAAS;QAAS,KAAO;QAAQ,KAAO;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAO;QAAO,KAAO;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,KAAS;QAAQ,KAAS;QAAQ,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,MAAe;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAO;QAAS,KAAO;QAAS,KAAS;QAAQ,KAAS;QAAQ,KAAO;QAAO,KAAS;QAAO,MAAe;QAAO,MAAe;QAAM,MAAe;QAAO,KAAS;QAAM,KAAS;QAAO,MAAe;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAO,KAAS;QAAO,KAAS;QAAQ,KAAO;QAAQ,KAAO;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAO,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAQ,KAAS;QAAU,KAAS;QAAS,KAAS;QAAS,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAO,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAS,KAAS;QAAK,KAAO;QAAQ,KAAS;QAAK,KAAS;QAAK,KAAS;QAAK,KAAS;QAAK,KAAS;QAAK,KAAS;QAAU,KAAS;QAAU,KAAS;QAAK,KAAS;QAAM,KAAS;QAAK,KAAS;QAAM,KAAS;QAAO,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAS,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAU,KAAS;QAAO,KAAS;QAAM,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAS,KAAS;QAAS,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAM,KAAS;QAAM,KAAS;QAAQ,KAAS;QAAQ,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAS,KAAS;QAAM,KAAS;QAAM,KAAS;QAAS,KAAS;QAAS,KAAS;QAAM,KAAS;QAAM,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAO,KAAS;QAAQ,KAAS;QAAO,KAAS;QAAQ,KAAS;IAAA,GAEp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C;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS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G;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,MAAQ;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QACjC,MAAQ;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QACjC,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,MAAQ;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QACjC,MAAQ;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QACjC,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,MAAQ;YAAC;YAAG;YAAS;YAAS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SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,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C1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAG;YAAG;YAAG;SAAA;QACpB,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAS;YAAG;SAAA;QACtC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAChC,MAAQ;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QACjC,MAAQ;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC3B,OAAS;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC5B,OAAS;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;IAAA;IAEpC,eAAe;QACb,IAAM;YAAC;YAAG;YAAG;YAAG;YAAG;SAAA;QACnB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QACzB,IAAM;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAG;YAAS;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAG;YAAS;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAG;YAAS;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAS;YAAS;YAAG;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG;YAAS;YAAS;YAAG;SAAA;QAC/B,IAAM;YAAC;YAAG;YAAS;YAAS;YAAS;SAAA;QACrC,IAAM;YAAC;YAAG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,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAG;YAAG;YAAG;SAAA;QACpB,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAG;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAS;YAAS;YAAG;YAAG;SAAA;QAChC,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;YAAG;YAAS;YAAG;YAAG;SAAA;QAC1B,KAAO;YAAC;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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"debugId":null}}]
}