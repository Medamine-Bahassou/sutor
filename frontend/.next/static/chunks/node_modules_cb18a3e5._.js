(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/lucide-react/dist/esm/icons/file-text.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "__iconNode": (()=>__iconNode),
    "default": (()=>FileText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/createLucideIcon.js [app-client] (ecmascript)");
;
const __iconNode = [
    [
        "path",
        {
            d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z",
            key: "1rqfz7"
        }
    ],
    [
        "path",
        {
            d: "M14 2v4a2 2 0 0 0 2 2h4",
            key: "tnqrlb"
        }
    ],
    [
        "path",
        {
            d: "M10 9H8",
            key: "b1mrlr"
        }
    ],
    [
        "path",
        {
            d: "M16 13H8",
            key: "t4e002"
        }
    ],
    [
        "path",
        {
            d: "M16 17H8",
            key: "z1uh3a"
        }
    ]
];
const FileText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])("file-text", __iconNode);
;
 //# sourceMappingURL=file-text.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/icons/file-text.js [app-client] (ecmascript) <export default as FileText>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FileText": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$file$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$file$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/file-text.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@latex2js/utils/esm/svg-utils.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SVGSelection": (()=>SVGSelection),
    "select": (()=>select)
});
class SVGSelection {
    constructor(elements){
        if (elements instanceof Element) {
            this.elements = [
                elements
            ];
        } else if (elements instanceof NodeList) {
            this.elements = Array.from(elements).filter((node)=>node.nodeType === Node.ELEMENT_NODE);
        } else {
            this.elements = Array.isArray(elements) ? elements : [];
        }
    }
    append(tagName) {
        const newElements = [];
        this.elements.forEach((parent)=>{
            const elementName = tagName.startsWith('svg:') ? tagName.substring(4) : tagName;
            const element = document.createElementNS('http://www.w3.org/2000/svg', elementName);
            parent.appendChild(element);
            newElements.push(element);
        });
        return new SVGSelection(newElements);
    }
    attr(name, value) {
        this.elements.forEach((el)=>{
            el.setAttribute(name, String(value));
        });
        return this;
    }
    style(name, value) {
        this.elements.forEach((el)=>{
            if (el instanceof SVGElement || el instanceof HTMLElement) {
                el.style[name] = String(value);
            }
        });
        return this;
    }
    selectAll(selector) {
        const selected = [];
        this.elements.forEach((parent)=>{
            const found = parent.querySelectorAll(selector);
            selected.push(...Array.from(found));
        });
        return new SVGSelection(selected);
    }
    remove() {
        this.elements.forEach((el)=>{
            if (el.parentNode) {
                el.parentNode.removeChild(el);
            }
        });
        return this;
    }
    on(event, handler) {
        this.elements.forEach((el)=>{
            el.addEventListener(event, handler);
        });
        return this;
    }
    node() {
        return this.elements[0] || null;
    }
    text(content) {
        this.elements.forEach((el)=>{
            if (el instanceof SVGTextElement || el instanceof HTMLElement) {
                el.textContent = content;
            }
        });
        return this;
    }
}
function select(selector) {
    if (typeof selector === 'string') {
        const element = document.querySelector(selector);
        return new SVGSelection(element ? [
            element
        ] : []);
    }
    return new SVGSelection(selector);
}
}}),
"[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "RE": (()=>RE),
    "X": (()=>X),
    "Xinv": (()=>Xinv),
    "Y": (()=>Y),
    "Yinv": (()=>Yinv),
    "arrowType": (()=>arrowType),
    "convertUnits": (()=>convertUnits),
    "dotType": (()=>dotType),
    "evaluate": (()=>evaluate),
    "matchrepl": (()=>matchrepl),
    "parseArrows": (()=>parseArrows),
    "parseOptions": (()=>parseOptions),
    "simplerepl": (()=>simplerepl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/svg-utils.js [app-client] (ecmascript)");
const simplerepl = function(regex, replace) {
    return function(_m, contents) {
        return contents.replace(regex, replace);
    };
};
const matchrepl = function(regex, callback) {
    return function(m, contents) {
        if (Array.isArray(m)) {
            m.forEach((match)=>{
                var m2 = match.match(regex);
                contents = contents.replace(m2.input, callback(m2));
            });
        }
        return contents;
    };
};
const convertUnits = function(value) {
    var m = null;
    if (m = value.match(/([^c]+)\s*cm/)) {
        var num1 = Number(m[1]);
        return num1 * 50; //118;
    } else if (m = value.match(/([^i]+)\s*in/)) {
        var num2 = Number(m[1]);
        return num2 * 20; //46;
    } else if (m = value.match(/(.*)/)) {
        var num3 = Number(m[1]);
        return num3 * 50;
    } else {
        var num4 = Number(value);
        return num4;
    }
};
const RE = {
    options: '(\\[[^\\]]*\\])?',
    type: '(\\{[^\\}]*\\})?',
    squiggle: '\\{([^\\}]*)\\}',
    squiggleOpt: '(\\{[^\\}]*\\})?',
    coordsOpt: '(\\(\\s*([^\\)]*),([^\\)]*)\\s*\\))?',
    coords: '\\(\\s*([^\\)]*),([^\\)]*)\\s*\\)'
};
const parseOptions = function(opts) {
    var options = opts.replace(/[\]\[]/g, '');
    var all = options.split(',');
    var obj = {};
    all.forEach((option)=>{
        var kv = option.split('=');
        if (kv.length == 2) {
            obj[kv[0].trim()] = kv[1].trim();
        }
    });
    return obj;
};
const parseArrows = function(m) {
    var lineType = m;
    var arrows = [
        0,
        0
    ];
    var dots = [
        0,
        0
    ];
    if (lineType) {
        var type = lineType.match(/\{([^\-]*)?\-([^\-]*)?\}/);
        if (type) {
            if (type[1]) {
                // check starting point
                if (type[1].match(/\*/)) {
                    dots[0] = 1;
                } else if (type[1].match(/</)) {
                    arrows[0] = 1;
                }
            }
            if (type[2]) {
                // check ending point
                if (type[2].match(/\*/)) {
                    dots[1] = 1;
                } else if (type[2].match(/>/)) {
                    arrows[1] = 1;
                }
            }
        }
    }
    return {
        arrows: arrows,
        dots: dots
    };
};
const evaluate = function(exp) {
    const num = Number(exp);
    if (!isNaN(num)) return num;
    this.variables = this.variables || {};
    const mathKeys = Object.keys(Math);
    const varKeys = Object.keys(this.variables);
    const allKeys = [
        ...mathKeys,
        ...varKeys
    ];
    const allValues = [
        ...mathKeys.map((k)=>Math[k]),
        ...varKeys.map((k)=>this.variables[k])
    ];
    try {
        // @ts-ignore
        const fn = new Function(...allKeys, `return (${exp});`);
        return fn(...allValues);
    } catch (e) {
        console.warn('Evaluation error:', e);
        return NaN;
    }
};
const X = function(v) {
    // Enhanced validation for coordinate transformation
    const numV = typeof v === 'string' ? parseFloat(v) : v;
    if (isNaN(numV)) {
        console.warn('X function: Invalid input value', {
            input: v,
            parsed: numV
        });
        return 0;
    }
    if (isNaN(this.w) || isNaN(this.x1) || isNaN(this.xunit)) {
        console.warn('X function: NaN detected in context properties', {
            w: this.w,
            x1: this.x1,
            xunit: this.xunit
        });
        return 0;
    }
    // Validate context properties are reasonable
    if (this.xunit <= 0) {
        console.warn('X function: Invalid xunit value', {
            xunit: this.xunit
        });
        return 0;
    }
    // Use more precise calculation with proper parentheses
    const result = (this.w - (this.x1 - numV)) * this.xunit;
    // Validate result is finite
    if (!isFinite(result)) {
        console.warn('X function: Non-finite result', {
            input: numV,
            w: this.w,
            x1: this.x1,
            xunit: this.xunit,
            result
        });
        return 0;
    }
    return Math.round(result * 100) / 100; // Round to 2 decimal places for pixel precision
};
const Xinv = function(v) {
    return Number(v) / this.xunit - this.w + this.x1;
};
const Y = function(v) {
    // Enhanced validation for coordinate transformation
    const numV = typeof v === 'string' ? parseFloat(v) : v;
    if (isNaN(numV)) {
        console.warn('Y function: Invalid input value', {
            input: v,
            parsed: numV
        });
        return 0;
    }
    if (isNaN(this.y1) || isNaN(this.yunit)) {
        console.warn('Y function: NaN detected in context properties', {
            y1: this.y1,
            yunit: this.yunit
        });
        return 0;
    }
    // Validate context properties are reasonable
    if (this.yunit <= 0) {
        console.warn('Y function: Invalid yunit value', {
            yunit: this.yunit
        });
        return 0;
    }
    // Use more precise calculation for Y coordinate inversion
    const result = (this.y1 - numV) * this.yunit;
    // Validate result is finite
    if (!isFinite(result)) {
        console.warn('Y function: Non-finite result', {
            input: numV,
            y1: this.y1,
            yunit: this.yunit,
            result
        });
        return 0;
    }
    return Math.round(result * 100) / 100; // Round to 2 decimal places for pixel precision
};
const Yinv = function(v) {
    return this.y1 - Number(v) / this.yunit;
};
const arrowType = parseArrows;
const dotType = parseArrows;
;
}}),
"[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/svg-utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/latex2js/esm/lib/text.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Expressions": (()=>Expressions),
    "Functions": (()=>Functions),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>");
;
const Expressions = {
    emph: /\\emph\{[^}]*\}/g,
    bf: /\{*\\bf [^}]*\}/g,
    rm: /\{*\\rm [^}]*\}/g,
    sl: /\{*\\sl [^}]*\}/g,
    it: /\{*\\it [^}]*\}/g,
    tt: /\{*\\tt [^}]*\}/g,
    mdash: /---/g,
    ndash: /--/g,
    openq: /``/g,
    closeq: /''/g,
    TeX: /\\TeX\\|\\TeX/g,
    LaTeX: /\\LaTeX\\|\\LaTeX/g,
    vspace: /\\vspace/g,
    cite: /\\cite\[\d+\]\{[^}]*\}/g,
    href: /\\href\{[^}]*\}\{[^}]*\}/g,
    img: /\\img\{[^}]*\}/g,
    set: /\\set\{[^}]*\}/g,
    youtube: /\\youtube\{[^}]*\}/g,
    euler: /Euler\^/g
};
const Functions = {
    cite: function(m, contents) {
        m.forEach((match)=>{
            var m2 = match.match(/\\cite\[(\d+)\]\{([^}]*)\}/);
            var m = location.pathname.match(/\/books\/(\d+)\//);
            var book_id = 0;
            if (m) {
                book_id = parseInt(m[1], 10);
            }
            contents = contents.replace(m2.input, '<a data-bypass="true" href="/references/' + book_id + '/' + m2[2] + '">[p' + m2[1] + ']</a>');
        });
        return contents;
    },
    img: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\\img\{([^}]*)\}/, function(m) {
        return '<div style="width: 100%;text-align: center;"><img src="' + m[1] + '"></div>';
    }),
    youtube: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\\youtube\{([^}]*)\}/, function(m) {
        return '<div style="width: 100%;text-align: center;"><iframe width="560" height="315" src="https://www.youtube.com/embed/' + m[1] + '" frameborder="0" allowfullscreen></iframe></div>';
    }),
    href: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\\href\{([^}]*)\}\{([^}]*)\}/, function(m) {
        return '<a href="' + m[1] + '">' + m[2] + '</a>';
    }),
    set: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\\set\{([^}]*)\}/, function(m) {
        return '<i>' + m[1] + '</i>';
    }),
    euler: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/Euler\^/, 'exp'),
    emph: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{([^}]*)\}/, function(m) {
        return '<i>' + m[1] + '</i>';
    }),
    bf: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{*\\bf ([^}]*)\}/, function(m) {
        return '<b>' + m[1] + '</b>';
    }),
    rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{*\\rm ([^}]*)\}/, function(m) {
        return '<span class="rm">' + m[1] + '</span>';
    }),
    sl: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{*\\sl ([^}]*)\}/, function(m) {
        return '<i>' + m[1] + '</i>';
    }),
    it: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{*\\it ([^}]*)\}/, function(m) {
        return '<i>' + m[1] + '</i>';
    }),
    tt: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["matchrepl"])(/\{*\\tt ([^}]*)\}/, function(m) {
        return '<span class="tt">' + m[1] + '</span>';
    }),
    ndash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/--/g, '&ndash;'),
    mdash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/---/g, '&mdash;'),
    openq: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/``/g, '&ldquo;'),
    closeq: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/''/g, '&rdquo;'),
    vspace: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/\\vspace/g, '<br>'),
    TeX: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/\\TeX\\|\\TeX/g, '$\\TeX$'),
    LaTeX: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["simplerepl"])(/\\LaTeX\\|\\LaTeX/g, '$\\LaTeX$')
};
const __TURBOPACK__default__export__ = {
    Expressions,
    Functions
};
}}),
"[project]/node_modules/latex2js/esm/lib/headers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Expressions": (()=>Expressions),
    "Functions": (()=>Functions),
    "default": (()=>__TURBOPACK__default__export__)
});
const Expressions = {
    bq: /\\begin\{quotation\}/,
    claim: /\\begin\{claim\}/,
    corollary: /\\begin\{corollary\}/,
    definition: /\\begin\{definition\}/,
    endclaim: /\\end\{claim\}/,
    endcorallary: /\\end\{corallary\}/,
    enddefinition: /\\end\{definition\}/,
    endexample: /\\end\{example\}/,
    endproblem: /\\end\{problem\}/,
    endsolution: /\\end\{solution\}/,
    endtheorem: /\\end\{theorem\}/,
    eq: /\\end\{quotation\}/,
    example: /\\begin\{example\}/,
    problem: /\\begin\{problem\}/,
    proof: /\\begin\{proof\}/,
    qed: /\\end\{proof\}/,
    solution: /\\begin\{solution\}/,
    theorem: /\\begin\{theorem\}/
};
const Functions = {
    bq: ()=>'<p class="quotation">',
    claim: ()=>'<h4>Claim</h4>',
    corollary: ()=>'<h4>Corollary</h4>',
    definition: ()=>'<h4>Definition</h4>',
    endclaim: ()=>'',
    endcorollary: ()=>'',
    enddefinition: ()=>'',
    endexample: ()=>'',
    endproblem: ()=>'',
    endsolution: ()=>'',
    endtheorem: ()=>'',
    eq: ()=>'</p>',
    example: ()=>'<h4>Example</h4>',
    problem: ()=>'<h4>Problem</h4>',
    proof: ()=>'<h4>Proof</h4>',
    qed: ()=>'$\\qed$',
    solution: ()=>'<h4>Solution</h4>',
    theorem: ()=>'<h4>Theorem</h4>'
};
const __TURBOPACK__default__export__ = {
    Expressions,
    Functions
};
}}),
"[project]/node_modules/@latex2js/settings/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Expressions": (()=>Expressions),
    "Functions": (()=>Functions),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>");
;
const Expressions = {
    fillcolor: /^fillcolor$/,
    fillstyle: /^fillstyle$/,
    linecolor: /^linecolor$/,
    linestyle: /^linestyle$/,
    unit: /^unit/,
    runit: /^runit/,
    xunit: /^xunit/,
    yunit: /^yunit/
};
const Functions = {
    fillcolor (o, v) {
        o.fillcolor = v;
    },
    fillstyle (o, v) {
        o.fillstyle = v;
    },
    linecolor (o, v) {
        o.linecolor = v;
    },
    linestyle (o, v) {
        o.linestyle = v;
    },
    unit (o, v) {
        const converted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["convertUnits"])(v);
        o.unit = converted;
        o.runit = converted;
        o.xunit = converted;
        o.yunit = converted;
    },
    runit (o, v) {
        const converted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["convertUnits"])(v);
        o.runit = converted;
    },
    xunit (o, v) {
        const converted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["convertUnits"])(v);
        o.xunit = converted;
    },
    yunit (o, v) {
        const converted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["convertUnits"])(v);
        o.yunit = converted;
    }
};
const __TURBOPACK__default__export__ = {
    Expressions,
    Functions
};
}}),
"[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Expressions": (()=>Expressions),
    "Functions": (()=>Functions),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$settings$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/settings/esm/index.js [app-client] (ecmascript)");
;
;
const Expressions = {
    pspicture: /\\begin\{pspicture\}\(\s*(.*),(.*)\s*\)\(\s*(.*),(.*)\s*\)/,
    psframe: /\\psframe\(\s*(.*),(.*)\s*\)\(\s*(.*),(.*)\s*\)/,
    psplot: /\\psplot(\[[^\]]*\])?\{([^\}]*)\}\{([^\}]*)\}\{([^\}]*)\}/,
    psarc: new RegExp('\\\\psarc' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].type + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle),
    pscircle: /\\pscircle.*\(\s*(.*),(.*)\s*\)\{(.*)\}/,
    pspolygon: new RegExp('\\\\pspolygon' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + '(.*)'),
    psaxes: new RegExp('\\\\psaxes' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].type + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coordsOpt + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coordsOpt),
    slider: new RegExp('\\\\slider' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle),
    psline: new RegExp('\\\\psline' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].type + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coordsOpt),
    userline: new RegExp('\\\\userline' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].type + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggleOpt + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggleOpt + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggleOpt + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggleOpt),
    uservariable: new RegExp('\\\\uservariable' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].options + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].squiggle),
    rput: /\\rput\((.*),(.*)\)\{(.*)\}/,
    psset: /\\psset\{(.*)\}/
};
const Functions = {
    slider (m) {
        var obj = {
            scalar: 1,
            min: Number(m[2]),
            max: Number(m[3]),
            variable: m[4],
            latex: m[5],
            value: Number(m[6])
        };
        this.variables = this.variables || {};
        this.variables[obj.variable] = obj.value;
        this.sliders = this.sliders || [];
        this.sliders.push(obj);
        if (m[1]) {
            Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(m[1]));
        }
        return obj;
    },
    pspicture (m) {
        var p = {
            x0: Number(m[1]),
            y0: Number(m[2]),
            x1: Number(m[3]),
            y1: Number(m[4])
        };
        var s = {
            w: p.x1 - p.x0,
            h: p.y1 - p.y0
        };
        Object.assign(this, p, s);
        return Object.assign(p, s);
    },
    psframe (m) {
        var obj = {
            x1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[1]),
            y1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[2]),
            x2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
            y2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4])
        };
        return obj;
    },
    pscircle (m) {
        var obj = {
            cx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[1]),
            cy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[2]),
            r: this.xunit * m[3]
        };
        return obj;
    },
    psaxes (m) {
        var obj = {
            dx: 1 * this.xunit,
            dy: 1 * this.yunit,
            arrows: [
                0,
                0
            ],
            dots: [
                0,
                0
            ],
            ticks: 'all'
        };
        if (m[1]) {
            var options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(m[1]);
            if (options.Dx) {
                obj.dx = Number(options.Dx) * this.xunit;
            }
            if (options.Dy) {
                obj.dy = Number(options.Dy) * this.yunit;
            }
        }
        // arrows?
        var l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseArrows"])(m[2]);
        obj.arrows = l.arrows;
        obj.dots = l.dots;
        // \psaxes*[par]{arrows}(x0,y0)(x1,y1)(x2,y2)
        // m[1] [options]
        // m[2] {<->}
        // origin
        // m[3] x0
        // m[4] y0
        // bottom left corner
        // m[6] x1
        // m[7] y1
        // top right corner
        // m[9] x2
        // m[10] y2
        if (m[5] && !m[8]) {
            // If (x0,y0) is omitted, then the origin is (x1,y1).
            obj.origin = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4])
            ];
            obj.bottomLeft = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4])
            ];
            obj.topRight = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[6]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[7])
            ];
        } else if (!m[5] && !m[8]) {
            // If both (x0,y0) and (x1,y1) are omitted, (0,0) is used as the default.
            obj.origin = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0)
            ];
            obj.bottomLeft = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0)
            ];
            obj.topRight = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[6])
            ];
        } else {
            // all three are specified
            obj.origin = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4])
            ];
            obj.bottomLeft = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[6]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[7])
            ];
            obj.topRight = [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[9]),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[10])
            ];
        }
        return obj;
    },
    psplot (m) {
        var startX = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["evaluate"].call(this, m[2]);
        var endX = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["evaluate"].call(this, m[3]);
        var data = [];
        var x;
        // get env
        var expression = '';
        Object.entries(this.variables || {}).forEach(([name, val])=>{
            expression += 'var ' + name + ' = ' + val + ';';
        });
        const mathFunctions = 'var cos=Math.cos,sin=Math.sin,tan=Math.tan,atan=Math.atan,atan2=Math.atan2,exp=Math.exp,log=Math.log,sqrt=Math.sqrt,abs=Math.abs,floor=Math.floor,ceil=Math.ceil,round=Math.round,pow=Math.pow,PI=Math.PI,E=Math.E;';
        expression += mathFunctions + 'return ' + m[4] + ';';
        for(x = startX; x <= endX; x += 0.005){
            data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, x));
            try {
                const evalFunc = new Function('x', expression);
                const yValue = evalFunc(x);
                if (yValue !== undefined && !isNaN(yValue)) {
                    data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, yValue));
                } else {
                    data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0));
                }
            } catch (err) {
                data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0)); // fallback value
            }
        }
        var obj = {
            linecolor: 'black',
            linestyle: 'solid',
            fillstyle: 'none',
            fillcolor: 'none',
            linewidth: 2
        };
        if (m[1]) Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(m[1]));
        obj.data = data;
        return obj;
    },
    pspolygon (m) {
        var coords = m[2];
        if (!coords) return;
        var manyCoords = new RegExp(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords, 'g');
        var matches = coords.match(manyCoords);
        var singleCoord = new RegExp(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["RE"].coords);
        var data = [];
        matches.forEach((coord)=>{
            var d = singleCoord.exec(coord);
            if (d) {
                data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, d[1]));
                data.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, d[2]));
            }
        });
        var obj = {
            linecolor: 'black',
            linestyle: 'solid',
            fillstyle: 'none',
            fillcolor: 'black',
            linewidth: 2,
            data: data
        };
        if (m[1]) Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(m[1]));
        return obj;
    },
    psarc (m) {
        var l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseArrows"])(m[2]);
        var arrows = l.arrows;
        var dots = l.dots;
        var obj = {
            linecolor: 'black',
            linestyle: 'solid',
            fillstyle: 'solid',
            fillcolor: 'black',
            linewidth: 2,
            arrows: arrows,
            dots: dots,
            cx: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0),
            cy: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0)
        };
        if (m[1]) {
            Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(m[1]));
        }
        // m[1] options
        // m[2] arrows
        // m[3] x1
        // m[4] y1
        // m[5] radius
        // m[6] angleA
        // m[7] angleB
        if (m[3]) {
            obj.cx = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]);
        }
        if (m[4]) {
            obj.cy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]);
        }
        // choose x units over y, no reason...
        obj.r = Number(m[5]) * this.xunit;
        obj.angleA = Number(m[6]) * Math.PI / 180;
        obj.angleB = Number(m[7]) * Math.PI / 180;
        obj.A = {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, Number(m[5]) * Math.cos(obj.angleA)),
            y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, Number(m[5]) * Math.sin(obj.angleA))
        };
        obj.B = {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, Number(m[5]) * Math.cos(obj.angleB)),
            y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, Number(m[5]) * Math.sin(obj.angleB))
        };
        return obj;
    },
    psline (m) {
        var options = m[1];
        var lineType = m[2];
        var l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseArrows"])(lineType);
        var arrows = l.arrows;
        var dots = l.dots;
        var obj = {
            linecolor: 'black',
            linestyle: 'solid',
            fillstyle: 'solid',
            fillcolor: 'black',
            linewidth: 2,
            arrows: arrows,
            dots: dots
        };
        if (m[5]) {
            obj.x1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]);
            obj.y1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]);
            obj.x2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[6]);
            obj.y2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[7]);
        } else {
            obj.x1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0);
            obj.y1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0);
            obj.x2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]);
            obj.y2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]);
        }
        if (options) {
            Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(options));
        }
        // TODO: add regex
        if (typeof obj.linewidth === 'string') {
            obj.linewidth = 2;
        }
        return obj;
    },
    uservariable (m) {
        var coords = [];
        if (this.userx && this.usery) {
            // coords.push( Xinv.call(this, this.userx) );
            // coords.push( Yinv.call(this, this.usery) );
            coords.push(Number(this.userx));
            coords.push(Number(this.usery));
        } else {
            coords.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]));
            coords.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]));
        }
        var nx1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Xinv"].call(this, coords[0]);
        var ny1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Yinv"].call(this, coords[1]);
        var expx1 = 'var x = ' + nx1 + ';';
        var expy1 = 'var y = ' + ny1 + ';';
        // return X.call(this, eval(expy1 + expx1 + xExp));
        var obj = {
            name: m[2],
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
            y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]),
            func: m[5],
            value: (()=>{
                try {
                    const mathFunctions = 'var cos=Math.cos,sin=Math.sin,tan=Math.tan,atan=Math.atan,atan2=Math.atan2,exp=Math.exp,log=Math.log,sqrt=Math.sqrt,abs=Math.abs,floor=Math.floor,ceil=Math.ceil,round=Math.round,pow=Math.pow,PI=Math.PI,E=Math.E;';
                    const evalFunc = new Function('', mathFunctions + expx1 + expy1 + 'return ' + m[5]);
                    return evalFunc();
                } catch (err) {
                    console.warn('Error evaluating uservariable expression:', err);
                    return 0;
                }
            })()
        };
        return obj;
    },
    userline (m) {
        var options = m[1];
        // WE ARENT USING THIS YET!!!! e.g., [linecolor=green]
        var lineType = m[2];
        var l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseArrows"])(lineType);
        var arrows = l.arrows;
        var dots = l.dots;
        var xExp = m[7];
        var yExp = m[8];
        const mathFunctions = 'var cos=Math.cos,sin=Math.sin,tan=Math.tan,atan=Math.atan,atan2=Math.atan2,exp=Math.exp,log=Math.log,sqrt=Math.sqrt,abs=Math.abs,floor=Math.floor,ceil=Math.ceil,round=Math.round,pow=Math.pow,PI=Math.PI,E=Math.E;';
        if (xExp) xExp = mathFunctions + xExp.replace(/^\{/, '').replace(/\}$/, '');
        if (yExp) yExp = mathFunctions + yExp.replace(/^\{/, '').replace(/\}$/, '');
        var xExp2 = m[9];
        var yExp2 = m[10];
        if (xExp2) xExp2 = mathFunctions + xExp2.replace(/^\{/, '').replace(/\}$/, '');
        if (yExp2) yExp2 = mathFunctions + yExp2.replace(/^\{/, '').replace(/\}$/, '');
        var expression = '';
        Object.entries(this.variables || {}).forEach(([name, val])=>{
            expression += 'var ' + name + ' = ' + val + ';';
        });
        var obj = {
            x1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[3]),
            y1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[4]),
            x2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[5]),
            y2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[6]),
            xExp: xExp,
            yExp: yExp,
            xExp2: xExp2,
            yExp2: yExp2,
            userx: (coords)=>{
                var nx1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Xinv"].call(this, coords[0]);
                var ny1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Yinv"].call(this, coords[1]);
                var expx1 = 'var x = ' + nx1 + ';';
                var expy1 = 'var y = ' + ny1 + ';';
                try {
                    const cleanExp = xExp ? xExp.replace(/^var cos=Math\.cos[^;]*;/, '') : '0';
                    const evalFunc = new Function('', mathFunctions + expression + expy1 + expx1 + 'return (' + cleanExp + ')');
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, evalFunc());
                } catch (err) {
                    console.warn('Error evaluating userx expression:', err);
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0);
                }
            },
            usery: (coords)=>{
                var nx2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Xinv"].call(this, coords[0]);
                var ny2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Yinv"].call(this, coords[1]);
                var expx2 = 'var x = ' + nx2 + ';';
                var expy2 = 'var y = ' + ny2 + ';';
                try {
                    const cleanExp = yExp ? yExp.replace(/^var cos=Math\.cos[^;]*;/, '') : '0';
                    const evalFunc = new Function('', mathFunctions + expression + expy2 + expx2 + 'return (' + cleanExp + ')');
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, evalFunc());
                } catch (err) {
                    console.warn('Error evaluating usery expression:', err);
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0);
                }
            },
            userx2: (coords)=>{
                var nx3 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Xinv"].call(this, coords[0]);
                var ny3 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Yinv"].call(this, coords[1]);
                var expx3 = 'var x = ' + nx3 + ';';
                var expy3 = 'var y = ' + ny3 + ';';
                try {
                    const cleanExp = xExp2 ? xExp2.replace(/^var cos=Math\.cos[^;]*;/, '') : '0';
                    const evalFunc = new Function('', mathFunctions + expression + expy3 + expx3 + 'return (' + cleanExp + ')');
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, evalFunc());
                } catch (err) {
                    console.warn('Error evaluating userx2 expression:', err);
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, 0);
                }
            },
            usery2: (coords)=>{
                var nx4 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Xinv"].call(this, coords[0]);
                var ny4 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Yinv"].call(this, coords[1]);
                var expx4 = 'var x = ' + nx4 + ';';
                var expy4 = 'var y = ' + ny4 + ';';
                try {
                    const cleanExp = yExp2 ? yExp2.replace(/^var cos=Math\.cos[^;]*;/, '') : '0';
                    const evalFunc = new Function('', mathFunctions + expression + expy4 + expx4 + 'return (' + cleanExp + ')');
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, evalFunc());
                } catch (err) {
                    console.warn('Error evaluating usery2 expression:', err);
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, 0);
                }
            },
            linecolor: 'black',
            linestyle: 'solid',
            fillstyle: 'solid',
            fillcolor: 'black',
            linewidth: 2,
            arrows: arrows,
            dots: dots
        };
        if (options) {
            Object.assign(obj, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["parseOptions"])(options));
        }
        // TODO: add regex
        if (typeof obj.linewidth === 'string') {
            obj.linewidth = 2;
        }
        return obj;
    },
    rput (m) {
        return {
            x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["X"].call(this, m[1]),
            y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this, m[2]),
            text: m[3]
        };
    },
    psset (m) {
        const pairs = m[1].split(',').map((pair)=>pair.split('='));
        const obj = {};
        pairs.forEach((pair)=>{
            const key = pair[0];
            const value = pair[1];
            Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$settings$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Expressions).forEach((setting)=>{
                const exp = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$settings$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Expressions[setting];
                if (key.match(exp)) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$settings$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Functions[setting](obj, value);
                }
            });
        });
        return obj;
    }
};
const __TURBOPACK__default__export__ = {
    Expressions,
    Functions
};
}}),
"[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "arrow": (()=>arrow),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <locals>");
;
function arrow(x1, y1, x2, y2) {
    var t = Math.PI / 6;
    var d = 8;
    var dx = x2 - x1, dy = y2 - y1;
    var l = Math.sqrt(dx * dx + dy * dy);
    var cost = Math.cos(t);
    var sint = Math.sin(t);
    var dl = d / l;
    var x = x2 - (dx * cost - dy * sint) * dl;
    var y = y2 - (dy * cost + dx * sint) * dl;
    var context = [];
    context.push('M');
    context.push(x2);
    context.push(y2);
    context.push('L');
    context.push(x);
    context.push(y);
    cost = Math.cos(-t);
    sint = Math.sin(-t);
    x = x2 - (dx * cost - dy * sint) * dl;
    y = y2 - (dy * cost + dx * sint) * dl;
    context.push(x);
    context.push(y);
    context.push('Z');
    return context.join(' ');
}
const psgraph = {
    env: null,
    getSize () {
        const padding = 20;
        this.env.scale = 1;
        const goalWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0) - padding;
        if (goalWidth <= this.env.w * this.env.xunit) {
            this.env.scale = goalWidth / this.env.w / this.env.xunit;
        }
        const width = this.env.w * this.env.xunit;
        const height = this.env.h * this.env.yunit;
        return {
            width,
            height
        };
    },
    psframe (svg) {
        svg.append('svg:line').attr('x1', this.x1).attr('y1', this.y1).attr('x2', this.x2).attr('y2', this.y1).style('stroke-width', 2).style('stroke', 'rgb(0,0,0)').style('stroke-opacity', 1);
        svg.append('svg:line').attr('x1', this.x2).attr('y1', this.y1).attr('x2', this.x2).attr('y2', this.y2).style('stroke-width', 2).style('stroke', 'rgb(0,0,0)').style('stroke-opacity', 1);
        svg.append('svg:line').attr('x1', this.x2).attr('y1', this.y2).attr('x2', this.x1).attr('y2', this.y2).style('stroke-width', 2).style('stroke', 'rgb(0,0,0)').style('stroke-opacity', 1);
        svg.append('svg:line').attr('x1', this.x1).attr('y1', this.y2).attr('x2', this.x1).attr('y2', this.y1).style('stroke-width', 2).style('stroke', 'rgb(0,0,0)').style('stroke-opacity', 1);
    },
    pscircle: function(svg) {
        svg.append('svg:circle').attr('cx', this.cx).attr('cy', this.cy).attr('r', this.r).style('stroke', 'black').style('fill', 'none').style('stroke-width', 2).style('stroke-opacity', 1);
    },
    psplot (svg) {
        var context = [];
        context.push('M');
        if (this.fillstyle === 'solid') {
            context.push(this.data[0]);
            context.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this.global, 0));
        } else {
            context.push(this.data[0]);
            context.push(this.data[1]);
        }
        context.push('L');
        this.data.forEach((data)=>{
            context.push(data);
        });
        if (this.fillstyle === 'solid') {
            context.push(this.data[this.data.length - 2]);
            context.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Y"].call(this.global, 0));
            context.push('Z');
        }
        svg.append('svg:path').attr('d', context.join(' ')).attr('class', 'psplot').style('stroke-width', this.linewidth).style('stroke-opacity', 1).style('fill', this.fillstyle === 'none' ? 'none' : this.fillcolor).style('stroke', this.linecolor);
    },
    pspolygon (svg) {
        var context = [];
        context.push('M');
        context.push(this.data[0]);
        context.push(this.data[1]);
        context.push('L');
        this.data.forEach((data)=>{
            context.push(data);
        });
        context.push('Z');
        svg.append('svg:path').attr('d', context.join(' ')).style('stroke-width', this.linewidth).style('stroke-opacity', 1).style('fill', this.fillstyle === 'none' ? 'none' : this.fillcolor).style('stroke', 'black');
    },
    psarc (svg) {
        var context = [];
        context.push('M');
        context.push(this.cx);
        context.push(this.cy);
        context.push('L');
        context.push(this.A.x);
        context.push(this.A.y);
        context.push('A');
        context.push(this.A.x);
        context.push(this.A.y);
        context.push(0);
        context.push(0);
        context.push(0);
        context.push(this.B.x);
        context.push(this.B.y);
        svg.append('svg:path').attr('d', context.join(' ')).style('stroke-width', 2).style('stroke-opacity', 1).style('fill', 'blue').style('stroke', 'black');
    },
    psaxes (svg) {
        var xaxis = [
            this.bottomLeft[0],
            this.topRight[0]
        ];
        var yaxis = [
            this.bottomLeft[1],
            this.topRight[1]
        ];
        var origin = this.origin;
        function line(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).style('stroke-width', 2).style('stroke', 'rgb(0,0,0)').style('stroke-opacity', 1);
        }
        var xticks = ()=>{
            for(var x = xaxis[0]; x <= xaxis[1]; x += this.dx){
                line(x, origin[1] - 5, x, origin[1] + 5);
            }
        };
        var yticks = ()=>{
            for(var y = yaxis[0]; y <= yaxis[1]; y += this.dy){
                line(origin[0] - 5, y, origin[0] + 5, y);
            }
        };
        line(xaxis[0], origin[1], xaxis[1], origin[1]);
        line(origin[0], yaxis[0], origin[0], yaxis[1]);
        if (this.ticks.match(/all/)) {
            xticks();
            yticks();
        } else if (this.ticks.match(/x/)) {
            xticks();
        } else if (this.ticks.match(/y/)) {
            yticks();
        }
        if (this.arrows[0]) {
            svg.append('path').attr('d', arrow(xaxis[1], origin[1], xaxis[0], origin[1])).style('fill', 'black').style('stroke', 'black');
            svg.append('path').attr('d', arrow(origin[0], yaxis[1], origin[0], yaxis[0])).style('fill', 'black').style('stroke', 'black');
        }
        if (this.arrows[1]) {
            svg.append('path').attr('d', arrow(xaxis[0], origin[1], xaxis[1], origin[1])).style('fill', 'black').style('stroke', 'black');
            svg.append('path').attr('d', arrow(origin[0], yaxis[0], origin[0], yaxis[1])).style('fill', 'black').style('stroke', 'black');
        }
    },
    psline (svg) {
        var linewidth = this.linewidth, linecolor = this.linecolor;
        function solid(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-opacity', 1);
        }
        function dashed(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-dasharray', '9,5').style('stroke-opacity', 1);
        }
        function dotted(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-dasharray', '9,5').style('stroke-opacity', 1);
        }
        if (this.linestyle.match(/dotted/)) {
            dotted(this.x1, this.y1, this.x2, this.y2);
        } else if (this.linestyle.match(/dashed/)) {
            dashed(this.x1, this.y1, this.x2, this.y2);
        } else {
            solid(this.x1, this.y1, this.x2, this.y2);
        }
        if (this.dots[0]) {
            svg.append('svg:circle').attr('cx', this.x1).attr('cy', this.y1).attr('r', 3).style('stroke', this.linecolor).style('fill', this.linecolor).style('stroke-width', 1).style('stroke-opacity', 1);
        }
        if (this.dots[1]) {
            svg.append('svg:circle').attr('cx', this.x2).attr('cy', this.y2).attr('r', 3).style('stroke', this.linecolor).style('fill', this.linecolor).style('stroke-width', 1).style('stroke-opacity', 1);
        }
        var x1 = this.x1, y1 = this.y1, x2 = this.x2, y2 = this.y2;
        if (this.arrows[0]) {
            svg.append('path').attr('d', arrow(x2, y2, x1, y1)).style('fill', this.linecolor).style('stroke', this.linecolor);
        }
        if (this.arrows[1]) {
            svg.append('path').attr('d', arrow(x1, y1, x2, y2)).style('fill', this.linecolor).style('stroke', this.linecolor);
        }
    },
    userline (svg) {
        var linewidth = this.linewidth, linecolor = this.linecolor;
        function solid(x1, y1, x2, y2) {
            svg.append('svg:path').attr('class', 'userline').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-opacity', 1);
        }
        function dashed(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).attr('class', 'userline').style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-dasharray', '9,5').style('stroke-opacity', 1);
        }
        function dotted(x1, y1, x2, y2) {
            svg.append('svg:path').attr('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2).attr('class', 'userline').style('stroke-width', linewidth).style('stroke', linecolor).style('stroke-dasharray', '9,5').style('stroke-opacity', 1);
        }
        if (this.linestyle.match(/dotted/)) {
            dotted(this.x1, this.y1, this.x2, this.y2);
        } else if (this.linestyle.match(/dashed/)) {
            dashed(this.x1, this.y1, this.x2, this.y2);
        } else {
            solid(this.x1, this.y1, this.x2, this.y2);
        }
        if (this.dots[0]) {
            svg.append('svg:circle').attr('cx', this.x1).attr('cy', this.y1).attr('r', 3).attr('class', 'userline').style('stroke', this.linecolor).style('fill', this.linecolor).style('stroke-width', 1).style('stroke-opacity', 1);
        }
        if (this.dots[1]) {
            svg.append('svg:circle').attr('cx', this.x2).attr('cy', this.y2).attr('r', 3).attr('class', 'userline').style('stroke', this.linecolor).style('fill', this.linecolor).style('stroke-width', 1).style('stroke-opacity', 1);
        }
        var x1 = this.x1, y1 = this.y1, x2 = this.x2, y2 = this.y2;
        if (this.arrows[0]) {
            svg.append('path').attr('d', arrow(x2, y2, x1, y1)).attr('class', 'userline').style('fill', this.linecolor).style('stroke', this.linecolor);
        }
        if (this.arrows[1]) {
            svg.append('path').attr('d', arrow(x1, y1, x2, y2)).attr('class', 'userline').style('fill', this.linecolor).style('stroke', this.linecolor);
        }
    },
    rput (el) {
        // Import debug utilities
        const startTime = Date.now();
        // Validate coordinates
        const x = this.x;
        const y = this.y;
        if (typeof x !== 'number' || typeof y !== 'number' || isNaN(x) || isNaN(y)) {
            console.warn('RPUT: Invalid coordinates detected', {
                x,
                y,
                text: this.text
            });
            return;
        }
        // Validate parent container
        if (!el || !el.appendChild) {
            console.warn('RPUT: Invalid parent container provided');
            return;
        }
        // Validate content
        if (!this.text || typeof this.text !== 'string') {
            console.warn('RPUT: Invalid text content', {
                text: this.text
            });
            return;
        }
        const div = document.createElement('div');
        // Set up element with improved styling for better measurement
        div.className = 'math';
        div.style.position = 'absolute';
        div.style.visibility = 'hidden';
        div.style.whiteSpace = 'nowrap'; // Prevent text wrapping during measurement
        div.style.top = `${y}px`;
        div.style.left = `${x}px`;
        div.style.pointerEvents = 'none'; // Prevent interference during positioning
        // Add data attributes for debugging
        div.setAttribute('data-rput-x', x.toString());
        div.setAttribute('data-rput-y', y.toString());
        div.setAttribute('data-rput-text', this.text);
        // Enhanced positioning function with better measurement
        const positionElement = ()=>{
            return new Promise((resolve)=>{
                // Use requestAnimationFrame to ensure DOM has been updated
                requestAnimationFrame(()=>{
                    try {
                        // Get accurate bounding box
                        const rect = div.getBoundingClientRect();
                        // Validate measurements
                        if (rect.width === 0 || rect.height === 0) {
                            console.warn('RPUT: Element has zero dimensions, retrying...', {
                                text: this.text,
                                rect: {
                                    width: rect.width,
                                    height: rect.height
                                }
                            });
                            // Retry measurement after a short delay
                            setTimeout(()=>{
                                const retryRect = div.getBoundingClientRect();
                                const w = retryRect.width / 2;
                                const h = retryRect.height / 2;
                                // Apply centering with fallback for zero dimensions
                                div.style.top = `${y - (h || 10)}px`;
                                div.style.left = `${x - (w || 20)}px`;
                                div.style.visibility = 'visible';
                                div.style.pointerEvents = 'auto';
                                resolve();
                            }, 10);
                            return;
                        }
                        // Calculate center offsets
                        const centerX = rect.width / 2;
                        const centerY = rect.height / 2;
                        // Apply precise centering
                        div.style.top = `${y - centerY}px`;
                        div.style.left = `${x - centerX}px`;
                        div.style.visibility = 'visible';
                        div.style.pointerEvents = 'auto';
                        resolve();
                    } catch (error) {
                        console.error('RPUT: Error during positioning', error);
                        // Fallback positioning
                        div.style.top = `${y}px`;
                        div.style.left = `${x}px`;
                        div.style.visibility = 'visible';
                        div.style.pointerEvents = 'auto';
                        resolve();
                    }
                });
            });
        };
        // Enhanced MathJax processing with better async handling
        const processContent = async ()=>{
            const mathJax = window.MathJax;
            if (mathJax && mathJax.typesetPromise) {
                try {
                    // Set content before MathJax processing
                    div.innerHTML = this.text;
                    // Process with MathJax
                    await mathJax.typesetPromise([
                        div
                    ]);
                    // Wait for MathJax to complete rendering
                    await new Promise((resolve)=>setTimeout(resolve, 0));
                    // Position element after MathJax is complete
                    await positionElement();
                } catch (error) {
                    console.error('MathJax typesetting failed:', error);
                    // Fallback to plain HTML
                    div.innerHTML = this.text;
                    await positionElement();
                }
            } else {
                // No MathJax available, use plain HTML
                div.innerHTML = this.text;
                await positionElement();
            }
        };
        // Ensure parent is ready before appending
        if (el.isConnected === false) {
            console.warn('RPUT: Parent container not connected to DOM');
        }
        // Append to DOM
        el.appendChild(div);
        // Process content asynchronously
        processContent().catch((error)=>{
            console.error('RPUT: Failed to process content', error);
            // Emergency fallback
            div.style.visibility = 'visible';
            div.style.pointerEvents = 'auto';
        });
    },
    pspicture (svg) {
        var env = this.env;
        var el = this.$el;
        Object.keys(this.plot).forEach((key)=>{
            const plot = this.plot[key];
            if (key.match(/rput/)) return;
            if (psgraph.hasOwnProperty(key)) {
                plot.forEach((data)=>{
                    data.data.global = env;
                    psgraph[key].call(data.data, svg);
                });
            }
        });
        svg.on('touchmove', function(event) {
            event.preventDefault();
            var touchcoords = event.touches ? event.touches[0] : [
                0,
                0
            ];
            userEvent(touchcoords);
        });
        svg.on('mousemove', function(event) {
            var coords = [
                event.offsetX || 0,
                event.offsetY || 0
            ];
            userEvent(coords);
        });
        const plots = this.plot;
        function userEvent(coords) {
            svg.selectAll('.userline').remove();
            svg.selectAll('.psplot').remove();
            var currentEnvironment = {};
            Object.entries(plots || {}).forEach(([k, plot])=>{
                if (k.match(/uservariable/)) {
                    plot.forEach((data)=>{
                        data.env.userx = coords[0];
                        data.env.usery = coords[1];
                        var dd = data.fn.call(data.env, data.match);
                        currentEnvironment[data.data.name] = dd.value;
                    });
                }
            });
            Object.entries(plots || {}).forEach(([k, plot])=>{
                if (k.match(/psplot/)) {
                    plot.forEach((data)=>{
                        Object.entries(currentEnvironment || {}).forEach(([name, variable])=>{
                            data.env.variables[name] = variable;
                        });
                        var d = data.fn.call(data.env, data.match);
                        d.global = {};
                        Object.assign(d.global, env);
                        psgraph[k].call(d, svg);
                    });
                }
                if (k.match(/userline/)) {
                    plot.forEach((data)=>{
                        var d = data.fn.call(data.env, data.match);
                        data.env.x2 = coords[0];
                        data.env.y2 = coords[1];
                        data.data.x2 = data.env.x2;
                        data.data.y2 = data.env.y2;
                        if (data.data.xExp2) {
                            data.data.x2 = d.userx2(coords);
                            data.data.x1 = d.userx(coords);
                        } else if (data.data.xExp) {
                            data.data.x2 = d.userx(coords);
                        }
                        if (data.data.yExp2) {
                            data.data.y2 = d.usery2(coords);
                            data.data.y1 = d.usery(coords);
                        } else if (data.data.yExp) {
                            data.data.y2 = d.usery(coords);
                        }
                        d.global = {};
                        Object.assign(d.global, env);
                        Object.assign(d, data.data);
                        psgraph[k].call(d, svg);
                    });
                }
            });
        }
        // Enhanced cleanup and RPUT processing
        psgraph.processRputElements.call(this, el);
    },
    processRputElements (el) {
        // Validate container
        if (!el || typeof el.querySelectorAll !== 'function') {
            console.warn('RPUT: Invalid container for RPUT processing');
            return;
        }
        // Validate RPUT data
        if (!this.plot || !Array.isArray(this.plot.rput)) {
            console.warn('RPUT: No RPUT data to process');
            return;
        }
        // Enhanced cleanup with better error handling
        try {
            // Remove existing RPUT elements
            const existingElements = el.querySelectorAll('.math[data-rput-x]');
            let cleanupCount = 0;
            existingElements.forEach((element)=>{
                try {
                    // Clean up any pending async operations
                    element.style.visibility = 'hidden';
                    element.remove();
                    cleanupCount++;
                } catch (error) {
                    console.warn('RPUT: Error removing existing element', error);
                }
            });
            if (cleanupCount > 0) {
                console.log(`RPUT: Cleaned up ${cleanupCount} existing elements`);
            }
            // Wait for DOM to settle after cleanup
            requestAnimationFrame(()=>{
                psgraph.renderRputElements.call(this, el);
            });
        } catch (error) {
            console.error('RPUT: Error during cleanup', error);
            // Fallback to immediate rendering
            psgraph.renderRputElements.call(this, el);
        }
    },
    renderRputElements (el) {
        if (!this.plot?.rput || this.plot.rput.length === 0) {
            return;
        }
        // Track rendering for debugging
        console.log(`RPUT: Rendering ${this.plot.rput.length} elements`);
        // Process RPUT elements with better error isolation
        const renderPromises = [];
        this.plot.rput.forEach((rput, index)=>{
            try {
                // Validate RPUT data
                if (!rput || !rput.data) {
                    console.warn(`RPUT: Invalid RPUT data at index ${index}`, rput);
                    return;
                }
                // Add global context
                rput.data.global = this.env;
                // Create a promise for this RPUT element
                const renderPromise = new Promise((resolve)=>{
                    try {
                        // Use setTimeout to prevent blocking the main thread
                        setTimeout(()=>{
                            psgraph.rput.call(rput.data, el);
                            resolve();
                        }, index * 10); // Stagger rendering slightly
                    } catch (error) {
                        console.error(`RPUT: Error rendering element ${index}`, error);
                        resolve();
                    }
                });
                renderPromises.push(renderPromise);
            } catch (error) {
                console.error(`RPUT: Error processing element ${index}`, error);
            }
        });
        // Wait for all RPUT elements to be processed
        Promise.all(renderPromises).then(()=>{
            console.log('RPUT: All elements rendered successfully');
        }).catch((error)=>{
            console.error('RPUT: Error in batch rendering', error);
        });
    }
};
;
const __TURBOPACK__default__export__ = psgraph;
}}),
"[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript)");
;
;
;
const __TURBOPACK__default__export__ = {
    pstricks: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    psgraph: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    arrow: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrow"]
};
}}),
"[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript) <export default as pstricks>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "pstricks": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/latex2js/esm/lib/environments.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
const environments = [
    'pspicture',
    'verbatim',
    'enumerate',
    'print',
    'nicebox'
];
const __TURBOPACK__default__export__ = environments;
}}),
"[project]/node_modules/latex2js/esm/lib/ignore.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
const ignore = [
    /^\%/,
    /\\begin\{document\}/,
    /\\end\{document\}/,
    /\\begin\{interactive\}/,
    /\\end\{interactive\}/,
    /\\usepackage/,
    /\\documentclass/,
    /\\tableofcontents/,
    /\\author/,
    /\\date/,
    /\\maketitle/,
    /\\title/,
    /\\pagestyle/,
    /\\smallskip/,
    /\\medskip/,
    /\\bigskip/,
    /\\nobreak/,
    /\\begin\{center\}/,
    /\\end\{center\}/
];
const __TURBOPACK__default__export__ = ignore;
}}),
"[project]/node_modules/latex2js/esm/lib/parser.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
class Parser {
    constructor(LaTeX2JS){
        this.Ignore = LaTeX2JS.Ignore;
        this.Delimiters = LaTeX2JS.Delimiters;
        this.Text = LaTeX2JS.Text;
        this.PSTricks = LaTeX2JS.PSTricks;
        this.Headers = LaTeX2JS.Headers;
        this.objects = [];
        this.environment = null;
        this.settings = this.PSTricks.Functions.psset.call(this, [
            '',
            'units=1cm,linecolor=black,linestyle=solid,fillstyle=none'
        ]);
    }
    parse(text) {
        if (!text) return [];
        var lines = text.split('\n');
        this.parseEnvText(lines);
        this.parseEnv(lines);
        this.objects.forEach((obj)=>{
            if (obj.type.match(/pspicture/)) {
                obj.plot = this.parsePSTricks(obj.lines, obj.env);
            }
        });
        return this.objects;
    }
    newEnvironment(type) {
        if (this.environment && this.environment.lines.length) {
            this.environment.settings = {
                ...this.settings
            };
            this.objects.push(this.environment);
        }
        this.environment = {
            type: type,
            lines: []
        };
    }
    pushLine(line) {
        var add = true;
        this.Ignore.forEach((exp)=>{
            if (exp.test(line)) {
                add = false;
            }
        });
        if (add) {
            if (typeof line === 'string' && line.trim().length) {
                if (this.PSTricks.Expressions.psset.test(line)) {
                    this.parseUnits(line);
                } else {
                    this.environment.lines.push(line);
                }
            }
        }
    }
    parseUnits(line) {
        var m = line.match(this.PSTricks.Expressions.psset);
        Object.assign(this.settings, this.PSTricks.Functions.psset.call(this, m));
    }
    metaData(environment, line) {
        if (this.PSTricks.Expressions.hasOwnProperty(environment)) {
            this.environment.match = line.match(this.PSTricks.Expressions[environment]);
            this.environment.env = this.PSTricks.Functions[environment].call(this.settings, this.environment.match);
            if (environment.match(/pspicture/)) {
                if (typeof this.environment.env.xunit === 'undefined') {
                    this.environment.env.xunit = this.settings.xunit;
                }
                if (typeof this.environment.env.yunit === 'undefined') {
                    this.environment.env.yunit = this.settings.yunit;
                }
            }
        }
    }
    parseEnv(lines) {
        this.objects = [];
        this.environment = {
            type: 'math',
            lines: []
        };
        const Delimiters = this.Delimiters;
        lines.forEach((line)=>{
            var isDelim = false;
            Object.entries(Delimiters).forEach(([env, type])=>{
                Object.entries(type).forEach(([k, delim])=>{
                    if (line.match(delim)) {
                        isDelim = true;
                        if (k.match(/begin/)) {
                            if (this.environment.type.match(/verbatim/)) {
                                isDelim = false;
                            } else if (this.environment.type.match(/print/)) {
                                isDelim = false;
                            } else {
                                this.newEnvironment(env);
                                this.metaData(env, line);
                            }
                        } else if (k.match(/end/)) {
                            if (this.environment.type.match(/verbatim/)) {
                                if (env.match(/verbatim/)) {
                                    this.newEnvironment('math');
                                } else {
                                    isDelim = false;
                                }
                            } else if (this.environment.type.match(/print/)) {
                                if (env.match(/print/)) {
                                    this.newEnvironment('math');
                                } else {
                                    isDelim = false;
                                }
                            } else {
                                this.newEnvironment('math');
                            }
                        }
                    }
                });
            });
            if (!isDelim) this.pushLine(line); // }
        });
        // push last!
        this.newEnvironment('math');
    }
    parseEnvText(lines) {
        var _env = 'math';
        const Delimiters = this.Delimiters;
        lines.forEach((line, i)=>{
            var isDelim = false;
            Object.entries(Delimiters).forEach(([env, type])=>{
                Object.entries(type).forEach(([k, delim])=>{
                    if (line.match(delim)) {
                        isDelim = true;
                        if (k.match(/begin/)) {
                            if (!_env.match(/verbatim/)) {
                                _env = env;
                            } else {
                                isDelim = false;
                            }
                        } else if (k.match(/end/)) {
                            if (!_env.match(/verbatim/)) {
                                _env = 'math';
                            } else {
                                if (!env.match(/verbatim/)) {
                                    isDelim = false;
                                } else {
                                    _env = 'math';
                                }
                            }
                        }
                    }
                });
            });
            if (!isDelim) {
                if (!_env.match(/verbatim/)) {
                    lines[i] = this.parseText(line);
                }
                if (!line.trim().length) {
                    lines[i] = '<br>';
                }
            }
        });
    }
    parsePSExpression(line, exp, plot, k, env) {
        var match = line.match(exp);
        if (match) {
            plot[k].push({
                data: this.PSTricks.Functions[k].call(env, match),
                env: env,
                match: match,
                fn: this.PSTricks.Functions[k]
            });
            return true;
        }
        return false;
    }
    parsePSVariables(line, exp, _plot, k, env) {
        var match = line.match(exp);
        if (match) {
            if (k.match(/uservariable/)) {
                var dd = this.PSTricks.Functions[k].call(env, match);
                env.variables = env.variables || {};
                env.variables[dd.name] = dd.value;
            }
        }
    }
    parsePSTricks(lines, env) {
        var plot = {};
        const entries = Object.entries(this.PSTricks.Expressions);
        entries.forEach(([k, _exp])=>{
            plot[k] = [];
        });
        lines.forEach((line)=>{
            entries.forEach(([k, exp])=>{
                this.parsePSVariables(line, exp, plot, k, env);
                const result = this.parsePSExpression(line, exp, plot, k, env);
                if (result && k === 'psaxes' && plot[k].length > 0) {
                    const axesData = plot[k][plot[k].length - 1].data;
                    if (axesData && axesData.dx !== undefined) {
                        env.dx = axesData.dx;
                        env.dy = axesData.dy;
                        env.origin = axesData.origin;
                    }
                }
            });
        });
        return plot;
    }
    parseTextExpression(line, exp, k, contents) {
        var match = line.match(exp);
        if (match) {
            return this.Text.Functions[k].call(this, match, contents);
        }
        return contents;
    }
    parseHeadersExpression(line, exp, k, contents) {
        var match = line.match(exp);
        if (match) {
            return this.Headers.Functions[k].call(this);
        }
        return contents;
    }
    parseText(line) {
        var contents = line;
        // TEXT
        Object.entries(this.Text.Expressions).forEach(([k, exp])=>{
            contents = this.parseTextExpression(line, exp, k, contents);
        });
        // HEADERS
        Object.entries(this.Headers.Expressions).forEach(([k, exp])=>{
            contents = this.parseHeadersExpression(line, exp, k, contents);
        });
        return contents;
    }
}
const __TURBOPACK__default__export__ = Parser;
}}),
"[project]/node_modules/latex2js/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>LaTeX2HTML5)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/lib/text.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$headers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/lib/headers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pstricks$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/pstricks.js [app-client] (ecmascript) <export default as pstricks>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$environments$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/lib/environments.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$ignore$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/lib/ignore.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$parser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/lib/parser.js [app-client] (ecmascript)");
;
;
;
;
;
;
class LaTeX2HTML5 {
    constructor(Text = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], Headers = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$headers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], Environments = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$environments$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], Ignore = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$ignore$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], PSTricks = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$pstricks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__pstricks$3e$__["pstricks"], Views = {}){
        this.Text = Text;
        this.Headers = Headers;
        this.Environments = Environments;
        this.Ignore = Ignore;
        this.PSTricks = PSTricks;
        this.Views = Views;
        this.Delimiters = {};
        Environments.forEach((name)=>{
            this.addEnvironment(name);
        });
    }
    addEnvironment(name) {
        var delim = {
            begin: new RegExp('\\\\begin\\{' + name + '\\}'),
            end: new RegExp('\\\\end\\{' + name + '\\}')
        };
        this.Delimiters[name] = delim;
    }
    addView(name, _options) {
        this.addEnvironment(name);
    // var view = {};
    // this.Views[name] = this.BaseEnvView.extend(options);
    }
    addText(name, exp, func) {
        this.Text.Expressions[name] = exp;
        this.Text.Functions[name] = func;
    }
    addHeaders(name, begin, end) {
        var exp = {};
        var beginHash = name + 'begin';
        var endHash = name + 'end';
        exp[beginHash] = new RegExp('\\\\begin\\{' + name + '\\}');
        exp[endHash] = new RegExp('\\\\end\\{' + name + '\\}');
        Object.assign(this.Headers.Expressions, exp);
        var fns = {};
        fns[beginHash] = function() {
            return begin || '';
        };
        fns[endHash] = function() {
            return end || '';
        };
        Object.assign(this.Headers.Functions, fns);
    }
    getParser() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$parser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"](this);
    }
    parse(text) {
        const parser = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$lib$2f$parser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"](this);
        const parsed = parser.parse(text);
        parsed.forEach((element)=>{
            if (!element.hasOwnProperty('type')) {
                throw new Error('no type!');
            }
        // TODO implement rendering
        });
        return parsed;
    }
}
}}),
"[project]/node_modules/latex2react/esm/components/nicebox.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = ({ children })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        className: "nicebox",
        style: {
            border: '1px solid #ccc',
            padding: '10px',
            margin: '10px 0',
            borderRadius: '4px',
            backgroundColor: '#f9f9f9'
        },
        children: children
    });
}}),
"[project]/node_modules/latex2react/esm/components/enumerate.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = ({ items })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("ol", {
        children: items && items.map((item, index)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("li", {
                children: item
            }, index))
    });
}}),
"[project]/node_modules/latex2react/esm/components/verbatim.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = ({ lines })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("pre", {
        className: "verbatim",
        style: {
            backgroundColor: '#f5f5f5',
            padding: '10px',
            borderRadius: '4px',
            overflow: 'auto'
        },
        dangerouslySetInnerHTML: {
            __html: lines.join('\n')
        }
    });
}}),
"[project]/node_modules/latex2react/esm/components/math.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = ({ lines })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
        className: "math",
        dangerouslySetInnerHTML: {
            __html: lines.join('\n')
        }
    });
}}),
"[project]/node_modules/latex2react/esm/components/macros.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = ({ content })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        style: {
            display: 'none'
        },
        children: content
    });
}}),
"[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript) <export default as psgraph>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "psgraph": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/latex2react/esm/components/slider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/svg-utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript) <export default as psgraph>");
;
;
;
const __TURBOPACK__default__export__ = ({ env, slider, svgRef, plot })=>{
    const { latex, scalar, variable, value, min, max } = slider;
    const onChange = (event)=>{
        // update value
        var val = event.target.value / scalar;
        if (!env.variables) {
            env.variables = {};
        }
        env.variables[variable] = val;
        // update svg
        if (svgRef.current) {
            const svg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["select"])(svgRef.current);
            svg.selectAll('.psplot').remove();
            Object.entries(plot).forEach(([k, plotData])=>{
                if (k.match(/psplot/)) {
                    plotData.forEach((data)=>{
                        const d = data.fn.call(data.env, data.match);
                        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"][k] && d && svg) {
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"][k].call(d, svg);
                        }
                    });
                }
            });
        }
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("label", {
        children: [
            latex,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("input", {
                type: "range",
                min: min * scalar,
                max: max * scalar,
                defaultValue: value,
                onChange: onChange
            })
        ]
    });
};
}}),
"[project]/node_modules/latex2react/esm/components/pspicture.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/pstricks/esm/lib/psgraph.js [app-client] (ecmascript) <export default as psgraph>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@latex2js/utils/esm/svg-utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$slider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/slider.js [app-client] (ecmascript)");
;
;
;
;
;
const __TURBOPACK__default__export__ = (props)=>{
    const svgRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const divRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const size = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"].getSize.call(props);
    const width = `${size.width}px`;
    const height = `${size.height}px`;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useEffect": ()=>{
            if (svgRef.current && divRef.current) {
                const svgEl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["select"])(svgRef.current);
                const obj = {
                    ...props
                };
                obj.$el = divRef.current;
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"].pspicture.call(obj, svgEl);
            }
        }
    }["useEffect"], [
        props
    ]);
    const handleMouseMove = (event)=>{
        const coords = [
            event.nativeEvent.offsetX || 0,
            event.nativeEvent.offsetY || 0
        ];
        userEventHandler(coords);
    };
    const handleTouchMove = (event)=>{
        event.preventDefault();
        const touch = event.touches[0];
        if (touch && svgRef.current) {
            const rect = svgRef.current.getBoundingClientRect();
            const coords = [
                touch.clientX - rect.left,
                touch.clientY - rect.top
            ];
            userEventHandler(coords);
        }
    };
    const userEventHandler = (coords)=>{
        if (!svgRef.current) return;
        const svgEl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$utils$2f$esm$2f$svg$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["select"])(svgRef.current);
        svgEl.selectAll('.userline').remove();
        svgEl.selectAll('.psplot').remove();
        var currentEnvironment = {};
        const plots = props.plot;
        Object.entries(plots || {}).forEach(([k, plot])=>{
            if (k.match(/uservariable/)) {
                plot.forEach((data)=>{
                    data.env.userx = coords[0];
                    data.env.usery = coords[1];
                    var dd = data.fn.call(data.env, data.match);
                    currentEnvironment[data.data.name] = dd.value;
                });
            }
        });
        Object.entries(plots || {}).forEach(([k, plot])=>{
            if (k.match(/psplot/)) {
                plot.forEach((data)=>{
                    Object.entries(currentEnvironment || {}).forEach(([name, variable])=>{
                        data.env.variables[name] = variable;
                    });
                    var d = data.fn.call(data.env, data.match);
                    d.global = {};
                    Object.assign(d.global, props.env);
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"][k].call(d, svgEl);
                });
            }
            if (k.match(/userline/)) {
                plot.forEach((data)=>{
                    var d = data.fn.call(data.env, data.match);
                    data.env.x2 = coords[0];
                    data.env.y2 = coords[1];
                    data.data.x2 = data.env.x2;
                    data.data.y2 = data.env.y2;
                    if (data.data.xExp2) {
                        data.data.x2 = d.userx2(coords);
                        data.data.x1 = d.userx(coords);
                    } else if (data.data.xExp) {
                        data.data.x2 = d.userx(coords);
                    }
                    if (data.data.yExp2) {
                        data.data.y2 = d.usery2(coords);
                        data.data.y1 = d.usery(coords);
                    } else if (data.data.yExp) {
                        data.data.y2 = d.usery(coords);
                    }
                    d.global = {};
                    Object.assign(d.global, props.env);
                    Object.assign(d, data.data);
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$latex2js$2f$pstricks$2f$esm$2f$lib$2f$psgraph$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__psgraph$3e$__["psgraph"][k].call(d, svgEl);
                });
            }
        });
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("div", {
        className: "pspicture",
        style: {
            width: width,
            height: height
        },
        ref: divRef,
        children: [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("svg", {
                width: size.width,
                height: size.height,
                ref: svgRef,
                onMouseMove: handleMouseMove,
                onTouchMove: handleTouchMove,
                style: {
                    cursor: 'crosshair'
                }
            }),
            props.env.sliders && props.env.sliders.map((slider, index)=>{
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$slider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    slider: slider,
                    env: props.env,
                    svgRef: svgRef,
                    plot: props.plot
                }, index);
            })
        ]
    });
};
}}),
"[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DEFAULT_CONFIG": (()=>DEFAULT_CONFIG),
    "getMathJax": (()=>getMathJax),
    "loadMathJax": (()=>loadMathJax)
});
const DEFAULT_CONFIG = {
    tex: {
        inlineMath: [
            [
                '$',
                '$'
            ],
            [
                '\\(',
                '\\)'
            ]
        ],
        displayMath: [
            [
                '$$',
                '$$'
            ],
            [
                '\\[',
                '\\]'
            ]
        ],
        processEscapes: true,
        processEnvironments: true,
        packages: [
            'base',
            'ams',
            'newcommand',
            'configmacros'
        ]
    },
    chtml: {
        linebreaks: {
            automatic: true,
            width: 'container'
        }
    },
    startup: {
        ready: ()=>{
            console.log('MathJax v3 startup ready');
        }
    }
};
let mathJaxInstance = null;
const getMathJax = ()=>mathJaxInstance || globalThis.MathJax;
const loadMathJax = async (callback = ()=>{}, config = DEFAULT_CONFIG)=>{
    if (typeof window === 'undefined') {
        callback();
        return;
    }
    if (globalThis.MathJax) {
        mathJaxInstance = globalThis.MathJax;
        callback();
        return;
    }
    try {
        globalThis.MathJax = {
            ...config,
            startup: {
                ...config.startup,
                ready: ()=>{
                    globalThis.MathJax.startup.defaultReady();
                    mathJaxInstance = globalThis.MathJax;
                    if (config.startup?.ready) {
                        config.startup.ready();
                    }
                    callback();
                }
            }
        };
        const script = document.createElement('script');
        script.src = 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js';
        script.async = true;
        script.id = 'MathJax-script';
        script.onload = ()=>{
            console.log('MathJax v3 script loaded from CDN');
        };
        script.onerror = ()=>{
            console.error('Failed to load MathJax v3 from CDN');
            callback();
        };
        document.head.appendChild(script);
    } catch (error) {
        console.error('Failed to load MathJax v3:', error);
        callback();
    }
};
}}),
"[project]/node_modules/mathjaxjs-react/esm/components/MathJaxProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)");
;
;
function MathJaxProvider({ children, config, loadingComponent, className = "" }) {
    const [mathJaxLoaded, setMathJaxLoaded] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const finalConfig = {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_CONFIG"],
        ...config,
        tex: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_CONFIG"].tex,
            ...config?.tex,
            packages: config?.tex?.packages || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_CONFIG"].tex.packages
        },
        chtml: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_CONFIG"].chtml,
            ...config?.chtml
        }
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "MathJaxProvider.useEffect": ()=>{
            if (typeof window !== 'undefined') {
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMathJax"])()) {
                    setMathJaxLoaded(true);
                } else {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadMathJax"])({
                        "MathJaxProvider.useEffect": ()=>{
                            setMathJaxLoaded(true);
                        }
                    }["MathJaxProvider.useEffect"], finalConfig);
                }
            }
        }
    }["MathJaxProvider.useEffect"], []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "MathJaxProvider.useEffect": ()=>{
            if (mathJaxLoaded && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMathJax"])()) {
                const mathJax = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMathJax"])();
                if (mathJax && mathJax.typesetPromise) {
                    mathJax.typesetPromise().then({
                        "MathJaxProvider.useEffect": ()=>{
                            console.log('MathJax typesetting complete');
                        }
                    }["MathJaxProvider.useEffect"]);
                }
            }
        }
    }["MathJaxProvider.useEffect"], [
        mathJaxLoaded
    ]);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement('div', {
        className
    }, mathJaxLoaded ? children : loadingComponent || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement('div', null, 'Loading MathJax...'));
}
const __TURBOPACK__default__export__ = MathJaxProvider;
}}),
"[project]/node_modules/mathjaxjs-react/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2d$react$2f$esm$2f$components$2f$MathJaxProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs-react/esm/components/MathJaxProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)");
;
;
}}),
"[project]/node_modules/mathjaxjs-react/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2d$react$2f$esm$2f$components$2f$MathJaxProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs-react/esm/components/MathJaxProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2d$react$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs-react/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/latex2react/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "LaTeX": (()=>LaTeX)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$nicebox$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/nicebox.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$enumerate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/enumerate.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$verbatim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/verbatim.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/math.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$macros$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/macros.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$pspicture$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/pspicture.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$slider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/slider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2d$react$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs-react/esm/index.js [app-client] (ecmascript) <module evaluation>");
;
;
const { Component, createElement } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__;
;
;
;
;
;
;
;
;
;
;
const ELEMENTS = {
    nicebox: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$nicebox$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    enumerate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$enumerate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    verbatim: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$verbatim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    math: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    macros: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$macros$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    pspicture: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$pspicture$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
    slider: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$slider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"]
};
;
class LaTeX extends Component {
    constructor(props){
        super(props);
        this.containerRef = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.createRef();
        this.typesetMath = ()=>{
            const mathJax = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getMathJax"])();
            if (mathJax && mathJax.typesetPromise && this.containerRef.current) {
                mathJax.typesetPromise([
                    this.containerRef.current
                ]).catch((err)=>{
                    console.error('MathJax typesetting failed:', err);
                });
            }
        };
        this.state = {
            mathJaxLoaded: false
        };
    }
    componentDidMount() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadMathJax"])(()=>{
            this.setState({
                mathJaxLoaded: true
            }, ()=>{
                this.typesetMath();
            });
        });
    }
    componentDidUpdate(prevProps) {
        if (prevProps.content !== this.props.content && this.state.mathJaxLoaded) {
            this.typesetMath();
        }
    }
    render() {
        if (!this.state.mathJaxLoaded) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
                className: "latex-container",
                children: "Loading..."
            });
        }
        const latex = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"]();
        const parsed = latex.parse(this.props.content);
        const children = [];
        parsed && parsed.forEach && parsed.forEach((el)=>{
            if (ELEMENTS.hasOwnProperty(el.type)) {
                const elementType = el.type;
                const Component = ELEMENTS[elementType];
                children.push(createElement(Component, {
                    ...el,
                    key: children.length
                }));
            }
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
            className: "latex-container",
            ref: this.containerRef,
            children: children
        });
    }
}
}}),
"[project]/node_modules/latex2react/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2js/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$nicebox$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/nicebox.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$enumerate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/enumerate.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$verbatim$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/verbatim.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$math$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/math.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$macros$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/macros.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$pspicture$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/pspicture.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$components$2f$slider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/components/slider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$mathjaxjs$2d$react$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/mathjaxjs-react/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$latex2react$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/latex2react/esm/index.js [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_cb18a3e5._.js.map